@model MemberIndexListViewModel
@{
    ViewData["Title"] = "BlueDeck Member List";
}

<nav class="pageBar navbar navbar-default navbar-fixed-top">
    <div class="container-fluid">
        <!-- Brand and toggle get grouped for better mobile display -->
        <div class="navbar-header">
            <span class="navbar-brand">Member Index</span>
            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1" aria-expanded="false">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>

        </div>
        <div class="navbar-header pull-left">
            <form asp-page="/Index" method="get" class="navbar-form navbar-search">
                <div class="form-group">
                    <div class="input-group">
                        <input type="text" name="SearchString" class="bigControl searchBox form-control" value="@Model.CurrentFilter" placeholder="Search Members" />
                        <div class="input-group-btn">
                            <button class="btn btn-search-addon" type="submit">
                                <i class="glyphicon glyphicon-search"></i>
                            </button>
                        </div>
                    </div>
                </div>
            </form>
        </div>
        <!-- Collect the nav links, forms, and other content for toggling -->
        <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
            <ul class="nav navbar-nav">
                @{
                    if (Model.CurrentFilter != null)
                    {
                        <li><a asp-page="/Index"><i class="ion-md-arrow-round-back"></i> Back to full List</a></li>
                    }
                }
                <li><a asp-action="Create"><i class="ion-md-person-add"></i> Create a New Member</a></li>
            </ul>
        </div><!-- /.navbar-collapse -->
    </div><!-- /.container-fluid -->
</nav>
<h6 class="text-danger">@ViewBag.Message</h6>

<div class="table-responsive" style="margin-top: 70px">
    <table class="table indexTable">
        <thead>
            <tr>
                <th>
                    <a asp-page="/Index" asp-route-sortOrder="@Model.MemberLastNameSort"
                       asp-route-searchString="@Model.CurrentFilter">
                        @Html.DisplayNameFor(model => model.Members.First().LastName)
                        @if (Model.CurrentSort == "lastName_desc")
                        {
                            <span class="glyphicon glyphicon-sort-by-alphabet"></span>
                        }
                        else
                        {
                            <span class="glyphicon glyphicon-sort-by-alphabet-alt"></span>
                        }
                    </a>
                </th>
                <th>
                    <a asp-page="/Index" asp-route-sortOrder="@Model.MemberFirstNameSort"
                       asp-route-searchString="@Model.CurrentFilter">
                        @Html.DisplayNameFor(model => model.Members.First().FirstName)
                        @if (Model.CurrentSort == "firstName_desc")
                        {
                            <span class="glyphicon glyphicon-sort-by-alphabet"></span>
                        }
                        else
                        {
                            <span class="glyphicon glyphicon-sort-by-alphabet-alt"></span>
                        }
                    </a>
                </th>
                <th>
                    <a asp-page="/Index" asp-route-sortOrder="@Model.IdNumberSort"
                       asp-route-searchString="@Model.CurrentFilter">
                        @Html.DisplayNameFor(model => model.Members.First().IdNumber)
                    </a>
                </th>
                <th>
                    <a asp-page="/Index" asp-route-sortOrder="@Model.PositionNameSort"
                       asp-route-searchString="@Model.CurrentFilter">
                        @Html.DisplayNameFor(model => model.Members.First().PositionName)
                    </a>
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Members.First().Email)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Members)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.LastName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.FirstName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.IdNumber)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PositionName)
                    </td>
                    <td>
                        <a href="mailto:@item.Email" target="_top">
                            @Html.DisplayFor(modelItem => item.Email)
                        </a>
                    </td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.MemberId">Edit</a> |
                        <a asp-action="Details" asp-route-id="@item.MemberId">Details</a> |
                        <a asp-action="Delete" asp-route-id="@item.MemberId">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
