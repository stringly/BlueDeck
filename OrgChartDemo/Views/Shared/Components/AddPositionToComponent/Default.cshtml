@model AddPositionToComponentViewComponentViewModel

<div class="modal fade" id="addPositionToComponentModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="vertical-alignment-helper">
        <div class="modal-dialog vertical-align-center">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" data-target="#addPositionToComponentModal">
                        <span aria-hidden="true">&times;</span><span class="sr-only">Close</span>

                    </button>
                    <h4 class="modal-title" id="addPositionToComponentModalLabel">@(Model.PositionId != null ? "Edit " + Model.PositionName : "Add Position to " + @Model.ParentComponent.Name)  </h4>

                </div>
                <div style="padding: 10px 30px 5px 30px">
                    <h6 class="text-danger">@ViewBag.Message</h6>
                    <form asp-action="AddPositionToComponent" id="addPositionToComponentModalForm">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        @Html.HiddenFor(model => model.PositionId)
                        @Html.HiddenFor(model => model.LineupPosition)
                        <div class="form-group">
                            <label asp-for="PositionName" class="control-label"></label>
                            <input asp-for="PositionName" class="form-control" />
                            <span asp-validation-for="PositionName" class="text-danger"></span>
                        </div>

                        <div class="form-group">
                            <div class="checkbox">
                                <label>
                                    <input asp-for="IsUnique" /> @Html.DisplayNameFor(model => model.IsUnique)
                                </label>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="checkbox">
                                <label>
                                    <input asp-for="IsManager" /> @Html.DisplayNameFor(model => model.IsManager)
                                </label>
                            </div>
                        </div>
                        @if (Model.PositionId != null)
                        {
                            <div class="form-group">
                                <label asp-for="ParentComponentId" class="control-label"></label>
                                @Html.DropDownListFor(model => model.ParentComponentId,
                                                                new SelectList(Model.ComponentList, "Id", "ComponentName"),
                                                                "Choose Parent Component",
                                                                new { @class = "form-control" })
                                <span asp-validation-for="ParentComponentId" class="text-danger"></span>
                            </div>
                        }
                        else
                        {
                            @Html.HiddenFor(model => model.ParentComponentId)
                        }
                        <div id="lineupSelectionTarget"></div>
                        <div class="form-group">
                            <label asp-for="JobTitle" class="control-label"></label>
                            <input asp-for="JobTitle" class="form-control" />
                            <span asp-validation-for="JobTitle" class="text-danger"></span>
                        </div>

                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal" data-target="#addPositionToComponentModal">Close</button>
                    @if (Model.PositionId != null)
                    {<button type="button" id="deletePositionModalButton" class="btn btn-danger">Delete Position</button>}
                    <button type="button" id="addPositionToComponentModalSubmit" class="btn btn-primary">Save changes</button>
                </div>
            </div>
        </div>
    </div>
</div>
@if (Model.PositionId != null)
{
    <div class="modal fade" id="deletePositionSubModal" tabindex="-1" role="dialog" aria-labelledby="deletePositionSubModalLabel" aria-hidden="true">
        <div class="vertical-alignment-helper">
            <div class="modal-dialog vertical-align-center">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" data-target="#deletePositionSubModal">
                            <span aria-hidden="true">&times;</span><span class="sr-only">Close</span>

                        </button>
                        <h4 class="modal-title" id="deletePositionSubModalTitle">Confim Delete?</h4>
                    </div>
                    <div style="padding: 10px 30px 5px 30px">
                        <p>Deleting this Position will reassign all of it's current members to the master "unassigned" pool. Deleting this Position cannot be undone. Are you sure you want to delete this position?</p>
                        <form asp-action="DeletePosition" id="deletePositionSubModalForm">
                            @Html.HiddenFor(model => model.PositionId)                            
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button type="button" data-dismiss="modal" data-target="#deletePositionSubModal" class="btn btn-danger">No</button>
                        <button type="button" id="deletePositionConfirm" class="btn btn-success">Yes</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
}




