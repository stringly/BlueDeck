@model HomePageViewModel

<div class="homePageHeader container container-fluid" >
    <div class="col-md-10">
        <h3>Hello, @Model.CurrentUser.FirstName.</h3>
        <h4>Currently assigned to @Model.CurrentUser.Position.ParentComponent.Name as @Model.CurrentUser.Position.Name</h4>
        <br />
    </div>
</div>

<div class="col-xs-12">

    <ul class="nav nav-tabs">
        <li class="active"><a data-toggle="tab" href="#home">Home</a></li>
        <li><a data-toggle="tab" href="#searchPeople">Search People</a></li>
        <li><a data-toggle="tab" href="#documents">Documents</a></li>
        <li><a data-toggle="tab" href="#currentUserInfo">My Info</a></li>

    </ul>

    <div class="tab-content">
        <div id="home" class="tab-pane fade in active">
            @{
                HomePageComponentGroup home = Model.ComponentGroups.Where(x => x.ComponentId == Model.CurrentUser.Position.ParentComponent.ComponentId).First();

                <div class="HomePageComponentContainer">
                    <div class="col-md-12">
                        <br />
                        <h4>My Coworkers</h4>
                        <hr />
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <caption>
                                    <strong>@home.ComponentName</strong> |
                                    @if (User.IsInRole("GlobalAdmin") || User.IsInRole("ComponentAdmin"))
                                    {
                                        <a asp-controller="Roster" asp-route-id="@home.ComponentId">Manage Roster</a>@: |
                                    }
                                    <a asp-controller="OrgChart" asp-action="Index" asp-route-componentid="@home.ComponentId"> View Org Chart </a>
                                </caption>
                                <thead>
                                    <tr>
                                        <th>Name</th>
                                        <th>Position</th>
                                        <th>Phone</th>
                                        <th>Email</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var worker in home.Members)
                                    {
                                        <tr>
                                            <td><a asp-action="Details" asp-controller="Members" asp-route-id="@worker.MemberId">@worker.MemberDisplayName</a></td>
                                            <td>@worker.PositionName</td>
                                            <td>@worker.ContactNumber</td>
                                            <td><a href="mailto:@worker.EmailAddress">@worker.EmailAddress</a></td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            }
            @foreach (var item in Model.ComponentGroups.Where(x => x.ComponentId != Model.CurrentUser.Position.ParentComponent.ComponentId).OrderBy(x => x.LineupPosition))
            {
                <div class="HomePageComponentContainer">
                    <div class="col-md-12">
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <caption>
                                    <strong>@item.ComponentName</strong> |
                                    @if (User.IsInRole("GlobalAdmin") || User.IsInRole("ComponentAdmin"))
                                    {
                                        <a asp-controller="Roster" asp-route-id="@home.ComponentId">Manage Roster</a> @: |
                                    }
                                    <a asp-controller="OrgChart" asp-action="Index" asp-route-componentid="@item.ComponentId"> View Org Chart </a>
                                </caption>
                                <thead>
                                    <tr>
                                        <th>Name</th>
                                        <th>Position</th>
                                        <th>Phone</th>
                                        <th>Email</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var worker in item.Members)
                                    {
                                        <tr>
                                            <td><a asp-action="Details" asp-controller="Members" asp-route-id="@worker.MemberId">@worker.MemberDisplayName</a></td>
                                            <td>@worker.PositionName</td>
                                            <td>@worker.ContactNumber</td>
                                            <td><a href="mailto:@worker.EmailAddress">@worker.EmailAddress</a></td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            }
        </div>
        <div id="searchPeople" class="tab-pane fade">
            <div class="col-md-12">
                <br />
                <h4>Search for a Person</h4>
                <hr />
                <div class="row">
                    <div class="form-inline">
                        <div class="col-sm-10 form-group">
                            <label class="control-label">Search for:</label>
                            <input type="text" id="SearchString" class="form-control" placeholder='"John", "#1234", etc...' />
                            <button id="MemberSearchButton" class="btn btn-default">Find <span class="glyphicon glyphicon-refresh"></span></button>
                        </div>
                    </div>
                </div>

                <div class="row" id="memberSearchResultListTarget" style="min-height:400px;">

                </div>
            </div>
        </div>
        <div id="documents" class="tab-pane fade">
            <div class="col-md-12">
                <br />
                <h4>Generate Dcouments</h4>
                <hr />
                <div class="row">
                    <a asp-action="DownloadAlphaRoster" asp-controller="Home">Test Alpha Roster Generator</a>
                </div>
            </div>
        </div>
        <div id="currentUserInfo" class="tab-pane fade">
            <div class="col-md-12">
                <br />
                <h4>My Info</h4>
                <hr />
                <div class="row">
                    <div class="col-sm-3 form-group">
                        @Html.LabelFor(model => model.CurrentUser.FirstName, new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.CurrentUser.FirstName, new { @class = "form-control", disabled = "disabled" })
                    </div>
                    <div class="col-sm-3 form-group">
                        @Html.LabelFor(model => model.CurrentUser.MiddleName, new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.CurrentUser.MiddleName, new { @class = "form-control", disabled = "disabled" })
                    </div>
                    <div class="col-sm-3 form-group">
                        @Html.LabelFor(model => model.CurrentUser.LastName, new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.CurrentUser.LastName, new { @class = "form-control", disabled = "disabled" })
                    </div>
                    <div class="col-sm-2 form-group">
                        @Html.LabelFor(model => model.CurrentUser.IdNumber, new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.CurrentUser.IdNumber, new { @class = "form-control", disabled = "disabled" })
                    </div>
                </div>
                <hr />
                <div class="row">
                    <div class="col-sm-4 form-group">
                        @Html.LabelFor(model => model.CurrentUser.Rank, new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.CurrentUser.Rank.RankFullName, new { @class = "form-control", disabled = "disabled" })
                    </div>
                    <div class="col-sm-3 form-group">
                        @Html.LabelFor(model => model.CurrentUser.Gender, new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.CurrentUser.Gender.GenderFullName, new { @class = "form-control", disabled = "disabled" })
                    </div>
                    <div class="col-sm-3 form-group">
                        @Html.LabelFor(model => model.CurrentUser.Race, new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.CurrentUser.Race.MemberRaceFullName, new { @class = "form-control", disabled = "disabled" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-4 form-group">
                        @Html.LabelFor(model => model.CurrentUser.Position, new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.CurrentUser.Position.Name, new { @class = "form-control", disabled = "disabled" })
                    </div>
                    <div class="col-sm-3 form-group">
                        @Html.LabelFor(model => model.CurrentUser.DutyStatus, new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.CurrentUser.DutyStatus.DutyStatusName, new { @class = "form-control", disabled = "disabled" })
                    </div>
                </div>
                <hr />
                <div class="row">
                    <div class="col-sm-4 form-group">
                        @Html.LabelFor(model => model.CurrentUser.Email, new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.CurrentUser.Email, new { @class = "form-control", disabled = "disabled" })
                    </div>
                    <div class="col-sm-8 form-group">
                        @Html.LabelFor(model => model.CurrentUser.PhoneNumbers, new { @class = "control-label" })
                        @if (Model.CurrentUser.PhoneNumbers.Count == 0)
                        {
                            <br />
                            <span>No current contact numbers.</span>
                        }
                        else
                        {
                            for (var i = 0; i < Model.CurrentUser.PhoneNumbers.Count; i++)
                            {
                                <br />
                                <span style="font-weight:bold">@Model.CurrentUser.PhoneNumbers[i].Type.PhoneNumberTypeName:<span style="font-weight:normal"> @Model.CurrentUser.PhoneNumbers[i].PhoneNumber</span></span>

                            }
                        }

                    </div>
                </div>
                <hr />
                <div class="row">
                    <div class="col-sm-12 form-group">
                        <a asp-action="Edit" asp-controller="Members" asp-route-id="@Model.CurrentUser.MemberId" class="btn btn-primary">Edit My Info</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script>

    $(document).ready(function () {
        $("#MemberSearchButton").click(searchMembers);

    })
    function searchMembers() {
        var searchStr =  $("#SearchString").val();
        if (searchStr.length > 0) {
            var container = $("#memberSearchResultListTarget").empty();
            var spinner = document.getElementsByClassName("glyphicon-refresh")[0]
            spinner.classList.add("spinning");
            $.get("/Home/GetMemberSearchViewComponent", { searchString: searchStr }, function (response) {
                container.html(response);
                spinner.classList.remove('spinning');
                window.setTimeout(function () {
                    $(".alert").fadeTo(500, 0).slideUp(500, function () {
                        $(this).remove();
                    });
                }, 3000);

            });
        }
    }
</script>

