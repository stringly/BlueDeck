@model PositionIndexListViewModel
@{
    var IsAdmin = User.IsInRole("GlobalAdmin");
    List<PositionSelectListItem> CanEditPositions = new List<PositionSelectListItem>();
    var IsComponentSupervisor = User.IsInRole("ComponentAdmin");
    if (User.IsInRole("ComponentAdmin"))
    {
        CanEditPositions = JsonConvert.DeserializeObject<List<PositionSelectListItem>>(((ClaimsIdentity)User.Identity).FindFirst("CanEditPositions").Value.ToString());
    }

}
<nav class="pageBar navbar navbar-default navbar-fixed-top">
    <div class="container-fluid">
        <!-- Brand and toggle get grouped for better mobile display -->
        <div class="navbar-header">
            <span class="navbar-brand">Position Index</span>
            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1" aria-expanded="false">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>

        </div>

        <!-- Collect the nav links, forms, and other content for toggling -->
        <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
            <ul class="nav navbar-nav">
                <li>
                    <form asp-page="/Index" method="get" class="navbar-form navbar-search">
                        <div class="form-group">
                            <div class="input-group">
                                <input type="text" name="SearchString" class="bigControl searchBox form-control" value="@Model.CurrentFilter" placeholder="Search Positions" />
                                <div class="input-group-btn">
                                    <button class="btn btn-search-addon" type="submit">
                                        <i class="glyphicon glyphicon-search"></i>
                                    </button>
                                </div>
                            </div>
                        </div>
                    </form>
                </li>
                @{
                    if (Model.CurrentFilter != null)
                    {
                        <li><a asp-page="/Index"><i class="ion-md-arrow-round-back"></i> Back to full List</a></li>
                    }
                }
                @if (IsAdmin || IsComponentSupervisor)
                {
                    <li><a asp-action="Create" asp-route-returnUrl="/Positions/Index"><span class="glyphicon glyphicon-plus" style="margin-right:2px"></span>Create a New Position</a></li>
                }
            </ul>
        </div><!-- /.navbar-collapse -->
    </div><!-- /.container-fluid -->
</nav>


<div style="margin-top:70px;">
    @if (ViewBag.Status == "Success!")
    {
        <div class="indexAlertWrapper">
            <div class="alert alert-success alert-dismissible fade in">
                <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
                <strong>Success!</strong>
                <span>@ViewBag.Message</span>
            </div>
        </div>

    }
    else if (Model.CurrentFilter != null)
    {
        <div class="indexAlertWrapper">
            <div class="alert alert-primary alert-dismissible fade in">
                <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
                <strong>Message:</strong>
                <span>Found @Model.Positions.Count() Positions that match '@Model.CurrentFilter'</span>
            </div>
        </div>
    }
    @if (Model.Positions.Count() > 0)
    {

        <div class="table-responsive">
            <table class="table indexTable">
                <thead>
                    <tr class="tablePageControlHeaderRow">
                        <th colspan="6">
                            <div page-model="@Model.PagingInfo" page-action="Index" page-classes-enabled="true"
                                 page-class="" page-class-normal=""
                                 page-class-selected="active" page-url-searchString="@Model.CurrentFilter" page-url-sortOrder="@Model.CurrentSort"
                                 class="btn-group">
                            </div>
                        </th>
                    </tr>
                    <tr>
                        <th>
                            <a asp-page="/Index" asp-route-sortOrder="@Model.PositionNameSort"
                               asp-route-searchString="@Model.CurrentFilter" title="Sort by Position Name">
                                @Html.DisplayNameFor(model => model.Positions.First().PositionName)
                                @if (Model.CurrentSort == "name_desc")
                                {
                                    <span class="glyphicon glyphicon-sort-by-alphabet"></span>
                                }
                                else
                                {
                                    <span class="glyphicon glyphicon-sort-by-alphabet-alt"></span>
                                }
                            </a>
                        </th>
                        <th>
                            <a asp-page="/Index" asp-route-sortOrder="@Model.ParentComponentNameSort"
                               asp-route-searchString="@Model.CurrentFilter" title="Sort by Parent Component Name">
                                @Html.DisplayNameFor(model => model.Positions.First().ParentComponentName)
                                @if (Model.CurrentSort == "parentName_desc")
                                {
                                    <span class="glyphicon glyphicon-sort-by-alphabet"></span>
                                }
                                else
                                {
                                    <span class="glyphicon glyphicon-sort-by-alphabet-alt"></span>
                                }
                            </a>
                        </th>
                        <th style="text-align:center;">
                            Unique
                        </th>
                        <th>
                            Job Title
                        </th>
                        <th style="text-align:center;">
                            Manager
                        </th>
                        <th style="text-align:center;">
                            Members
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Positions)
                    {
                        <tr>
                            <td>
                                @item.PositionName
                            </td>
                            <td>
                                @item.ParentComponentName
                            </td>
                            <td style="text-align:center;">
                                @Html.DisplayFor(modelItem => item.IsUnique)
                            </td>
                            <td>
                                @item.JobTitle
                            </td>
                            <td style="text-align:center;">
                                @Html.DisplayFor(modelItem => item.IsManager)
                            </td>
                            <td style="text-align:center;">
                                @item.MembersCount
                            </td>
                            <td>
                                @if (IsAdmin || CanEditPositions.Any(x => x.PositionId == item.PositionId))
                                {
                                    <a asp-action="Details" asp-route-id="@item.PositionId" asp-route-returnUrl="/Positions/Index@(!String.IsNullOrEmpty(Context.Request.QueryString.ToString()) ? $"{Context.Request.QueryString}" : "")" title="View Details" class="glyphicon-ring">
                                        <span class="glyphicon glyphicon-list-alt glyphicon-bordered"></span>
                                    </a>
                                    <a asp-action="Edit" asp-route-id="@item.PositionId" asp-route-returnUrl="/Positions/Index@(!String.IsNullOrEmpty(Context.Request.QueryString.ToString()) ? $"{Context.Request.QueryString}" : "")" title="Edit Position" class="glyphicon-ring">
                                        <span class="glyphicon glyphicon-pencil glyphicon-bordered"></span>
                                    </a>
                                    <a asp-action="Delete" asp-route-id="@item.PositionId" asp-route-returnUrl="/Positions/Index@(!String.IsNullOrEmpty(Context.Request.QueryString.ToString()) ? $"{Context.Request.QueryString}" : "")" title="Delete Position" class="glyphicon-ring">
                                        <span class="glyphicon glyphicon-trash glyphicon-bordered"></span>
                                    </a>
                                }
                                else
                                {
                                    <a asp-action="Details" asp-route-id="@item.PositionId" asp-route-returnUrl="/Positions/Index@(!String.IsNullOrEmpty(Context.Request.QueryString.ToString()) ? $"{Context.Request.QueryString}" : "")" title="View Details" class="glyphicon-ring">
                                        <span class="glyphicon glyphicon-list-alt glyphicon-bordered"></span>
                                    </a>
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
    else
    {
        <div style="max-width: 95%; margin: auto">
            <a asp-action="Index" class="">Go Back to Full List</a>
        </div>
    }
</div>
<script>
    // close any alert after 3 seconds
    window.setTimeout(function () {
        $(".alert").fadeTo(500, 0).slideUp(500, function () {
            $(this).remove();
        });
    }, 3000);
</script>