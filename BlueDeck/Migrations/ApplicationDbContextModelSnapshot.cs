// <auto-generated />
using System;
using BlueDeck.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BlueDeck.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BlueDeck.Models.Component", b =>
                {
                    b.Property<int>("ComponentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Acronym");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int?>("CreatorId");

                    b.Property<DateTime>("LastModified");

                    b.Property<int?>("LastModifiedById");

                    b.Property<int?>("LineupPosition");

                    b.Property<string>("Name");

                    b.Property<int?>("ParentComponentId");

                    b.HasKey("ComponentId");

                    b.HasIndex("CreatorId");

                    b.HasIndex("LastModifiedById");

                    b.HasIndex("ParentComponentId");

                    b.ToTable("Components");
                });

            modelBuilder.Entity("BlueDeck.Models.ContactNumber", b =>
                {
                    b.Property<int>("MemberContactNumberId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MemberId");

                    b.Property<string>("PhoneNumber");

                    b.Property<int?>("TypePhoneNumberTypeId");

                    b.HasKey("MemberContactNumberId");

                    b.HasIndex("MemberId");

                    b.HasIndex("TypePhoneNumberTypeId");

                    b.ToTable("ContactNumbers");
                });

            modelBuilder.Entity("BlueDeck.Models.Enums.AppStatus", b =>
                {
                    b.Property<int?>("AppStatusId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("StatusName")
                        .IsRequired();

                    b.HasKey("AppStatusId");

                    b.ToTable("ApplicationStatuses");
                });

            modelBuilder.Entity("BlueDeck.Models.Enums.DutyStatus", b =>
                {
                    b.Property<int?>("DutyStatusId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Abbreviation")
                        .IsRequired()
                        .HasConversion(new ValueConverter<string, string>(v => default(string), v => default(string), new ConverterMappingHints(size: 1)));

                    b.Property<string>("DutyStatusName")
                        .IsRequired();

                    b.Property<bool>("HasPolicePower");

                    b.Property<bool>("IsExceptionToNormalDuty");

                    b.HasKey("DutyStatusId");

                    b.ToTable("DutyStatuses");
                });

            modelBuilder.Entity("BlueDeck.Models.Enums.Gender", b =>
                {
                    b.Property<int?>("GenderId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Abbreviation")
                        .IsRequired()
                        .HasConversion(new ValueConverter<string, string>(v => default(string), v => default(string), new ConverterMappingHints(size: 1)));

                    b.Property<string>("GenderFullName")
                        .IsRequired();

                    b.HasKey("GenderId");

                    b.ToTable("Genders");
                });

            modelBuilder.Entity("BlueDeck.Models.Enums.PhoneNumberType", b =>
                {
                    b.Property<int?>("PhoneNumberTypeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PhoneNumberTypeName");

                    b.HasKey("PhoneNumberTypeId");

                    b.ToTable("PhoneNumberTypes");
                });

            modelBuilder.Entity("BlueDeck.Models.Enums.Race", b =>
                {
                    b.Property<int?>("MemberRaceId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Abbreviation")
                        .IsRequired()
                        .HasConversion(new ValueConverter<string, string>(v => default(string), v => default(string), new ConverterMappingHints(size: 1)));

                    b.Property<string>("MemberRaceFullName")
                        .IsRequired();

                    b.HasKey("MemberRaceId");

                    b.ToTable("Races");
                });

            modelBuilder.Entity("BlueDeck.Models.Enums.Rank", b =>
                {
                    b.Property<int?>("RankId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsSworn");

                    b.Property<string>("PayGrade")
                        .IsRequired();

                    b.Property<string>("RankFullName");

                    b.Property<string>("RankShort");

                    b.HasKey("RankId");

                    b.ToTable("Ranks");
                });

            modelBuilder.Entity("BlueDeck.Models.Enums.RoleType", b =>
                {
                    b.Property<int>("RoleTypeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RoleTypeName");

                    b.HasKey("RoleTypeId");

                    b.ToTable("RoleTypes");
                });

            modelBuilder.Entity("BlueDeck.Models.Enums.VehicleManufacturer", b =>
                {
                    b.Property<int>("VehicleManufacturerId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("VehicleManufacturerName")
                        .IsRequired();

                    b.HasKey("VehicleManufacturerId");

                    b.ToTable("VehicleManufacturers");
                });

            modelBuilder.Entity("BlueDeck.Models.Enums.VehicleModel", b =>
                {
                    b.Property<int>("VehicleModelId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ManufacturerId");

                    b.Property<string>("VehicleModelName");

                    b.HasKey("VehicleModelId");

                    b.HasIndex("ManufacturerId");

                    b.ToTable("VehicleModels");
                });

            modelBuilder.Entity("BlueDeck.Models.Member", b =>
                {
                    b.Property<int>("MemberId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppStatusId");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int?>("CreatorId");

                    b.Property<int>("DutyStatusId");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<int>("GenderId");

                    b.Property<DateTime>("HireDate");

                    b.Property<string>("IdNumber");

                    b.Property<string>("LDAPName")
                        .IsRequired();

                    b.Property<DateTime>("LastModified");

                    b.Property<int?>("LastModifiedById");

                    b.Property<string>("LastName");

                    b.Property<string>("MiddleName");

                    b.Property<string>("OrgPositionNumber");

                    b.Property<string>("PayrollID")
                        .IsRequired();

                    b.Property<int>("PositionId");

                    b.Property<int>("RaceId");

                    b.Property<int>("RankId");

                    b.Property<int?>("TempPositionId");

                    b.HasKey("MemberId");

                    b.HasIndex("AppStatusId");

                    b.HasIndex("CreatorId");

                    b.HasIndex("DutyStatusId");

                    b.HasIndex("GenderId");

                    b.HasIndex("LastModifiedById");

                    b.HasIndex("PositionId");

                    b.HasIndex("RaceId");

                    b.HasIndex("RankId");

                    b.HasIndex("TempPositionId");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("BlueDeck.Models.Position", b =>
                {
                    b.Property<int>("PositionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Callsign");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int?>("CreatorId");

                    b.Property<bool>("IsAssistantManager");

                    b.Property<bool>("IsManager");

                    b.Property<bool>("IsUnique");

                    b.Property<string>("JobTitle");

                    b.Property<DateTime>("LastModified");

                    b.Property<int?>("LastModifiedById");

                    b.Property<int?>("LineupPosition");

                    b.Property<string>("Name");

                    b.Property<int>("ParentComponentId");

                    b.HasKey("PositionId");

                    b.HasIndex("CreatorId");

                    b.HasIndex("LastModifiedById");

                    b.HasIndex("ParentComponentId");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("BlueDeck.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MemberId");

                    b.Property<int>("RoleTypeId");

                    b.HasKey("RoleId");

                    b.HasIndex("MemberId");

                    b.HasIndex("RoleTypeId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("BlueDeck.Models.Vehicle", b =>
                {
                    b.Property<int>("VehicleId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AssignedToComponentId");

                    b.Property<int?>("AssignedToMemberId");

                    b.Property<int?>("AssignedToPositionId");

                    b.Property<string>("CruiserNumber");

                    b.Property<bool>("HasMDT");

                    b.Property<bool>("HasMVS");

                    b.Property<bool>("IsMarked");

                    b.Property<int>("ModelId");

                    b.Property<int>("ModelYear");

                    b.Property<string>("TagNumber");

                    b.Property<string>("TagState");

                    b.Property<string>("VIN");

                    b.HasKey("VehicleId");

                    b.HasIndex("AssignedToComponentId");

                    b.HasIndex("AssignedToMemberId")
                        .IsUnique()
                        .HasFilter("[AssignedToMemberId] IS NOT NULL");

                    b.HasIndex("AssignedToPositionId");

                    b.HasIndex("ModelId");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("BlueDeck.Models.Component", b =>
                {
                    b.HasOne("BlueDeck.Models.Member", "Creator")
                        .WithMany("CreatedComponents")
                        .HasForeignKey("CreatorId");

                    b.HasOne("BlueDeck.Models.Member", "LastModifiedBy")
                        .WithMany("LastModifiedComponents")
                        .HasForeignKey("LastModifiedById");

                    b.HasOne("BlueDeck.Models.Component", "ParentComponent")
                        .WithMany("ChildComponents")
                        .HasForeignKey("ParentComponentId");
                });

            modelBuilder.Entity("BlueDeck.Models.ContactNumber", b =>
                {
                    b.HasOne("BlueDeck.Models.Member", "Member")
                        .WithMany("PhoneNumbers")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BlueDeck.Models.Enums.PhoneNumberType", "Type")
                        .WithMany("ContactNumbers")
                        .HasForeignKey("TypePhoneNumberTypeId");
                });

            modelBuilder.Entity("BlueDeck.Models.Enums.VehicleModel", b =>
                {
                    b.HasOne("BlueDeck.Models.Enums.VehicleManufacturer", "Manufacturer")
                        .WithMany("Models")
                        .HasForeignKey("ManufacturerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BlueDeck.Models.Member", b =>
                {
                    b.HasOne("BlueDeck.Models.Enums.AppStatus", "AppStatus")
                        .WithMany("Members")
                        .HasForeignKey("AppStatusId");

                    b.HasOne("BlueDeck.Models.Member", "Creator")
                        .WithMany("CreatedMembers")
                        .HasForeignKey("CreatorId");

                    b.HasOne("BlueDeck.Models.Enums.DutyStatus", "DutyStatus")
                        .WithMany("Members")
                        .HasForeignKey("DutyStatusId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BlueDeck.Models.Enums.Gender", "Gender")
                        .WithMany("Members")
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BlueDeck.Models.Member", "LastModifiedBy")
                        .WithMany("LastModifiedMembers")
                        .HasForeignKey("LastModifiedById");

                    b.HasOne("BlueDeck.Models.Position", "Position")
                        .WithMany("Members")
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BlueDeck.Models.Enums.Race", "Race")
                        .WithMany("Members")
                        .HasForeignKey("RaceId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BlueDeck.Models.Enums.Rank", "Rank")
                        .WithMany("Members")
                        .HasForeignKey("RankId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BlueDeck.Models.Position", "TempPosition")
                        .WithMany("TempMembers")
                        .HasForeignKey("TempPositionId");
                });

            modelBuilder.Entity("BlueDeck.Models.Position", b =>
                {
                    b.HasOne("BlueDeck.Models.Member", "Creator")
                        .WithMany("CreatedPositions")
                        .HasForeignKey("CreatorId");

                    b.HasOne("BlueDeck.Models.Member", "LastModifiedBy")
                        .WithMany("LastModifiedPositions")
                        .HasForeignKey("LastModifiedById");

                    b.HasOne("BlueDeck.Models.Component", "ParentComponent")
                        .WithMany("Positions")
                        .HasForeignKey("ParentComponentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BlueDeck.Models.Role", b =>
                {
                    b.HasOne("BlueDeck.Models.Member", "Member")
                        .WithMany("CurrentRoles")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BlueDeck.Models.Enums.RoleType", "RoleType")
                        .WithMany("CurrentRoles")
                        .HasForeignKey("RoleTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BlueDeck.Models.Vehicle", b =>
                {
                    b.HasOne("BlueDeck.Models.Component", "AssignedToComponent")
                        .WithMany("AssignedVehicles")
                        .HasForeignKey("AssignedToComponentId");

                    b.HasOne("BlueDeck.Models.Member", "AssignedToMember")
                        .WithOne("AssignedVehicle")
                        .HasForeignKey("BlueDeck.Models.Vehicle", "AssignedToMemberId");

                    b.HasOne("BlueDeck.Models.Position", "AssignedToPosition")
                        .WithMany("AssignedVehicles")
                        .HasForeignKey("AssignedToPositionId");

                    b.HasOne("BlueDeck.Models.Enums.VehicleModel", "Model")
                        .WithMany("Vehicles")
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
