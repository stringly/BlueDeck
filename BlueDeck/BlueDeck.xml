<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BlueDeck</name>
    </assembly>
    <members>
        <member name="T:BlueDeck.Controllers.AdminController">
            <summary>
            Controller that handles Administrative Functions
            </summary>
            <seealso cref="T:Microsoft.AspNetCore.Mvc.Controller" />
        </member>
        <member name="F:BlueDeck.Controllers.AdminController.PageSize">
            <summary>
            Property that controls the number of Items per page on the Index views
            </summary>
        </member>
        <member name="M:BlueDeck.Controllers.AdminController.#ctor(BlueDeck.Models.IUnitOfWork)">
            <summary>
            Initializes a new instance of the <see cref="T:BlueDeck.Controllers.AdminController"/> class.
            </summary>
            <param name="unit">The Dependency-Injected <see cref="T:BlueDeck.Models.IUnitOfWork"/> obtained from the <see cref="M:BlueDeck.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)"/></param>
        </member>
        <member name="M:BlueDeck.Controllers.AdminController.Index(System.String)">
            <summary>
            Indexes the specified return URL.
            </summary>
            <param name="returnUrl">The return URL.</param>
            <returns>The Admin/Index <see cref="T:Microsoft.AspNetCore.Mvc.ViewResult"/></returns>
        </member>
        <member name="M:BlueDeck.Controllers.AdminController.MemberIndex(System.String,System.String,System.Int32)">
            <summary>
            Returns the Admin/MemberIndex view
            </summary>
            <remarks>
            This view lists Members in the database with additional administrative fields. 
            </remarks>
            <param name="sortOrder">
            <para>
            Sort by: (ascend/descend)
            Last Name: [(nothing; LastName ascend is default/lastName_desc)]
            First Name: [(FirstName/firstName_desc)]
            Id Number: [(IDNumber/idNumber_desc)]
            Position Name: [(PositionName/positionName_desc)]
            By User Role: (filter: on/off) [(IsUserRoleOnly/IsUserRoleAny)]
            By Component Admin Role: (filter: on/off) [(IsComponentAdminOnly/IsComponentAdminAny)]
            By Global Admin Role: (filter: on/off) [(IsGlobalAdminOnly/IsGlobalAdminAny)]
            </para>
            </param>
            <param name="searchString">The search string.</param>
            <para>
            As of v1.0, the searchString parameter will search Members by Last Name, First Name, Position Name, and Id Number.
            The passed string will be converted to lowercase, and all non-alphanumeric characters will be removed.
            </para>
            <param name="page">
            <para>
            This controls pagination. The default value is 1.
            </para>
            </param>
            <returns>The Admin/MemberIndex <see cref="T:Microsoft.AspNetCore.Mvc.ViewResult"/></returns>
        </member>
        <member name="M:BlueDeck.Controllers.AdminController.PositionIndex(System.String,System.String,System.Int32)">
            <summary>
            Returns the Admin/PositionIndex view
            </summary>
            <remarks>
            This view lists Positions in the database with additional administrative fields. 
            </remarks>
            <param name="sortOrder">
            <para>
            Sort by: (ascend/descend)
            Position Name: [(nothing; PositionName ascend is default/name_desc)]
            Parent Component Name: [(ParentComponentName/parentName_desc)]        
            </para>
            </param>
            <param name="searchString">The search string.</param>
            <para>
            As of v1.0, the searchString parameter will search Positions by Position Name or Parent Component Name.
            The passed string will be converted to lowercase, and all non-alphanumeric characters will be removed.
            </para>
            <param name="page">
            <para>
            This controls pagination. The default value is 1.
            </para>
            </param>
            <returns>The Admin/PositionIndex <see cref="T:Microsoft.AspNetCore.Mvc.ViewResult"/></returns>
        </member>
        <member name="M:BlueDeck.Controllers.AdminController.ComponentIndex(System.String,System.String,System.Int32)">
            <summary>
            Returns the Admin/ComponentIndex view
            </summary>
            <remarks>
            This view lists Components in the database with additional administrative fields. 
            </remarks>
            <param name="sortOrder">
            <para>
            Sort by: (ascend/descend)
            Component Name: [(nothing; Component Name ascend is default/name_desc)]
            Parent Component Name: [(ParentComponentName/parentName_desc)]        
            </para>
            </param>
            <param name="searchString">The search string.</param>
            <para>
            As of v1.0, the searchString parameter will search Components by Component Name or Parent Component Name.
            The passed string will be converted to lowercase, and all non-alphanumeric characters will be removed.
            </para>
            <param name="page">
            <para>
            This controls pagination. The default value is 1.
            </para>
            </param>         
            <returns>The Admin/ComponentIndex <see cref="T:Microsoft.AspNetCore.Mvc.ViewResult"/></returns>
        </member>
        <member name="M:BlueDeck.Controllers.AdminController.AppStatusIndex">
            <summary>
            Returns the Admin/AppStatusIndex view
            </summary>
            <remarks>
            This view lists App Statuses in the database with additional administrative fields. 
            </remarks>
            <returns>The Admin/AppStatusIndex <see cref="T:Microsoft.AspNetCore.Mvc.ViewResult"/></returns>
        </member>
        <member name="M:BlueDeck.Controllers.AdminController.DutyStatusIndex">
            <summary>
            Returns the Admin/DutyStatusIndex view
            </summary>
            <remarks>
            This view lists Duty Statuses in the database with additional administrative fields. 
            </remarks>
            <returns>The Admin/DutyStatusIndex <see cref="T:Microsoft.AspNetCore.Mvc.ViewResult"/></returns>
        </member>
        <member name="M:BlueDeck.Controllers.AdminController.GenderIndex">
            <summary>
            Returns the Admin/GenderIndex view
            </summary>
            <remarks>
            This view lists Genders in the database with additional administrative fields. 
            </remarks>
            <returns>The Admin/GenderIndex <see cref="T:Microsoft.AspNetCore.Mvc.ViewResult"/></returns>        
        </member>
        <member name="M:BlueDeck.Controllers.AdminController.RaceIndex">
            <summary>
            Returns the Admin/RaceIndex view
            </summary>
            <remarks>
            This view lists Races in the database with additional administrative fields. 
            </remarks>
            <returns>The Admin/RaceIndex <see cref="T:Microsoft.AspNetCore.Mvc.ViewResult"/></returns>    
        </member>
        <member name="M:BlueDeck.Controllers.AdminController.RankIndex">
            <summary>
            Returns the Admin/RankIndex view
            </summary>
            <remarks>
            This view lists Ranks in the database with additional administrative fields. 
            </remarks>
            <returns>The Admin/RankIndex <see cref="T:Microsoft.AspNetCore.Mvc.ViewResult"/></returns>  
        </member>
        <member name="M:BlueDeck.Controllers.AdminController.PhoneTypeIndex">
            <summary>
            Returns the Admin/PhoneTypeIndex view
            </summary>
            <remarks>
            This view lists Phone Number Types in the database with additional administrative fields. 
            </remarks>
            <returns>The Admin/PhoneTypeIndex <see cref="T:Microsoft.AspNetCore.Mvc.ViewResult"/></returns>
        </member>
        <member name="M:BlueDeck.Controllers.AdminController.RegisterUser(System.Int32,System.String)">
            <summary>
            Registers the user with the provided MemberId.
            </summary>
            <remarks>
            This method will change a Member account from "Pending" to "Active".
            It will also add the ComponentAdmin role if activating a Member assigned to a Manager/Assistant Manager Position.
            </remarks>
            <param name="id">The MemberId of the Member to activate.</param>
            <param name="returnUrl">The optional return URL.</param>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Controllers.AdminController.DenyUser(System.Int32,System.String)">
            <summary>
            Changes a Member Account from "Pending" status back to "New" status.
            </summary>
            <param name="id">The MemberId of the Member.</param>
            <param name="returnUrl">The return URL.</param>
            <returns></returns>
        </member>
        <member name="T:BlueDeck.Controllers.AppStatusController">
            <summary>
            Handles Create, Read, Update, and Delete functionality for the Application Status Enumeration.
            </summary>
            <seealso cref="T:Microsoft.AspNetCore.Mvc.Controller" />
        </member>
        <member name="M:BlueDeck.Controllers.AppStatusController.#ctor(BlueDeck.Models.IUnitOfWork)">
            <summary>
            Initializes a new instance of the <see cref="T:BlueDeck.Controllers.AppStatusController"/> class.
            </summary>
            <param name="unit">The Injected <see cref="T:BlueDeck.Models.IUnitOfWork"/> obtained from the services middleware.</param>
        </member>
        <member name="M:BlueDeck.Controllers.AppStatusController.Index">
            <summary>
            Returns a view that lists all <see cref="T:BlueDeck.Models.AppStatus"/> in the database.
            </summary>
            <returns>The Views/Admin/Index <see cref="T:Microsoft.AspNetCore.Mvc.ViewResult"/></returns>
        </member>
        <member name="M:BlueDeck.Controllers.AppStatusController.Details(System.Nullable{System.Int32},System.String)">
            <summary>
            Shows details for a specific <see cref="T:BlueDeck.Models.AppStatus"/>
            </summary>
            <param name="id">The AppStatusId of the <see cref="T:BlueDeck.Models.AppStatus"/>.</param>
            <param name="returnUrl">The return URL.</param>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Controllers.AppStatusController.Create(System.String)">
            <summary>
            Returns a <see cref="T:Microsoft.AspNetCore.Mvc.ViewResult"/> that allows creation of a new <see cref="T:BlueDeck.Models.AppStatus"/>.
            </summary>
            <param name="returnUrl">The return URL.</param>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Controllers.AppStatusController.Create(BlueDeck.Models.AppStatus,System.String)">
            <summary>
            Creates the specified application status.
            </summary>
            <param name="appStatus">The application status.</param>
            <param name="returnUrl">The return URL.</param>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Controllers.AppStatusController.Edit(System.Nullable{System.Int32},System.String)">
            <summary>
            Edits the <see cref="T:BlueDeck.Models.AppStatus"/> with specified identifier.
            </summary>
            <param name="id">The AppStatusId of the <see cref="T:BlueDeck.Models.AppStatus"/> to edit.</param>
            <param name="returnUrl">The return URL.</param>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Controllers.AppStatusController.Edit(System.Int32,BlueDeck.Models.AppStatus,System.String)">
            <summary>
            Edits the <see cref="T:BlueDeck.Models.AppStatus"/> with the given AppStatusId.
            </summary>
            <param name="id">The identifier of the AppStatus.</param>
            <param name="appStatus">A POSTed form that binds to a <see cref="T:BlueDeck.Models.AppStatus"/>.</param>
            <param name="returnUrl">The return URL.</param>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Controllers.AppStatusController.Delete(System.Nullable{System.Int32},System.String)">
            <summary>
            Deletes the <see cref="T:BlueDeck.Models.AppStatus"/> with specified identifier.
            </summary>
            <param name="id">The identifier of the <see cref="T:BlueDeck.Models.AppStatus"/> to delete.</param>
            <param name="returnUrl">The return URL.</param>
            <returns>The Views/AppStatus/Delete <see cref="T:Microsoft.AspNetCore.Mvc.ViewResult"/></returns>
        </member>
        <member name="M:BlueDeck.Controllers.AppStatusController.DeleteConfirmed(System.Int32,System.String)">
            <summary>
            Confirms the deletion of an <see cref="T:BlueDeck.Models.AppStatus"/>.
            </summary>
            <param name="id">The identifier of the <see cref="T:BlueDeck.Models.AppStatus"/>.</param>
            <param name="returnUrl">The return URL.</param>
            <returns></returns>
        </member>
        <member name="T:BlueDeck.Controllers.ComponentsApiController">
            <summary>
            Controller that handles Web API requests for the <see cref="T:BlueDeck.Models.Component"/> entity.
            </summary>
            <seealso cref="T:Microsoft.AspNetCore.Mvc.ControllerBase" />
        </member>
        <member name="M:BlueDeck.Controllers.ComponentsApiController.#ctor(BlueDeck.Models.IUnitOfWork)">
            <summary>
            Initializes a new instance of the <see cref="T:BlueDeck.Controllers.ComponentsApiController"/> class.
            </summary>
            <param name="unit">The injected <see cref="T:BlueDeck.Models.IUnitOfWork"/> obtained from the services middleware.</param>
        </member>
        <member name="M:BlueDeck.Controllers.ComponentsApiController.GetComponents">
            <summary>
            Gets a List of Component Names/Ids of all Components
            </summary>
            <remarks>
            Sample request:
            
                GET /ComponentApi/GetAll
                {
                    {
                        name : "District I",
                        componentId : "1"
                    },
                    {
                        name : "Automotive Services",
                        componentId : "2"
                    }
                }
                    
            Use this method to retrieve the Component Id of a Component by the Component's name.
            </remarks>
            <returns>A list of Component Names/Ids of all current Component</returns>
            <response code="200">Returns a JSON object containing all current Component</response>
        </member>
        <member name="M:BlueDeck.Controllers.ComponentsApiController.SearchComponents(System.String)">
            <summary>
            Searches for a Component whose Name or Acronym matches the provided search string.
            </summary>
            <remarks>
            Sample Request
            
                GET /ComponentApi/SearchComponents/Example
                {
                    {
                        name : "Example District",
                        componentId : "1"
                    },
                    {
                        name : "Example Office of Administration",
                        componentId : "4"
                    }
                }
            </remarks>
            <param name="searchString">The search string.</param>
            <returns>A list of Components that match the search string</returns>
            <response code="200">Returns a list of Components that match the search string</response>
            <response code="400">No Components match the search string</response>
        </member>
        <member name="M:BlueDeck.Controllers.ComponentsApiController.GetComponent(System.Int32)">
            <summary>
            Gets detailed information for a specific Component by Id.
            </summary>
            <remarks>
            Sample request:
            
                GET /ComponentApi/GetComponent/1
                
            </remarks>
            <param name="id">The Component Id of the Component.</param>
            <returns>A collection of detailed information for the Component with the provided Component Id</returns>
            <response code="200">Detailed information for the Component with the provided Component Id</response>
            <response code="400">No Component with the provided Component Id was found</response>
        </member>
        <member name="T:BlueDeck.Controllers.ComponentsController">
            <summary>
            Controller for Component CRUD actions
            </summary>
            <seealso cref="T:Microsoft.AspNetCore.Mvc.Controller" />
        </member>
        <member name="F:BlueDeck.Controllers.ComponentsController.PageSize">
            <summary>
            Property that determines the page length of List views returned from this controller.
            </summary>
        </member>
        <member name="M:BlueDeck.Controllers.ComponentsController.#ctor(BlueDeck.Models.IUnitOfWork)">
            <summary>
            Initializes a new instance of the <see cref="T:BlueDeck.Controllers.ComponentsController"/> class.
            </summary>
            <param name="unit"><see cref="T:BlueDeck.Models.IUnitOfWork"/>.</param>
        </member>
        <member name="M:BlueDeck.Controllers.ComponentsController.Index(System.String,System.String,System.Int32)">
            <summary>
            Retrieves a List view showing all <see cref="T:BlueDeck.Models.Component"/> entities in the database.
            </summary>
            <remarks>
            This View requires an <see cref="T:System.Collections.Generic.IEnumerable`1"/> objects.
            </remarks>
            <permission>
            Any authenticated User can view the Component Index. Auth is handled via Windows. The Components/Index.cshtml view contains
            logic that restricts the rendering of hyperlinks to Add/Edit/Delete Components from the rendered Index List.
            </permission>
            <param name="sortOrder">The sort order.</param>
            <param name="searchString">The search string.</param>
            <param name="page">An integer to handle pagination. The default value for this parameter is 1.</param>
            <returns>An <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/></returns>
        </member>
        <member name="M:BlueDeck.Controllers.ComponentsController.Details(System.Nullable{System.Int32},System.String)">
            <summary>
            GET: Components/Details/5.
            </summary>
            <param name="id">The identifier for a Component.</param>
            <param name="returnUrl">An optional URI to allow redirects.</param>
            <returns>An <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/></returns>
        </member>
        <member name="M:BlueDeck.Controllers.ComponentsController.Create(System.String)">
            <summary>
            Returns a view that allows the creation of a new <see cref="T:BlueDeck.Models.Component"/>
            </summary>
            <remarks>
            The Components/Create view depends on the <see cref="T:BlueDeck.Models.ViewModels.ComponentWithComponentListViewModel"/> view model.
            </remarks>
            <param name="returnUrl">An optional return URL.</param>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Controllers.ComponentsController.Create(BlueDeck.Models.ViewModels.ComponentWithComponentListViewModel,System.String)">
            <summary>
            Creates a <see cref="T:BlueDeck.Models.Component"/> from the POSTed form.
            </summary>
            <param name="form">The form data, which will be bound to a <see cref="T:BlueDeck.Models.ViewModels.ComponentWithComponentListViewModel"/>.</param>
            <param name="returnUrl">The return URL.</param>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Controllers.ComponentsController.Edit(System.Nullable{System.Int32},System.String)">
            <summary>
            Retrieves the View that allows a user to Edit an existing <see cref="T:BlueDeck.Models.Component"/> entity.
            </summary>
            <remarks>
            This view depends on the <see cref="T:BlueDeck.Models.ViewModels.ComponentWithComponentListViewModel"/> view model.
            This method is protected by the <see cref="T:BlueDeck.Models.Auth.CanEditComponentRequirement"/>
            </remarks>
            <param name="id">The identity of the <see cref="T:BlueDeck.Models.Component"/> to edit.</param>
            <param name="returnUrl">An optional return URL.</param>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Controllers.ComponentsController.Edit(System.Int32,BlueDeck.Models.ViewModels.ComponentWithComponentListViewModel,System.String)">
            <summary>
            Handles POSTed form data to edit an existing <see cref="T:BlueDeck.Models.Component"/>.
            </summary>
            <param name="id">The identity of the <see cref="T:BlueDeck.Models.Component"/> being editied.</param>
            <param name="form">The form data, which will be bound to a <see cref="T:BlueDeck.Models.ViewModels.ComponentWithComponentListViewModel"/> object.</param>
            <param name="returnUrl">An optional return URL.</param>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Controllers.ComponentsController.Delete(System.Nullable{System.Int32},System.String)">
            <summary>
            Deletes the <see cref="T:BlueDeck.Models.Component"/> with the specified identifier.
            </summary>
            <remarks>
            This method is protected by the <see cref="T:BlueDeck.Models.Auth.CanEditComponentRequirement"/>
            </remarks>
            <param name="id">The identity of the <see cref="T:BlueDeck.Models.Component"/> to delete.</param>
            <param name="returnUrl">An optional return URL.</param>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Controllers.ComponentsController.DeleteConfirmed(System.Int32,System.String)">
            <summary>
            Deletes the <see cref="T:BlueDeck.Models.Component"/> with the provided id.
            </summary>
            <param name="id">The identity of the <see cref="T:BlueDeck.Models.Component"/> to delete.</param>
            <param name="returnUrl">The return URL.</param>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Controllers.ComponentsController.GetComponentLineupViewComponent(System.Int32,System.Int32)">
            <summary>
            Gets the component lineup view component.
            </summary>
            <param name="parentComponentId">The parent component identifier.</param>
            <param name="componentBeingEditedId">The component being edited identifier.</param>
            <returns></returns>
        </member>
        <member name="T:BlueDeck.Controllers.DutyStatusController">
            <summary>
            Controller that handles CRUD actions for the <see cref="T:BlueDeck.Models.DutyStatus"/> entity.
            </summary>
            <remarks>
            Actions in this controller are restricted by the <see cref="T:BlueDeck.Models.Auth.IsGlobalAdminRequirement"/>
            </remarks>
            <seealso cref="T:Microsoft.AspNetCore.Mvc.Controller" />
        </member>
        <member name="M:BlueDeck.Controllers.DutyStatusController.#ctor(BlueDeck.Models.IUnitOfWork)">
            <summary>
            Initializes a new instance of the <see cref="T:BlueDeck.Controllers.DutyStatusController"/> class.
            </summary>
            <param name="unit">The injected <see cref="T:BlueDeck.Models.IUnitOfWork"/> obtained from the services middleware.</param>
        </member>
        <member name="M:BlueDeck.Controllers.DutyStatusController.Index">
            <summary>
            Returns a List view of all of the <see cref="T:BlueDeck.Models.DutyStatus"/> entities.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Controllers.DutyStatusController.Details(System.Nullable{System.Int32},System.String)">
            <summary>
            Returns a view that displays details of a <see cref="T:BlueDeck.Models.DutyStatus"/>
            </summary>
            <param name="id">The identity of the <see cref="T:BlueDeck.Models.DutyStatus"/></param>
            <param name="returnUrl">An optional return URL.</param>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Controllers.DutyStatusController.Create(System.String)">
            <summary>
            Returns a view that allows the user to create a new <see cref="T:BlueDeck.Models.DutyStatus"/> entity.
            </summary>
            <param name="returnUrl">An optional return URL.</param>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Controllers.DutyStatusController.Create(BlueDeck.Models.DutyStatus,System.String)">
            <summary>
            Creates the specified duty status.
            </summary>
            <param name="dutyStatus">The form data, bound to a <see cref="T:BlueDeck.Models.DutyStatus"/> object.</param>
            <param name="returnUrl">An optional return URL.</param>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Controllers.DutyStatusController.Edit(System.Nullable{System.Int32},System.String)">
            <summary>
            Returns a view that allows a user to edit an existing <see cref="T:BlueDeck.Models.DutyStatus"/> entity.
            </summary>
            <param name="id">The identity of the <see cref="T:BlueDeck.Models.DutyStatus"/> to be edited.</param>
            <param name="returnUrl">An optional return URL.</param>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Controllers.DutyStatusController.Edit(System.Int32,BlueDeck.Models.DutyStatus,System.String)">
            <summary>
            Edits the <see cref="T:BlueDeck.Models.DutyStatus"/> with the specified identifier.
            </summary>
            <param name="id">The identifier of the <see cref="T:BlueDeck.Models.DutyStatus"/> entity being edited.</param>
            <param name="dutyStatus">The POSTed form data, which will be bound to a <see cref="T:BlueDeck.Models.DutyStatus"/> object.</param>
            <param name="returnUrl">An optional return URL.</param>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Controllers.DutyStatusController.Delete(System.Nullable{System.Int32},System.String)">
            <summary>
            Retrieves the view to confirm the deletion of a Duty Status
            </summary>
            <param name="id">The DutyStatusId of the Duty Status to be deleted.</param>
            <param name="returnUrl">The return URL.</param>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Controllers.DutyStatusController.DeleteConfirmed(System.Int32,System.String)">
            <summary>
            Deletes the Duty Status with the given DutyStatusId.
            </summary>
            <param name="id">The DutyStatusId of the Duty Status to be deleted.</param>
            <param name="returnUrl">The return URL.</param>
            <returns></returns>
        </member>
        <member name="T:BlueDeck.Controllers.EnumsApiController">
            <summary>
            API Controller that retrieves BlueDeck Enumerables
            </summary>
            <seealso cref="T:Microsoft.AspNetCore.Mvc.ControllerBase" />
        </member>
        <member name="M:BlueDeck.Controllers.EnumsApiController.#ctor(BlueDeck.Models.IUnitOfWork)">
            <summary>
            Initializes a new instance of the <see cref="T:BlueDeck.Controllers.EnumsApiController"/> class.
            </summary>
            <param name="unit">The unit.</param>
        </member>
        <member name="M:BlueDeck.Controllers.EnumsApiController.GetAll">
            <summary>
            Gets a List of all BlueDeck enumerable types
            </summary>
            <remarks>
            Sample request:
            
                GET /EnumsApi/GetAll
                {
                    "genders": [
                        {
                            "genderId": 1,
                            "genderFullName": "Unknown",
                            "abbreviation": "U",
                            "members": null
                        },
                        {
                            "genderId": 2,
                            "genderFullName": "Male",
                            "abbreviation": "M",
                            "members": null
                        }
                    ],
                    "ranks": [
                        {
                            "rankId": 1,
                            "rankFullName": "Police Officer",
                            "rankShort": "P/O",
                            "payGrade": "L01",
                            "isSworn": true,
                            "members": null
                        },
                        {
                            "rankId": 2,
                            "rankFullName": "Police Officer First Class",
                            "rankShort": "POFC",
                            "payGrade": "L02",
                            "isSworn": true,
                            "members": null
                        }
                    ],
                    ...              
                }
                    
            Use this method to retrieve a collection of all BlueDeck Enumerable types
            </remarks>
            <returns>A collection of all BlueDeck Enumerable types</returns>
            <response code="200">Returns a JSON object containing all BlueDeck Enumerable types</response>
        </member>
        <member name="M:BlueDeck.Controllers.EnumsApiController.GetGenders">
            <summary>
            Gets a list of BlueDeck Gender Types.
            </summary>
            <remarks>
            Use this method to create Select Lists that allow a user to select one of the available BlueDeck genders.
            Sample request:
            
                GET: EnumsApi/GetGenders
                [
                    {
                        "genderId": 1,
                        "genderName": "Unknown",
                        "abbreviation": "U"
                    },
                    {
                        "genderId": 2,
                        "genderName": "Male",
                        "abbreviation": "M"
                    },
                    {
                        "genderId": 3,
                        "genderName": "Female",
                        "abbreviation": "F"
                    }
                ]
            </remarks>
            <returns>A list of <see cref="T:BlueDeck.Models.APIModels.GenderApiResult"/> of all current gender types in the BlueDeck Database</returns>
            <response code="200">Returns a JSON Object containing all current BlueDeck gender enumerables.</response>
        </member>
        <member name="M:BlueDeck.Controllers.EnumsApiController.GetRanks">
            <summary>
            Gets a list of BlueDeck Rank Types.
            </summary>
            <remarks>
            Use this method to create Select Lists that allow a user to select one of the available BlueDeck ranks.
            Sample request:
            
                GET: EnumsApi/GetRanks
                [
                    {
                        "rankId": 1,
                        "rankName": "Police Officer ",
                        "rankShort": "P/O",
                        "payGrade": "L01",
                        "isSworn": true
                    },
                    {
                        "rankId": 2,
                        "rankName": "Police Officer First Class",
                        "rankShort": "POFC",
                        "payGrade": "L02",
                        "isSworn": true
                    }
                ]
            </remarks>
            <returns>A list of <see cref="T:BlueDeck.Models.APIModels.RankApiResult"/> of all current rank types in the BlueDeck Database</returns>
            <response code="200">Returns a JSON Object containing all current BlueDeck rank enumerables.</response>
        </member>
        <member name="M:BlueDeck.Controllers.EnumsApiController.GetRaces">
            <summary>
            Gets a list of BlueDeck Race Types.
            </summary>
            <remarks>
            Use this method to create Select Lists that allow a user to select one of the available BlueDeck races.
            Sample request:
            
                GET: EnumsApi/GetRaces
                [
                    {
                        "raceId": 1,
                        "raceName": "Black",
                        "abbreviation": "B"
                    },
                    {
                        "raceId": 2,
                        "raceName": "White",
                        "abbreviation": "W"
                    },
                    {
                        "raceId": 3,
                        "raceName": "Asian",
                        "abbreviation": "A"
                    }
                ]
            </remarks>
            <returns>A list of <see cref="T:BlueDeck.Models.APIModels.RaceApiResult"/> of all current race types in the BlueDeck Database</returns>
            <response code="200">Returns a JSON Object containing all current BlueDeck race enumerables.</response>
        </member>
        <member name="M:BlueDeck.Controllers.EnumsApiController.GetDutyStatuses">
            <summary>
            Gets a list of BlueDeck Duty Status Types.
            </summary>
            <remarks>
            Use this method to create Select Lists that allow a user to select one of the available BlueDeck Duty Statuses.
            Sample request:
            
                GET: EnumsApi/GetDutyStatuses
                [
                     {
                       "name": "Full Duty",
                       "abbreviation": "F",
                       "hasPolicePower": true
                     },
                     {
                       "name": "Light Duty",
                       "abbreviation": "L",
                       "hasPolicePower": true
                     },
                     {
                       "name": "No Duty",
                       "abbreviation": "N",
                       "hasPolicePower": true
                     }
                ]
            </remarks>
            <returns>A list of <see cref="T:BlueDeck.Models.APIModels.DutyStatusApiResult"/> of all current duty status types in the BlueDeck Database</returns>
            <response code="200">Returns a JSON Object containing all current BlueDeck duty status enumerables.</response>
        </member>
        <member name="M:BlueDeck.Controllers.EnumsApiController.GetPhoneNumberTypes">
            <summary>
            Gets a list of BlueDeck Phone Number Types.
            </summary>
            <remarks>
            Use this method to create Select Lists that allow a user to select one of the available BlueDeck Phone Number Types.
            Sample request:
            
                GET: EnumsApi/GetPhoneNumberTypes
                [
                    {
                        "phoneNumberTypeId": 1,
                        "phoneNumberTypeName": "Cell (Personal)"
                    },
                    {
                        "phoneNumberTypeId": 2,
                        "phoneNumberTypeName": "Cell (Work)"
                    },
                    {
                        "phoneNumberTypeId": 3,
                        "phoneNumberTypeName": "Office"
                    }
                ]
            </remarks>
            <returns>A list of <see cref="T:BlueDeck.Models.APIModels.PhoneNumberTypeApiResult"/> of all current phone number types in the BlueDeck Database</returns>
            <response code="200">Returns a JSON Object containing all current BlueDeck phone number enumerables.</response>
        </member>
        <member name="M:BlueDeck.Controllers.EnumsApiController.GetRoleTypes">
            <summary>
            Gets a list of BlueDeck Member Role Types.
            </summary>
            <remarks>
            Use this method to create Select Lists that allow a user to select one of the available BlueDeck Member Role Types.
            Sample request:
            
                GET: EnumsApi/GetRoleTypes
                [
                    {
                        "roleTypeId": 1,
                        "roleTypeName": "GlobalAdmin"
                    },
                    {
                        "roleTypeId": 2,
                        "roleTypeName": "ComponentAdmin"
                    },
                    {
                        "roleTypeId": 3,
                        "roleTypeName": "User"
                    }
                ]
            </remarks>
            <returns>A list of <see cref="T:BlueDeck.Models.APIModels.RoleTypeApiResult"/> of all current member role types types in the BlueDeck Database</returns>
            <response code="200">Returns a JSON Object containing all current BlueDeck member role type enumerables.</response>
        </member>
        <member name="M:BlueDeck.Controllers.EnumsApiController.GetAppStatuses">
            <summary>
            Gets a list of BlueDeck Application Status Types.
            </summary>
            <remarks>
            Use this method to create Select Lists that allow a user to select one of the available BlueDeck Member Account application status Types.
            Sample request:
            
                GET: EnumsApi/GetAppStatuses
                [
                    {
                        "appStatusId": 1,
                        "statusName": "New"
                    },
                    {
                        "appStatusId": 2,
                        "statusName": "Pending"
                    },
                    {
                        "appStatusId": 3,
                        "statusName": "Active"
                    }
                ]
            </remarks>
            <returns>A list of <see cref="T:BlueDeck.Models.APIModels.AppStatusApiResult"/> of all current member account application status types in the BlueDeck Database</returns>
            <response code="200">Returns a JSON Object containing all current BlueDeck member account application status type enumerables.</response>
        </member>
        <member name="T:BlueDeck.Controllers.ErrorController">
            <summary>
            Controller that handles views for custom error pages.
            </summary>
            <seealso cref="T:Microsoft.AspNetCore.Mvc.Controller" />
        </member>
        <member name="M:BlueDeck.Controllers.ErrorController.Error(System.Nullable{System.Int32})">
            <summary>
            Errors the specified status code.
            </summary>
            <param name="statusCode">The status code.</param>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Controllers.ErrorController.Error500">
            <summary>
            Returns the view for Server errors handled by the global error handling middleware.
            </summary>
            <returns></returns>
        </member>
        <member name="T:BlueDeck.Controllers.GenderController">
            <summary>
            Controller that handles CRUD actions and views for the <see cref="T:BlueDeck.Models.Gender"/> entity.
            </summary>
            <remarks>
            Actions in this view are restricted by the <see cref="T:BlueDeck.Models.Auth.IsGlobalAdminRequirement"/>
            </remarks>
            <seealso cref="T:Microsoft.AspNetCore.Mvc.Controller" />
        </member>
        <member name="M:BlueDeck.Controllers.GenderController.#ctor(BlueDeck.Models.IUnitOfWork)">
            <summary>
            Initializes a new instance of the <see cref="T:BlueDeck.Controllers.GenderController"/> class.
            </summary>
            <param name="unit">The injected <see cref="T:BlueDeck.Models.IUnitOfWork"/> obtained from the services middleware.</param>
        </member>
        <member name="M:BlueDeck.Controllers.GenderController.Index">
            <summary>
            Returns a view that lists all current <see cref="T:BlueDeck.Models.Gender"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Controllers.GenderController.Details(System.Nullable{System.Int32},System.String)">
            <summary>
            Returns a view that shows details for a specific <see cref="T:BlueDeck.Models.Gender"/> entity.
            </summary>
            <param name="id">The identity of the <see cref="T:BlueDeck.Models.Gender"/>.</param>
            <param name="returnUrl">An optional return URL.</param>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Controllers.GenderController.Create(System.String)">
            <summary>
            Retrieves the view that allows a user to create a new <see cref="T:BlueDeck.Models.Gender"/>
            </summary>
            <param name="returnUrl">An optional return URL.</param>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Controllers.GenderController.Create(BlueDeck.Models.Gender,System.String)">
            <summary>
            Creates the specified gender.
            </summary>
            <param name="gender">The POSTed form data, bound to a <see cref="T:BlueDeck.Models.Gender"/> object.</param>
            <param name="returnUrl">An optional return URL.</param>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Controllers.GenderController.Edit(System.Nullable{System.Int32},System.String)">
            <summary>
            Returns a view that allows a user to edit an existing <see cref="T:BlueDeck.Models.Gender"/>
            </summary>
            <param name="id">The identity of the <see cref="T:BlueDeck.Models.Gender"/> to be edited.</param>
            <param name="returnUrl">An optional return URL.</param>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Controllers.GenderController.Edit(System.Int32,BlueDeck.Models.Gender,System.String)">
            <summary>
            Edits the specified identifier.
            </summary>
            <param name="id">The identifier of the <see cref="T:BlueDeck.Models.Gender"/> being edited.</param>
            <param name="gender">The POSTed form data, bound to a <see cref="T:BlueDeck.Models.Gender"/> object.</param>
            <param name="returnUrl">An optional return URL.</param>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Controllers.GenderController.Delete(System.Nullable{System.Int32},System.String)">
            <summary>
            Retrieves a view to confirm the deletion of the <see cref="T:BlueDeck.Models.Gender"/> with the provided id.
            </summary>
            <param name="id">The identifier of the <see cref="T:BlueDeck.Models.Gender"/> to be deleted.</param>
            <param name="returnUrl">The return URL.</param>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Controllers.GenderController.DeleteConfirmed(System.Int32,System.String)">
            <summary>
            Deletes the <see cref="T:BlueDeck.Models.Gender"/> with the provided id.
            </summary>
            <param name="id">The identifier of the <see cref="T:BlueDeck.Models.Gender"/> to be deleted.</param>
            <param name="returnUrl">An optional return URL.</param>
            <returns></returns>
        </member>
        <member name="T:BlueDeck.Controllers.HomeController">
            <summary>
            Controller that contains actions for the Home Page views.
            </summary>
            <seealso cref="T:Microsoft.AspNetCore.Mvc.Controller" />
        </member>
        <member name="M:BlueDeck.Controllers.HomeController.#ctor(BlueDeck.Models.IUnitOfWork)">
            <summary>
            Initializes a new instance of the <see cref="T:BlueDeck.Controllers.HomeController"/> class.
            </summary>
            <param name="unit">The unit.</param>
        </member>
        <member name="M:BlueDeck.Controllers.HomeController.Index">
            <summary>
            Returns the Home/Index view
            </summary>
            <remarks>
            This method retrieves the User's Claims and will return the /Index view or redirect to the /About or /Pending views as appropriate.
            </remarks>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Controllers.HomeController.About">
            <summary>
            Returns the /About view.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Controllers.HomeController.Pending">
            <summary>
            Returns the /Pending view.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Controllers.HomeController.GetMemberSearchViewComponent(System.String)">
            <summary>
            Retrieves the member search view component.
            </summary>
            <param name="searchString">The search string.</param>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Controllers.HomeController.GetDemograpicSearchResultViewComponent(System.Int32,System.Collections.Generic.List{System.Int32},System.Int32,System.Collections.Generic.List{System.Int32})">
            <summary>
            Gets the demograpic search result view component.
            </summary>
            <param name="SelectedDemographicComponent">The selected demographic component.</param>
            <param name="SelectedRanks">The selected ranks.</param>
            <param name="SelectedGender">The selected gender.</param>
            <param name="SelectedRaces">The selected races.</param>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Controllers.HomeController.Register">
            <summary>
            Retrieves the view that allows a user to register for a new account.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Controllers.HomeController.Register(BlueDeck.Models.ViewModels.MemberAddEditViewModel)">
            <summary>
            Creates a new user account.
            </summary>
            <param name="form">The POSTed form data bound to a <see cref="T:BlueDeck.Models.ViewModels.MemberAddEditViewModel"/> object.</param>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Controllers.HomeController.DownloadAlphaRoster(System.Int32)">
            <summary>
            Downloads an alphabetical roster for the Component with the provided identity.
            </summary>
            <param name="id">The identity of the Component.</param>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Controllers.HomeController.DownloadComponentRoster(System.Int32)">
            <summary>
            Downloads an Component roster for the Component with the provided identity.
            </summary>
            <param name="id">The identity of the Component.</param>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Controllers.HomeController.DownloadOrganizationChart(System.Int32)">
            <summary>
            Downloads an organization chart for the Component with the provided id.
            </summary>
            <param name="id">The identity of the Component.</param>
            <returns></returns>
        </member>
        <member name="T:BlueDeck.Controllers.MembersApiController">
            <summary>
            API Controller that Retrieves BlueDeck Member information
            </summary>
            <seealso cref="T:Microsoft.AspNetCore.Mvc.ControllerBase" />
        </member>
        <member name="M:BlueDeck.Controllers.MembersApiController.#ctor(BlueDeck.Models.IUnitOfWork)">
            <summary>
            Initializes a new instance of the <see cref="T:BlueDeck.Controllers.MembersApiController"/> class.
            </summary>
            <param name="unit">The unit.</param>
        </member>
        <member name="M:BlueDeck.Controllers.MembersApiController.GetMembers">
            <summary>
            Gets a List of Member Names/BlueDeck Ids of all Members
            </summary>
            <remarks>
            Sample request:
            
                GET /MembersApi/GetAll
                {
                    {
                        name : "Bob Jones",
                        blueDeckId : "1"
                    },
                    {
                        name : "Steve Johnson",
                        blueDeckId : "2"
                    }
                }
                    
            Use this method to retrieve the BlueDeck Id of a member by the Member's name.
            </remarks>
            <returns>A list of Member Names/BlueDeck Ids of all current Members</returns>
            <response code="200">Returns a JSON object containing all current Members</response>
        </member>
        <member name="M:BlueDeck.Controllers.MembersApiController.SearchMembers(System.String)">
            <summary>
            Searches for a member whose First Name, Last Name, or PGPD ID# matches the provided search string.
            </summary>
            <remarks>
            Sample Request
            
                GET /MembersApi/SearchMembers/smith
                {
                    {
                        name : "Bob Smith",
                        blueDeckId : "1"
                    },
                    {
                        name : "John Smith",
                        blueDeckId : "4"
                    }
                }
            </remarks>
            <param name="searchString">The search string.</param>
            <returns>A list of Members that match the search string</returns>
            <response code="200">Returns a list of Members that match the search string</response>
            <response code="400">No members match the search string</response>
        </member>
        <member name="M:BlueDeck.Controllers.MembersApiController.GetMemberByBlueDeckId(System.Int32)">
            <summary>
            Gets detailed information for a specific member by BlueDeck Id.
            </summary>
            <remarks>
            Sample request:
            
                GET /MembersApi/GetMemberByBlueDeckId/1
                {
                    "memberId": 1,
                    "firstName": "John",
                    "lastName": "Smith",
                    "pgpdId": "1234",
                    "email": "example@email.com",
                    "contactNumbers": [
                        {
                            "type": "Cell (Personal)",
                            "phoneNumber": "(123) 456-7890"
                        }
                    ],
                    "rank": {
                        "rankName": "Lieutenant",
                        "rankShort": "Lt.",
                        "payGrade": "L05",
                        "isSworn": true
                    },
                    "gender": {
                        "name": "Male",
                        "abbreviation": "M"
                    },
                    "race": {
                        "name": "White",
                        "abbreviation": "W"
                    },
                    "dutyStatus": {
                        "name": "Full Duty",
                        "abbreviation": "F",
                        "hasPolicePower": true
                    },
                    "position": {
                        "positionId": 13,
                        "name": "Assistant District Commander, District I",
                        "isManager": true,
                        "isUnique": true,
                        "callsign": null,
                    },
                    "supervisor": {
                        "memberId": 1234,
                        "firstName": "Judy",
                        "lastName": "Johnson",
                        "pgpdId": "4321",
                        "email": "example2@email.net",
                        "contactNumbers": [
                            {
                                "type": "Cell (Work)",
                                "phoneNumber": "(123) 456-7890"
                            }
                        ],
                        "rank": {
                            "rankName": "Captain",
                            "rankShort": "Capt.",
                            "payGrade": "L06",
                            "isSworn": true
                        },
                        "gender": {
                            "name": "Female",
                            "abbreviation": "F"
                        },
                        "race": {
                            "name": "White",
                            "abbreviation": "W"
                        },
                        "dutyStatus": {
                            "name": "Full Duty",
                            "abbreviation": "F",
                            "hasPolicePower": true
                        },
                        "position": {
                            "positionId": 12,
                            "name": "Commander, District I",
                            "isManager": true,
                            "isUnique": true,
                            "callsign": "CAR-11",
                            "component": {
                                "componentId": null,
                                "name": "",
                                "acronym": "",
                                "parentComponent": null
                            }
                        },
                        "supervisor": null
                    }
                } 
                
            </remarks>
            <param name="id">The BlueDeck Id of the member.</param>
            <returns>A collection of detailed information for the Member with the provided BlueDeckId</returns>
            <response code="200">Detailed information for the Member with the provided BlueDeckId</response>
            <response code="400">No member with the provided BlueDeck Id was found</response>
        </member>
        <member name="M:BlueDeck.Controllers.MembersApiController.GetMemberByOrgId(System.String)">
            <summary>
            Gets detailed information for a specific member by Organization Id.
            </summary>
            <remarks>
            Use this method to attempt to retrieve Member details using the Member's known Organization Id Number. The Organization Id is distinct from the Member's BlueDeck Id
            Sample request:
            
                GET /MembersApi/GetMemberByOrgId/1234
                {
                    "memberId": 1,
                    "firstName": "John",
                    "lastName": "Smith",
                    "pgpdId": "1234",
                    "email": "example@email.com",
                    "contactNumbers": [
                        {
                            "type": "Cell (Personal)",
                            "phoneNumber": "(123) 456-7890"
                        }
                    ],
                    "rank": {
                        "rankName": "Lieutenant",
                        "rankShort": "Lt.",
                        "payGrade": "L05",
                        "isSworn": true
                    },
                    "gender": {
                        "name": "Male",
                        "abbreviation": "M"
                    },
                    "race": {
                        "name": "White",
                        "abbreviation": "W"
                    },
                    "dutyStatus": {
                        "name": "Full Duty",
                        "abbreviation": "F",
                        "hasPolicePower": true
                    },
                    "position": {
                        "positionId": 13,
                        "name": "Assistant District Commander, District I",
                        "isManager": true,
                        "isUnique": true,
                        "callsign": null,
                    },
                    "supervisor": {
                        "memberId": 1234,
                        "firstName": "Judy",
                        "lastName": "Johnson",
                        "pgpdId": "4321",
                        "email": "example2@email.net",
                        "contactNumbers": [
                            {
                                "type": "Cell (Work)",
                                "phoneNumber": "(123) 456-7890"
                            }
                        ],
                        "rank": {
                            "rankName": "Captain",
                            "rankShort": "Capt.",
                            "payGrade": "L06",
                            "isSworn": true
                        },
                        "gender": {
                            "name": "Female",
                            "abbreviation": "F"
                        },
                        "race": {
                            "name": "White",
                            "abbreviation": "W"
                        },
                        "dutyStatus": {
                            "name": "Full Duty",
                            "abbreviation": "F",
                            "hasPolicePower": true
                        },
                        "position": {
                            "positionId": 12,
                            "name": "Commander, District I",
                            "isManager": true,
                            "isUnique": true,
                            "callsign": "CAR-11",
                            "component": {
                                "componentId": null,
                                "name": "",
                                "acronym": "",
                                "parentComponent": null
                            }
                        },
                        "supervisor": null
                    }
                } 
                
            </remarks>
            <param name="id">The Organization Id of the member.</param>
            <returns>A collection of detailed information for the Member with the provided Organization Id</returns>
            <response code="200">Detailed information for the Member with the provided Organization Id</response>
            <response code="400">No member with the provided Organization Id was found</response>
        </member>
        <member name="M:BlueDeck.Controllers.MembersApiController.GetSupervisorForBlueDeckId(System.Int32)">
            <summary>
            Gets the first supervisor for the Member with the given BlueDeck Id.
            </summary>
            <remarks>
            This method will parse the current organizational hierarchy and retrieve the first supervisory employee in the chain of command above the member with the given BlueDeck Id.
            
                GET /MembersApi/GetSupervisorForBlueDeckId/1
                {
                    "memberId": 1,
                    "firstName": "Bob",
                    "lastName": "Smith",
                    "pgpdId": "1234",
                    "email": "test@mail.com",
                    "contactNumbers": [],
                    "rank": {
                        "rankId": 5,
                        "rankName": "Lieutenant",
                        "rankShort": "Lt.",
                        "payGrade": "L05",
                        "isSworn": true
                    },
                    "gender": {
                        "genderId": 2,
                        "genderName": "Male",
                        "abbreviation": "M"
                    },
                    "race": {
                        "raceId": 2,
                        "raceName": "White",
                        "abbreviation": "W"
                    },
                    "dutyStatus": {
                        "name": "Full Duty",
                        "abbreviation": "F",
                        "hasPolicePower": true
                    },
                    "position": {
                        "positionId": 1,
                        "name": "Shift Commander",
                        "isManager": true,
                        "isUnique": true,
                        "callsign": "31-ADAM"
                    },
                    "supervisor": null
                }
                
            </remarks>
            <param name="id">The BlueDeck Id of the Member whose supervisor you are trying to retrieve.</param>
            <returns></returns>
            <response code="200">Detailed information for the supervisor of the Member with the provided BlueDeck Id</response>
            <response code="400">No member with the provided BlueDeck Id was found</response>
        </member>
        <member name="M:BlueDeck.Controllers.MembersApiController.GetSupervisorForOrgId(System.String)">
            <summary>
            Gets the first supervisor for the Member with the given BlueDeck Id.
            </summary>
            <remarks>
            This method will parse the current organizational hierarchy and retrieve the first supervisory employee in the chain of command above the member with the given BlueDeck Id.
            
                GET /MembersApi/GetSupervisorForOrgId/1
                {
                    "memberId": 1,
                    "firstName": "Bob",
                    "lastName": "Smith",
                    "pgpdId": "1234",
                    "email": "test@mail.com",
                    "contactNumbers": [],
                    "rank": {
                        "rankId": 5,
                        "rankName": "Lieutenant",
                        "rankShort": "Lt.",
                        "payGrade": "L05",
                        "isSworn": true
                    },
                    "gender": {
                        "genderId": 2,
                        "genderName": "Male",
                        "abbreviation": "M"
                    },
                    "race": {
                        "raceId": 2,
                        "raceName": "White",
                        "abbreviation": "W"
                    },
                    "dutyStatus": {
                        "name": "Full Duty",
                        "abbreviation": "F",
                        "hasPolicePower": true
                    },
                    "position": {
                        "positionId": 1,
                        "name": "Shift Commander",
                        "isManager": true,
                        "isUnique": true,
                        "callsign": "31-ADAM"
                    },
                    "supervisor": null
                }
                
            </remarks>
            <param name="id">The Organization Id of the Member whose supervisor you are trying to retrieve.</param>
            <returns></returns>
            <response code="200">Detailed information for the supervisor of the Member with the provided Organization Id</response>
            <response code="400">No member with the provided Organization Id was found</response>
        </member>
        <member name="M:BlueDeck.Controllers.MembersApiController.GetAssistantSupervisorOrSupervisorForBlueDeckId(System.Int32)">
            <summary>
            Gets the first assistant supervisor or supervisor for the Member with the given BlueDeck Id.
            </summary>
            <remarks>
            This method will parse the current organizational hierarchy and retrieve the first supervisory employee in the chain of command above the member with the given BlueDeck Id.
            Use this method if you want to retrieve the Member's "9-Car."
            
                GET /MembersApi/GetAssistantSupervisorOrSupervisorForBlueDeckId/1234
                {
                    "memberId": 1,
                    "firstName": "Bob",
                    "lastName": "Smith",
                    "pgpdId": "1234",
                    "email": "test@mail.com",
                    "contactNumbers": [],
                    "rank": {
                        "rankId": 5,
                        "rankName": "Lieutenant",
                        "rankShort": "Lt.",
                        "payGrade": "L05",
                        "isSworn": true
                    },
                    "gender": {
                        "genderId": 2,
                        "genderName": "Male",
                        "abbreviation": "M"
                    },
                    "race": {
                        "raceId": 2,
                        "raceName": "White",
                        "abbreviation": "W"
                    },
                    "dutyStatus": {
                        "name": "Full Duty",
                        "abbreviation": "F",
                        "hasPolicePower": true
                    },
                    "position": {
                        "positionId": 1,
                        "name": "Shift Commander",
                        "isManager": true,
                        "isUnique": true,
                        "callsign": "31-ADAM"
                    },
                    "supervisor": null
                }
            </remarks>
            <param name="id">The BlueDeck Id of the Member whose supervisor you are trying to retrieve.</param>
            <returns></returns>
            <response code="200">Detailed information for the supervisor of the Member with the provided BlueDeck Id</response>
            <response code="400">No member with the provided Organization Id was found</response>
        </member>
        <member name="M:BlueDeck.Controllers.MembersApiController.GetAssistantSupervisorOrSupervisorForOrgId(System.String)">
            <summary>
            Gets the first assistant supervisor or supervisor for the Member with the given Organization Id.
            </summary>
            <remarks>
            This method will parse the current organizational hierarchy and retrieve the first supervisory employee in the chain of command above the member with the given Organization Id.
            Use this method if you want to retrieve the Member's "9-Car."
            
                GET /MembersApi/GetAssistantSupervisorOrSupervisorForOrgId/1234
                {
                    "memberId": 1,
                    "firstName": "Bob",
                    "lastName": "Smith",
                    "pgpdId": "1234",
                    "email": "test@mail.com",
                    "contactNumbers": [],
                    "rank": {
                        "rankId": 5,
                        "rankName": "Lieutenant",
                        "rankShort": "Lt.",
                        "payGrade": "L05",
                        "isSworn": true
                    },
                    "gender": {
                        "genderId": 2,
                        "genderName": "Male",
                        "abbreviation": "M"
                    },
                    "race": {
                        "raceId": 2,
                        "raceName": "White",
                        "abbreviation": "W"
                    },
                    "dutyStatus": {
                        "name": "Full Duty",
                        "abbreviation": "F",
                        "hasPolicePower": true
                    },
                    "position": {
                        "positionId": 1,
                        "name": "Shift Commander",
                        "isManager": true,
                        "isUnique": true,
                        "callsign": "31-ADAM"
                    },
                    "supervisor": null
                }
            </remarks>
            <param name="id">The Organization Id of the Member whose supervisor you are trying to retrieve.</param>
            <returns></returns>
            <response code="200">Detailed information for the supervisor of the Member with the provided Organization Id</response>
            <response code="400">No member with the provided Organization Id was found</response>
        </member>
        <member name="M:BlueDeck.Controllers.MembersApiController.GetSubordinatesForBlueDeckId(System.Int32)">
            <summary>
            Gets a list of subordinates for a given Member by BlueDeck Id.
            </summary>
            <remarks>
            
                GET: /MembersApi/GetSubordinatesForBlueDeckId/1234
                [
                    {
                        "name": "Lt. Bob Jones #1234",
                        "blueDeckId": 1,
                        "orgId": "1234"
                    },
                    {
                        "name": "P/O John Smith #1111",
                        "blueDeckId": 1410,
                        "orgId": "1111"
                    },
                    {
                        "name": "Sgt. John Doe #2222",
                        "blueDeckId": 1065,
                        "orgId": "2222"
                    }
                ]
            Use this method to retrieve a basic list of Members who are subordinate to the Member with a given BlueDeck Id.
            </remarks>
            <param name="id">The BlueDeck Id of the Supervisor for whom you would like a subordinate list.</param>
            <returns>A JSON Object containing a list of all members subordinate to the Member with the given BlueDeck Id.</returns>
            <response code="200">A list of Members subordinate to the Member with the given BlueDeck Id.</response>
            <response code="400">No member with the provided Organization Id was found, or the Member has no subordinates.</response>
        </member>
        <member name="M:BlueDeck.Controllers.MembersApiController.GetSubordinatesForOrgId(System.String)">
            <summary>
            Gets a list of subordinates for a given Member by Organization Id.
            </summary>
            <remarks>
            
                GET: /MembersApi/GetSubordinatesForOrgId/1234
                [
                    {
                        "name": "Lt. Bob Jones #1234",
                        "blueDeckId": 1,
                        "orgId": "1234"
                    },
                    {
                        "name": "P/O John Smith #1111",
                        "blueDeckId": 1410,
                        "orgId": "1111"
                    },
                    {
                        "name": "Sgt. John Doe #2222",
                        "blueDeckId": 1065,
                        "orgId": "2222"
                    }
                ]
            Use this method to retrieve a basic list of Members who are subordinate to the Member with a given Organization Id.
            </remarks>
            <param name="id">The Organization Id of the Supervisor for whom you would like a subordinate list.</param>
            <returns>A JSON Object containing a list of all members subordinate to the Member with the given Organization Id.</returns>
            <response code="200">A list of Members subordinate to the Member with the given Organization Id.</response>
            <response code="400">No member with the provided Organization Id was found, or the Member has no subordinates.</response>
        </member>
        <member name="T:BlueDeck.Controllers.MembersController">
            <summary>
            Controller for Member CRUD actions
            </summary>
            <seealso cref="T:Microsoft.AspNetCore.Mvc.Controller" />
        </member>
        <member name="F:BlueDeck.Controllers.MembersController.PageSize">
            <summary>
            Property that determines the page length of List views returned from this controller.
            </summary>
        </member>
        <member name="M:BlueDeck.Controllers.MembersController.#ctor(BlueDeck.Models.IUnitOfWork)">
            <summary>
            Initializes a new instance of the <see cref="T:BlueDeck.Controllers.MembersController"/> class.
            </summary>
            <param name="unit">A Dependency-Injected IUnitOfWork object.<see cref="T:BlueDeck.Models.IUnitOfWork"/>.</param>
        </member>
        <member name="M:BlueDeck.Controllers.MembersController.Index(System.String,System.String,System.Int32)">
            <summary>
            GET: The Members/Index view.
            </summary>
            <remarks>
            This method can return a paginated list of members with an optional sort order or search string.
            </remarks>
            <param name="sortOrder">
            An optional String parameter that will control the order of the result set. The options are:
            Last Name: (Ascending: Default)/"lastName_desc"
            First Name: "FirstName"/"firstName_desc"
            ID Number: "IDNumber"/"idNumber_desc"
            Position Name: "PositionName"/"positionName_desc"
            </param>
            <param name="searchString">
            An optional string parameter that will search for a match in 
            LastName, FirstName, PositionName, IdNumber.
            Non-alphanumeric characters will be removed prior to comparison. Both the searchString and the comparison text will be converted to lower case prior to comparing.
            </param>
            <returns>An <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/></returns>
        </member>
        <member name="M:BlueDeck.Controllers.MembersController.Details(System.Nullable{System.Int32},System.String)">
            <summary>
            GET: Members/Details/5.
            </summary>
            <param name="id">The identifier for a Member.</param>
            <param name="returnUrl">An optional return Url</param>
            <returns>An <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/></returns>
        </member>
        <member name="M:BlueDeck.Controllers.MembersController.Create(System.String)">
            <summary>
            GET: Members/Create.
            </summary>
            <param name="returnUrl">An optional returnUrl parameter.</param>
            <returns>An <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/></returns>
        </member>
        <member name="M:BlueDeck.Controllers.MembersController.Create(BlueDeck.Models.ViewModels.MemberAddEditViewModel,System.String)">
            <summary>
            POST: Members/Create.
            </summary>
            <param name="form">A <see cref="T:BlueDeck.Models.ViewModels.MemberAddEditViewModel"/> with certain fields bound on submit</param>
            <param name="returnUrl">An optional return URL.</param>
            <returns>An <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/></returns>
        </member>
        <member name="M:BlueDeck.Controllers.MembersController.Edit(System.Nullable{System.Int32},System.String)">
            <summary>
            Members/Edit/5
            </summary>
            <param name="id">The identity of the Member being edited.</param>
            <param name="returnUrl">An optional return URL</param>
            <returns>An <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/></returns>
        </member>
        <member name="M:BlueDeck.Controllers.MembersController.Edit(System.Int32,BlueDeck.Models.ViewModels.MemberAddEditViewModel,System.String)">
            <summary>
            POST: Members/Edit/5
            </summary>
            <param name="id">The MemberId for the <see cref="T:BlueDeck.Models.Member"/> being edited</param>
            <param name="form">The <see cref="T:BlueDeck.Models.ViewModels.MemberAddEditViewModel"/> object to which the POSTed form is Bound</param>
            <returns>An <see cref="T:IActionResult"/></returns>
        </member>
        <member name="M:BlueDeck.Controllers.MembersController.Delete(System.Nullable{System.Int32},System.String)">
            <summary>
            GET: Member/Delete/5
            </summary>
            <param name="id">The MemberId of the <see cref="T:BlueDeck.Models.Member"/> being deleted</param>
            <param name="returnUrl">An optional URI to redirect the user via the "Cancel" button or as a pass-through.</param>
            <returns>An <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/> that prompts the user to confirm the deletion of the Member with the given id</returns>
        </member>
        <member name="M:BlueDeck.Controllers.MembersController.DeleteConfirmed(System.Int32,System.String)">
            <summary>
            POST: Members/Delete/5
            </summary>
            <param name="id">The MemberId of the <see cref="T:BlueDeck.Models.Member"/> being deleted</param>
            <returns>An <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/> that redirects to <see cref="M:BlueDeck.Controllers.MembersController.Index(System.String,System.String,System.Int32)"/> on successful deletion of a Member.</returns>
        </member>
        <member name="M:BlueDeck.Controllers.MembersController.MemberExists(System.Int32)">
            <summary>
            Determines if a Member exists with the provided MemberId .
            </summary>
            <param name="id">The MemberId of the <see cref="T:BlueDeck.Models.Member"/></param>
            <returns>True if a <see cref="T:BlueDeck.Models.Member"/> with the given id exists</returns>
        </member>
        <member name="M:BlueDeck.Controllers.MembersController.GetMemberContactNumberViewComponent(System.Int32)">
            <summary>
            Gets the member contact number view component.
            </summary>
            <remarks>
            This View Component is used to add Phone Numbers in the Members/Edit and Member/Edit Modal Views
            </remarks>
            <param name="memberId">The member identifier.</param>
            <returns></returns>
        </member>
        <member name="T:BlueDeck.Controllers.OrgChartController">
            <summary>
            Serves Views and data that renders in <a href="http://www.getorgchart.com/Documentation#separationMixedHierarchyNodes" >GetOrgChart</a> Plugin
            </summary>
            <seealso cref="T:Microsoft.AspNetCore.Mvc.Controller" />
        </member>
        <member name="M:BlueDeck.Controllers.OrgChartController.#ctor(BlueDeck.Models.IUnitOfWork)">
            <summary>
            Initializes a new instance of the <see cref="T:BlueDeck.Controllers.HomeController"/> class.
            </summary>
            <param name="unit">An <see cref="T:BlueDeck.Models.IUnitOfWork"/></param>
        </member>
        <member name="M:BlueDeck.Controllers.OrgChartController.GetComponents(System.Int32)">
            <summary>
            Gets the components. (async, JSON result from the GetOrgChart JQuery Library)
            </summary>
            <param name="parentComponentId">The component id of the Top-level component in the desired result set.</param>
            <returns>A JSON object containing a list of <see cref="T:BlueDeck.Models.ChartableComponentWithMember"/> objects.</returns>
        </member>
        <member name="M:BlueDeck.Controllers.OrgChartController.GetComponentSelectListItems">
            <summary>
            Gets the component select list items.
            </summary>
            <remarks>
            This method retrieves a list of <see cref="T:BlueDeck.Models.Types.ComponentSelectListItem"/> items for use in the Component select list drop-down.
            </remarks>
            <returns>A JSON object containing all <see cref="T:BlueDeck.Models.Types.ComponentSelectListItem"/> items.</returns>
        </member>
        <member name="M:BlueDeck.Controllers.OrgChartController.Index(System.Nullable{System.Int32})">
            <summary>
            GET /OrgChart/Index
            </summary>
            <remarks>
            Retrieves the OrgChart/Index view, which loads the GetOrgChart plugin.
            </remarks>
            <returns>An <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/></returns>
        </member>
        <member name="T:BlueDeck.Controllers.PhoneTypeController">
            <summary>
            Controller that handles views for CRUD function for the <see cref="T:BlueDeck.Models.PhoneNumberType"/> entity.
            </summary>
            <seealso cref="T:Microsoft.AspNetCore.Mvc.Controller" />
        </member>
        <member name="M:BlueDeck.Controllers.PhoneTypeController.#ctor(BlueDeck.Models.IUnitOfWork)">
            <summary>
            Initializes a new instance of the <see cref="T:BlueDeck.Controllers.PhoneTypeController"/> class.
            </summary>
            <param name="unit">An injected <see cref="T:BlueDeck.Models.IUnitOfWork"/> obtained from the services middleware.</param>
        </member>
        <member name="M:BlueDeck.Controllers.PhoneTypeController.Index">
            <summary>
            GET: PhoneType/Index
            </summary>
            <remarks>
            This view shows a list of all <see cref="T:BlueDeck.Models.PhoneNumberType"/> entities in the database.
            </remarks>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Controllers.PhoneTypeController.Details(System.Nullable{System.Int32},System.String)">
            <summary>
            GET: PhoneType/Details/5
            </summary>
            <remarks>
            This view displays detailed information for a <see cref="T:BlueDeck.Models.PhoneNumberType"/> entity.
            </remarks>
            <param name="id">The identifier of the <see cref="T:BlueDeck.Models.PhoneNumberType"/>.</param>
            <param name="returnUrl">An optional return URL.</param>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Controllers.PhoneTypeController.Create(System.String)">
            <summary>
            GET: PhoneType/Create
            </summary>
            <param name="returnUrl">An optional return URL.</param>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Controllers.PhoneTypeController.Create(BlueDeck.Models.PhoneNumberType,System.String)">
            <summary>
            POST: PhoneType/Create
            </summary>
            <param name="phoneType">A POSTed form object bound to a <see cref="T:BlueDeck.Models.PhoneNumberType"/> object.</param>
            <param name="returnUrl">The return URL.</param>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Controllers.PhoneTypeController.Edit(System.Nullable{System.Int32},System.String)">
            <summary>
            GET: PhoneType/Edit
            </summary>
            <param name="id">The identity of the <see cref="T:BlueDeck.Models.PhoneNumberType"/> entity.</param>
            <param name="returnUrl">The return URL.</param>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Controllers.PhoneTypeController.Edit(System.Int32,BlueDeck.Models.PhoneNumberType,System.String)">
            <summary>
            POST: PhoneType/Edit/5
            </summary>
            <param name="id">The identity of the <see cref="T:BlueDeck.Models.PhoneNumberType"/> entity being edited.</param>
            <param name="phoneType">A POSTed form object, bound to a <see cref="T:BlueDeck.Models.PhoneNumberType"/> object.</param>
            <param name="returnUrl">The return URL.</param>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Controllers.PhoneTypeController.Delete(System.Nullable{System.Int32},System.String)">
            <summary>
            GET: PhoneType/Delete/5
            </summary>
            <param name="id">The identity of the <see cref="T:BlueDeck.Models.PhoneNumberType"/> being edited.</param>
            <param name="returnUrl">The return URL.</param>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Controllers.PhoneTypeController.DeleteConfirmed(System.Int32,System.String)">
            <summary>
            POST: PhoneType/Delete/5
            </summary>
            <param name="id">The identity of the <see cref="T:BlueDeck.Models.PhoneNumberType"/> entity being edited.</param>
            <param name="returnUrl">The return URL.</param>
            <returns></returns>
        </member>
        <member name="T:BlueDeck.Controllers.PositionsApiController">
            <summary>
            Controller that handles WebAPI requests for the <see cref="T:BlueDeck.Models.Position"/> entity.
            </summary>
            <seealso cref="T:Microsoft.AspNetCore.Mvc.ControllerBase" />
        </member>
        <member name="M:BlueDeck.Controllers.PositionsApiController.#ctor(BlueDeck.Models.IUnitOfWork)">
            <summary>
            Initializes a new instance of the <see cref="T:BlueDeck.Controllers.PositionsApiController"/> class.
            </summary>
            <param name="unit">An injected <see cref="T:BlueDeck.Models.IUnitOfWork"/> obtained from the services middleware.</param>
        </member>
        <member name="M:BlueDeck.Controllers.PositionsApiController.GetPositions">
            <summary>
            Gets a List of Position Names/Ids of all Positions
            </summary>
            <remarks>
            Sample request:
            
                GET /PositionsApi/GetAll
                {
                    {
                        positionId : "1",
                        name : "Squad 1 OIC"
                    },
                    {
                        positionId : "2",
                        name : "Shift 1 Commander"            
                    }
                }
                    
            Use this method to retrieve the Position Id of a position by the Position's name.
            </remarks>
            <returns>A list of Position Names/Ids of all current Positions</returns>
            <response code="200">Returns a JSON object containing all current Positions</response>
        </member>
        <member name="M:BlueDeck.Controllers.PositionsApiController.SearchPositions(System.String)">
            <summary>
            Searches for a Position whose name or callsign matches the provided search string.
            </summary>
            <remarks>
            Sample Request
            
                GET /PositionsApi/SearchPositions/District I
                {
                    {
                        positionId : "1",
                        name : "District I Commander"
                    },
                    {
                        positionId : "2",
                        name : "District I, Shift I Commander"            
                    }
                }
            </remarks>
            <param name="searchString">The search string.</param>
            <returns>A list of Positions that match the search string</returns>
            <response code="200">Returns a list of Positions that match the search string</response>
            <response code="400">No Positions match the search string</response>
        </member>
        <member name="M:BlueDeck.Controllers.PositionsApiController.GetPosition(System.Int32)">
            <summary>
            Gets detailed information for a specific Position by BlueDeck Id.
            </summary>
            <remarks>
            Sample request:
            
                GET /PositionsApi/GetPosition/10
                {
                    "positionId": 10,
                    "name": "OIC, Squad 1",
                    "isManager": true,
                    "isUnique": true,
                    "callsign": "BAKER-10",
                    "component": {
                    "componentId": 84,
                    "name": "Squad 1",
                    "acronym": "NULL"
                     },
                    "members": [
                        {
                            "memberId": 1234,
                            "firstName": "John",
                            "lastName": "Smith",
                            "pgpdId": "4321",
                            "email": "example@mail.com",
                            "contactNumbers": [],
                            "rank": {
                                "rankName": "Sergeant",
                                "rankShort": "Sgt.",
                                "payGrade": "L04",
                                "isSworn": true
                            },
                            "gender": {
                                "name": "Male",
                                "abbreviation": "M"
                            },
                            "race": {
                                "name": "Black",
                                "abbreviation": "B"
                            },
                            "dutyStatus": {
                                "name": "Full Duty",
                                "abbreviation": "F",
                                "hasPolicePower": true
                            }
                        }
                    ]
                }
                
            </remarks>
            <param name="id">The Position Id of the Position.</param>
            <returns>A collection of detailed information for the Position with the provided PositionId</returns>
            <response code="200">Detailed information for the Positionwith the provided PositionId</response>
            <response code="400">No Position with the provided Position Id was found</response>
        </member>
        <member name="T:BlueDeck.Controllers.PositionsController">
            <summary>
            Controller for Position CRUD actions
            </summary>
            <seealso cref="T:Microsoft.AspNetCore.Mvc.Controller" />
        </member>
        <member name="F:BlueDeck.Controllers.PositionsController.PageSize">
            <summary>
            Property that sets the length of the index view pages
            </summary>
        </member>
        <member name="M:BlueDeck.Controllers.PositionsController.#ctor(BlueDeck.Models.IUnitOfWork)">
            <summary>
            Initializes a new instance of the <see cref="T:BlueDeck.Controllers.PositionsController"/> class.
            </summary>
            <param name="unit">An injected <see cref="T:BlueDeck.Models.IUnitOfWork"/> obtained from the services middleware.</param>
        </member>
        <member name="M:BlueDeck.Controllers.PositionsController.Index(System.String,System.String,System.Int32)">
            <summary>
            GET: Positions/Index
            </summary>
            <param name="sortOrder">
            An optional sort order parameter.
            The method can sort by: (Asc/Desc)
            Position Name : (default)/"name_desc"
            Parent Component Name: "ParentComponentName"/"parentName_desc"
            </param>
            <param name="searchString">
            An optional search string parameter.
            The method will search against the PositionName and ParentComponentName fields.
            Non-alphanumeric characters will be removed, and both the search text and the property text will be converted to lowercase prior to the comparison.
            </param>
            <param name="page">The page.</param>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Controllers.PositionsController.Details(System.Nullable{System.Int32},System.String)">
            <summary>
            GET: Positions/Details/5
            </summary>
            <param name="id">The identifier of the <see cref="T:BlueDeck.Models.Position"/>.</param>
            <param name="returnUrl">An optional return URL.</param>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Controllers.PositionsController.Create(System.String)">
            <summary>
            GET: Positions/Create
            </summary>
            <remarks>
            Returns a view that allows a User to create a new <see cref="T:BlueDeck.Models.Position"/>.
            </remarks>
            <param name="returnUrl">An optional return URL.</param>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Controllers.PositionsController.Create(BlueDeck.Models.ViewModels.PositionWithComponentListViewModel,System.String)">
            <summary>
            POST: Positions/Create
            </summary>
            <remarks>
            Creates a new Position from POSTed form data
            </remarks>
            <param name="form">The form data, bound to a <see cref="T:BlueDeck.Models.Types.PositionIndexViewModelPositionListItem"/>.</param>
            <param name="returnUrl">An optional return URL.</param>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Controllers.PositionsController.Edit(System.Nullable{System.Int32},System.String)">
            <summary>
            GET: Positions/Edit
            </summary>
            <param name="id">The identifier of the <see cref="T:BlueDeck.Models.Position"/> being edited.</param>
            <param name="returnUrl">An optional return URL.</param>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Controllers.PositionsController.Edit(System.Int32,BlueDeck.Models.ViewModels.PositionWithComponentListViewModel,System.String)">
            <summary>
            POST: Positions/Edit
            </summary>
            <param name="id">The identifier of the <see cref="T:BlueDeck.Models.Position"/> being edited.</param>
            <param name="form">The form data, bound to a <see cref="T:BlueDeck.Models.ViewModels.PositionWithComponentListViewModel"/>.</param>
            <param name="returnUrl">An optional return URL.</param>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Controllers.PositionsController.Delete(System.Nullable{System.Int32},System.String)">
            <summary>
            GET: Positions/Delete/5
            </summary>
            <remarks>
            Returns a view that allows a user to confirm the deletion of a position.
            </remarks>
            <param name="id">The identifier of the Position to delete.</param>
            <param name="returnUrl">The return URL.</param>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Controllers.PositionsController.DeleteConfirmed(System.Int32,System.String)">
            <summary>
            POST: Positions/Delete/5
            </summary>
            <remarks>
            This method will delete a <see cref="T:BlueDeck.Models.Position"/> and reassign any assigned members to the "Unassigned" pool.
            </remarks>
            <param name="id">The identifier of the <see cref="T:BlueDeck.Models.Position"/> being deleted.</param>
            <param name="returnUrl">An optional return URL.</param>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Controllers.PositionsController.PositionExists(System.Int32)">
            <summary>
            Determines if a position exists based on PositionId.
            </summary>
            <param name="id">The identifier of the Position.</param>
            <returns>True if the Position is found, otherwise False</returns>
        </member>
        <member name="M:BlueDeck.Controllers.PositionsController.GetPositionLineupViewComponent(System.Int32,System.Int32)">
            <summary>
            Gets the position lineup view component.
            </summary>
            <param name="componentId">The component identifier.</param>
            <param name="positionBeingEditedId">The position being edited identifier.</param>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Controllers.PositionsController.AssignMember(System.String,System.Int32,System.Int32)">
            <summary>
            Assigns the member.
            </summary>
            <param name="addOrRemove">The add or remove.</param>
            <param name="PositionId">The position identifier.</param>
            <param name="MemberId">The member identifier.</param>
            <returns></returns>
        </member>
        <member name="T:BlueDeck.Controllers.RaceController">
            <summary>
            Controller that handles CRUD actions for the <see cref="T:BlueDeck.Models.Race"/> entity.
            </summary>
            <seealso cref="T:Microsoft.AspNetCore.Mvc.Controller" />
        </member>
        <member name="M:BlueDeck.Controllers.RaceController.#ctor(BlueDeck.Models.IUnitOfWork)">
            <summary>
            Initializes a new instance of the <see cref="T:BlueDeck.Controllers.RaceController"/> class.
            </summary>
            <param name="unit">The injected <see cref="T:BlueDeck.Models.IUnitOfWork"/> obtained from the services middleware.</param>
        </member>
        <member name="M:BlueDeck.Controllers.RaceController.Index">
            <summary>
            GET: Race/Index
            </summary>
            <remarks>
            Retrieves a view that lists all <see cref="T:BlueDeck.Models.Race"/> entities in the database.
            </remarks>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Controllers.RaceController.Details(System.Nullable{System.Int32},System.String)">
            <summary>
            GET: Race/Details/5
            </summary>
            <remarks>
            Retrieves a view that shows details for a <see cref="T:BlueDeck.Models.Race"/>
            </remarks>
            <param name="id">The identifier of the <see cref="T:BlueDeck.Models.Race"/>.</param>
            <param name="returnUrl">An optional return URL.</param>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Controllers.RaceController.Create(System.String)">
            <summary>
            GET: Race/Create
            </summary>
            <remarks>
            Retrieves a view that allows a user to create a new <see cref="T:BlueDeck.Models.Race"/>
            </remarks>
            <param name="returnUrl">An optional return URL.</param>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Controllers.RaceController.Create(BlueDeck.Models.Race,System.String)">
            <summary>
            POST: Race/Create
            </summary>
            <remarks>
            Creates a new <see cref="T:BlueDeck.Models.Race"/> from the POSTed form data.
            </remarks>
            <param name="race">The POSTed form data, bound to <see cref="T:BlueDeck.Models.Race"/></param>
            <param name="returnUrl">An optional return URL.</param>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Controllers.RaceController.Edit(System.Nullable{System.Int32},System.String)">
            <summary>
            GET: Race/Edit/5
            </summary>
            <remarks>
            Retrieves a view that allows a user to edit a <see cref="T:BlueDeck.Models.Race"/> entity.
            </remarks>
            <param name="id">The identifier if the <see cref="T:BlueDeck.Models.Race"/> being edited.</param>
            <param name="returnUrl">An optional return URL.</param>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Controllers.RaceController.Edit(System.Int32,BlueDeck.Models.Race,System.String)">
            <summary>
            POST: Race/Edit/5
            </summary>
            <param name="id">The identifier of the <see cref="T:BlueDeck.Models.Race"/> being edited.</param>
            <param name="race">The POSTed form data, bound to a <see cref="T:BlueDeck.Models.Race"/> object.</param>
            <param name="returnUrl">An optional return URL.</param>
            <returns></returns>        
        </member>
        <member name="M:BlueDeck.Controllers.RaceController.Delete(System.Nullable{System.Int32},System.String)">
            <summary>
            GET: Race/Delete/5
            </summary>
            <param name="id">The identifier of the <see cref="T:BlueDeck.Models.Race"/> to delete.</param>
            <param name="returnUrl">An optional return URL.</param>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Controllers.RaceController.DeleteConfirmed(System.Int32,System.String)">
            <summary>
            POST: Race/Delete/5
            </summary>
            <param name="id">The identifier of the <see cref="T:BlueDeck.Models.Race"/> being deleted.</param>
            <param name="returnUrl">An optional return URL.</param>
            <returns></returns>
        </member>
        <member name="T:BlueDeck.Controllers.RankController">
            <summary>
            Controller that handles CRUD actions for the <see cref="T:BlueDeck.Models.Rank"/> entity.
            </summary>
            <seealso cref="T:Microsoft.AspNetCore.Mvc.Controller" />
        </member>
        <member name="M:BlueDeck.Controllers.RankController.#ctor(BlueDeck.Models.IUnitOfWork)">
            <summary>
            Initializes a new instance of the <see cref="T:BlueDeck.Controllers.RankController"/> class.
            </summary>
            <param name="unit">The injected <see cref="T:BlueDeck.Models.IUnitOfWork"/> obtained from the services middleware.</param>
        </member>
        <member name="M:BlueDeck.Controllers.RankController.Index">
            <summary>
            GET: Rank/Index
            </summary>
            <remarks>
            Retrieves a view that lists all <see cref="T:BlueDeck.Models.Rank"/> entities in the database.
            </remarks>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Controllers.RankController.Details(System.Nullable{System.Int32},System.String)">
            <summary>
            GET: Rank/Details/5
            </summary>
            <param name="id">The identifier.</param>
            <param name="returnUrl">The return URL.</param>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Controllers.RankController.Create(System.String)">
            <summary>
            GET: Rank/Create
            </summary>
            <remarks>
            Retrieves the view that allows a user to create a new <see cref="T:BlueDeck.Models.Rank"/>
            </remarks>
            <param name="returnUrl">An optional return URL.</param>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Controllers.RankController.Create(BlueDeck.Models.Rank,System.String)">
            <summary>
            POST: Rank/Create
            </summary>
            <param name="rank">The form data, bound to a <see cref="T:BlueDeck.Models.Rank"/> object.</param>
            <param name="returnUrl">An optional return URL.</param>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Controllers.RankController.Edit(System.Nullable{System.Int32},System.String)">
            <summary>
            GET: Rank/Edit/5
            </summary>
            <remarks>
            Returns a view that allows a user to edit an existing <see cref="T:BlueDeck.Models.Rank"/>
            </remarks>
            <param name="id">The identifier of the <see cref="T:BlueDeck.Models.Rank"/> to be edited.</param>
            <param name="returnUrl">An optional return URL.</param>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Controllers.RankController.Edit(System.Int32,BlueDeck.Models.Rank,System.String)">
            <summary>
            POST: Rank/Edit/5
            </summary>
            <remarks>
            Creates a new <see cref="T:BlueDeck.Models.Rank"/> from POSTed form data.
            </remarks>
            <param name="id">The indentifier of the <see cref="T:BlueDeck.Models.Rank"/> being edited.</param>
            <param name="rank">The POSTed form data, bound to a <see cref="T:BlueDeck.Models.Rank"/> object.</param>
            <param name="returnUrl">An optional return URL.</param>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Controllers.RankController.Delete(System.Nullable{System.Int32},System.String)">
            <summary>
            GET: Rank/Delete/5
            </summary>
            <param name="id">The identifier of the <see cref="T:BlueDeck.Models.Rank"/> being edited.</param>
            <param name="returnUrl">An optional return URL.</param>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Controllers.RankController.DeleteConfirmed(System.Int32,System.String)">
            <summary>
            POST: Rank/Delete/5
            </summary>
            <param name="id">The identifier of the <see cref="T:BlueDeck.Models.Rank"/> being deleted.</param>
            <param name="returnUrl">An optional return URL.</param>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Controllers.RosterController.#ctor(BlueDeck.Models.IUnitOfWork)">
            <summary>
            Initializes a new instance of the <see cref="T:BlueDeck.Controllers.RosterController"/> class.
            </summary>
            <param name="unit">An <see cref="T:BlueDeck.Models.IUnitOfWork"/></param>
        </member>
        <member name="M:BlueDeck.Controllers.RosterController.ReassignMember(System.Int32,System.Int32,System.Int32)">
            <summary>
            Reassigns the member to a new position.
            </summary>
            <remarks>
            This method is invoked via the View's Javascript when a member is Dragged/Dropped into a new position in the RosterManager
            </remarks>
            <param name="memberId">The MemberId of the member being reassigned.</param>
            <param name="positionId">The PositionId of the new position to which the member is to be assigned</param>
            <param name="selectedComponentId">The selected component identifier.</param>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Controllers.RosterController.GetRosterViewComponent(System.Int32)">
            <summary>
            Gets the RosterManager ViewComponent.
            </summary>
            <param name="componentId">The ComponentId of the top-level component</param>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Controllers.RosterController.GetReassignMemberViewComponent(System.Int32,System.Int32)">
            <summary>
            Gets the ReassignEmployee ViewComponent.
            </summary>
            <param name="memberId">The MemberId of the Member being reassigned.</param>
            <param name="selectedComponentId">The ComponentId of the current top-level component shown in the RosterManager.</param>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Controllers.RosterController.ReassignMemberViaModal(BlueDeck.Models.ViewModels.ReassignEmployeeModalViewComponentViewModel)">
            <summary>
            Reassigns the member via POST from the ReassignMemberModal ViewComponent.
            </summary>
            <param name="form">A POSTed <see cref="T:BlueDeck.Models.ViewModels.ReassignEmployeeModalViewComponentViewModel"></see></param>
        </member>
        <member name="M:BlueDeck.Controllers.RosterController.GetAddPositionToComponentViewComponent(System.Int32,System.Nullable{System.Int32})">
            <summary>
            Gets the AddPositionToComponentViewComponent.
            </summary>
            <param name="componentId">The ComponentId of the Component to which a Position is being added</param>
            <returns>A <see cref="T:BlueDeck.ViewComponents.AddPositionToComponentViewComponent"/></returns>
        </member>
        <member name="M:BlueDeck.Controllers.RosterController.AddPositionToComponent(BlueDeck.Models.ViewModels.AddPositionToComponentViewComponentViewModel)">
            <summary>
            Adds a new Position to a Component via POST from the AddPositionToComponentViewComponent.
            </summary>
            <param name="form">The POSTed <see cref="T:BlueDeck.Models.ViewModels.AddPositionToComponentViewComponentViewModel"/></param>
            <returns></returns>
        </member>
        <member name="T:BlueDeck.Models.APIModels.ComponentListApiListItem">
            <summary>
            Class that represents an API List item result for the <see cref="T:BlueDeck.Models.Component"/> entity.
            </summary>
        </member>
        <member name="P:BlueDeck.Models.APIModels.ComponentListApiListItem.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:BlueDeck.Models.APIModels.ComponentListApiListItem.ComponentId">
            <summary>
            Gets or sets the component identifier.
            </summary>
            <value>
            The component identifier.
            </value>
        </member>
        <member name="M:BlueDeck.Models.APIModels.ComponentListApiListItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BlueDeck.Models.APIModels.ComponentListApiListItem"/> class.
            </summary>
        </member>
        <member name="M:BlueDeck.Models.APIModels.ComponentListApiListItem.#ctor(BlueDeck.Models.APIModels.ComponentListApiListItem)">
            <summary>
            Initializes a new instance of the <see cref="T:BlueDeck.Models.APIModels.ComponentListApiListItem"/> class.
            </summary>
            <remarks>
            Constructor that accepts a <see cref="T:BlueDeck.Models.APIModels.ComponentListApiListItem"/>
            </remarks>
            <param name="_c">The <see cref="T:BlueDeck.Models.APIModels.ComponentListApiListItem"/></param>
        </member>
        <member name="M:BlueDeck.Models.APIModels.ComponentListApiListItem.#ctor(BlueDeck.Models.Types.ComponentSelectListItem)">
            <summary>
            Initializes a new instance of the <see cref="T:BlueDeck.Models.APIModels.ComponentListApiListItem"/> class.
            </summary>
            <remarks>
            Constructor that converts a <see cref="T:BlueDeck.Models.Types.ComponentSelectListItem"/> to a <see cref="T:BlueDeck.Models.APIModels.ComponentListApiListItem"/>
            </remarks>
            <param name="_c">The <see cref="T:BlueDeck.Models.Types.ComponentSelectListItem"/></param>
        </member>
        <member name="M:BlueDeck.Models.APIModels.ComponentListApiListItem.#ctor(BlueDeck.Models.Component)">
            <summary>
            Initializes a new instance of the <see cref="T:BlueDeck.Models.APIModels.ComponentListApiListItem"/> class.
            </summary>
            <remarks>
            Constructor that accepts a <see cref="T:BlueDeck.Models.Component"/> entity and creates a <see cref="T:BlueDeck.Models.APIModels.ComponentListApiListItem"/>
            </remarks>
            <param name="_c">The <see cref="T:BlueDeck.Models.Component"/></param>
        </member>
        <member name="T:BlueDeck.Models.ApplicationDbContext">
            <summary>
            Entity Framework DbContext Class
            </summary>
            <seealso cref="T:Microsoft.EntityFrameworkCore.DbContext" />
        </member>
        <member name="M:BlueDeck.Models.ApplicationDbContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{BlueDeck.Models.ApplicationDbContext})">
            <summary>
            Initializes a new instance of the <see cref="T:BlueDeck.Models.ApplicationDbContext"/> class.
            </summary>
            <param name="options">A <see cref="T:Microsoft.EntityFrameWorkCore.DbContextOptions"/> of <see cref="T:BlueDeck.Models.ApplicationDbContext"/></param>
        </member>
        <member name="M:BlueDeck.Models.ApplicationDbContext.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BlueDeck.Models.ApplicationDbContext"/> class.
            </summary>
            <remarks>
            Parameterless Constructor
            </remarks>
        </member>
        <member name="P:BlueDeck.Models.ApplicationDbContext.Components">
            <summary>
            Gets or sets the Components.
            </summary>
            <value>
            A <see cref="T:Microsoft.EntityFrameWorkCore.DbSet{TEntity}"/> of <see cref="T:BlueDeck.Models.Component"/>s.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ApplicationDbContext.Members">
            <summary>
            Gets or sets the Members.
            </summary>
            <value>
            A <see cref="T:Microsoft.EntityFrameWorkCore.DbSet{TEntity}"/> of <see cref="T:BlueDeck.Models.Member"/>s
            </value>
        </member>
        <member name="P:BlueDeck.Models.ApplicationDbContext.Positions">
            <summary>
            Gets or sets the Positions.
            </summary>
            <value>
            A <see cref="T:Microsoft.EntityFrameWorkCore.DbSet{TEntity}"/> of <see cref="T:BlueDeck.Models.Position"/>s
            </value>
        </member>
        <member name="P:BlueDeck.Models.ApplicationDbContext.Ranks">
            <summary>
            Gets or sets the MemberRanks.
            </summary>
            <value>
            A <see cref="T:Microsoft.EntityFrameWorkCore.DbSet{TEntity}"/> of <see cref="T:BlueDeck.Models.MemberRank"/>s
            </value>
        </member>
        <member name="P:BlueDeck.Models.ApplicationDbContext.Races">
            <summary>
            Gets or sets the MemberRaces.
            </summary>
            <value>
            A <see cref="T:Microsoft.EntityFrameWorkCore.DbSet{TEntity}"/> of <see cref="T:BlueDeck.Models.MemberRace"/>s
            </value>
        </member>
        <member name="P:BlueDeck.Models.ApplicationDbContext.Genders">
            <summary>
            Gets or sets the MemberGenders.
            </summary>
            <value>
            A <see cref="T:Microsoft.EntityFrameWorkCore.DbSet{TEntity}"/> of <see cref="T:BlueDeck.Models.MemberGender"/>s
            </value>
        </member>
        <member name="P:BlueDeck.Models.ApplicationDbContext.DutyStatuses">
            <summary>
            Gets or sets the MemberGenders.
            </summary>
            <value>
            A <see cref="T:Microsoft.EntityFrameWorkCore.DbSet{TEntity}"/> of <see cref="T:BlueDeck.Models.MemberDutyStatus"/>s
            </value>
        </member>
        <member name="T:BlueDeck.Models.ChartableComponent">
            <summary>
            Base class for creating an Organization Chart using GetOrgChart
            </summary>
        </member>
        <member name="P:BlueDeck.Models.ChartableComponent.Id">
            <summary>
            Gets or sets the id.
            </summary>
            <value>
            The id of the component.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ChartableComponent.Parentid">
            <summary>
            Gets or sets the parentid. Combined with <see cref="T:BlueDeck.Models.ChartableComponent.Id"/>, this establishes the Child/Parent relationship for rendering using <a href="http://www.getorgchart.com/Documentation">GetOrgChart</a>.
            </summary>
            <value>
            The parentid of the component.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ChartableComponent.ComponentName">
            <summary>
            Gets or sets the name of the component.
            </summary>
            <value>
            The name of the component.
            </value>
        </member>
        <member name="T:BlueDeck.Models.ChartableComponentWithMember">
            <summary>
            An extension of <see cref="T:BlueDeck.Models.ChartableComponent"/> that adds additional display information to render in a <a href="http://www.getorgchart.com/Documentation">GetOrgChart</a> org chart.
            </summary>
            <remarks>
            This is not a direct representation of a <see cref="T:BlueDeck.Models.Component"/> entity. A <a href="http://www.getorgchart.com/Documentation">
            GetOrgChart</a> cannot render a component with multiple positions or multiple members.
            This class is used to map GetOrgChart Components, NOT domain <see cref="T:BlueDeck.Models.Component"/>s.
            When rendering <see cref="T:BlueDeck.Models.Member"/> information into GetOrgChart, an instance of this class will be generated for each.
            </remarks>
            <seealso cref="T:BlueDeck.Models.ChartableComponent" />
        </member>
        <member name="P:BlueDeck.Models.ChartableComponentWithMember.Id">
            <summary>
            Gets or sets the id.
            </summary>
            <value>
            The id of the component.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ChartableComponentWithMember.Parentid">
            <summary>
            Gets or sets the parentid. Combined with <see cref="T:BlueDeck.Models.ChartableComponent.Id"/>, this establishes the Child/Parent relationship for rendering using <a href="http://www.getorgchart.com/Documentation">GetOrgChart</a>.
            </summary>
            <value>
            The parentid of the component.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ChartableComponentWithMember.IsAssistantManager">
            <summary>
            Gets or sets a value indicating whether this instance is assistant manager.
            </summary>
            <value>
              <c>true</c> if this instance is assistant manager; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ChartableComponentWithMember.ComponentName">
            <summary>
            Gets or sets the name of the component.
            </summary>
            <value>
            The name of the component.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ChartableComponentWithMember.PositionId">
            <summary>
            Gets or sets the position id.
            </summary>
            <value>
            The position identifier.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ChartableComponentWithMember.PositionName">
            <summary>
            Gets or sets the name of the position.
            </summary>
            <value>
            The name of the position.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ChartableComponentWithMember.MemberId">
            <summary>
            Gets or sets the member identifier.
            </summary>
            <value>
            The member identifier.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ChartableComponentWithMember.MemberName">
            <summary>
            Gets or sets the name of the member.
            </summary>
            <value>
            The name of the member.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ChartableComponentWithMember.Email">
            <summary>
            Gets or sets the email.
            </summary>
            <value>
            The email.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ChartableComponentWithMember.ContactNumber">
            <summary>
            Gets or sets the contact number.
            </summary>
            <value>
            The contact number.
            </value>
        </member>
        <member name="T:BlueDeck.Models.Component">
            <summary>
            Component Entity
            </summary>
        </member>
        <member name="P:BlueDeck.Models.Component.ComponentId">
            <summary>
            Gets or sets the Component's Id (PK).
            </summary>
            <value>
            The Component's (PK) identifier.
            </value>
        </member>
        <member name="P:BlueDeck.Models.Component.ParentComponent">
            <summary>
            Gets or sets the component's parent <see cref="T:BlueDeck.Models.Component"/>.
            </summary>
            <value>
            The Component's parent <see cref="T:BlueDeck.Models.Component"/>
            </value>
        </member>
        <member name="P:BlueDeck.Models.Component.Name">
            <summary>
            Gets or sets the Component's name.
            </summary>
            <value>
            The name of the Component.
            </value>
        </member>
        <member name="P:BlueDeck.Models.Component.Acronym">
            <summary>
            Gets or sets the Component's acronym.
            </summary>
            <value>
            The acronym of the Component
            </value>        
        </member>
        <member name="P:BlueDeck.Models.Component.LineupPosition">
            <summary>
            Gets or sets the lineup position.
            </summary>
            <remarks>
            This property is used to control the order in which the component is displayed among it's sibling components
            </remarks>
            <value>
            The lineup position.
            </value>
        </member>
        <member name="P:BlueDeck.Models.Component.Positions">
            <summary>
            Gets or sets the list of the <see cref="T:BlueDeck.Models.Position"/>s assinged to this Component.
            </summary>
            <value>
            An <see cref="T:ICollection{T}"/> of <see cref="T:BlueDeck.Models.Position"/>s.
            </value>
        </member>
        <member name="M:BlueDeck.Models.DocGenerators.ComponentRosterGenerator.GenerateComponentTableHeaderRow(System.String,System.Int32)">
            <summary>
            Generates the Header Row for a Component Table.
            </summary>
            <param name="_componentName">Name of the component. This is required to populate the Table title and the link Bookmark</param>
            <param name="_componentId">The component id. This is required for the Table's BookMarkStart/End.</param>
            <returns></returns>
        </member>
        <member name="T:BlueDeck.Models.DutyStatus">
            <summary>
            A Class that represents a member's duty status.  Contains properties and methods used in displaying the duty status of a <see cref="T:BlueDeck.Models.Member"/>
            </summary>
        </member>
        <member name="P:BlueDeck.Models.DutyStatus.DutyStatusId">
            <summary>
            Gets or sets the duty status identifier.
            </summary>
            <value>
            The duty status identifier.
            </value>
        </member>
        <member name="P:BlueDeck.Models.DutyStatus.DutyStatusName">
            <summary>
            Gets or sets the name of the duty status.
            </summary>
            <value>
            The name of the duty status.
            </value>
        </member>
        <member name="P:BlueDeck.Models.DutyStatus.HasPolicePower">
            <summary>
            Gets or sets a value indicating whether this instance has police power.
            </summary>
            <value>
              <c>true</c> if this instance has police power; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:BlueDeck.Models.DutyStatus.Abbreviation">
            <summary>
            Gets or sets the abbreviation.
            </summary>
            <value>
            The abbreviation.
            </value>
        </member>
        <member name="P:BlueDeck.Models.DutyStatus.IsExceptionToNormalDuty">
            <summary>
            Indicates whether the duty status is considered an exception to normal duty.
            </summary>
            <value>
            Status is an exception to normal duty
            </value>
        </member>
        <member name="T:BlueDeck.Models.ExtensionMethods.ExtensionMethods">
            <summary>
            Class containing custom extensions
            </summary>
        </member>
        <member name="M:BlueDeck.Models.ExtensionMethods.ExtensionMethods.Add``1(System.Collections.Generic.IEnumerable{``0},``0)">
            <summary>
            Adds the specified value to a <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </summary>
            <typeparam name="T">The type of Object in the <see cref="T:System.Collections.Generic.IEnumerable`1"/> to which you are adding.</typeparam>
            <param name="e">The <see cref="T:System.Collections.Generic.IEnumerable`1"/> to which you are adding.</param>
            <param name="value">The object of T type to add to the <see cref="T:System.Collections.Generic.IEnumerable`1"/>parameter.</param>
            <returns></returns>
        </member>
        <member name="T:BlueDeck.Models.Gender">
            <summary>
            A Class that represents a Gender.  Contains properties and methods used in displaying the gender of a <see cref="T:BlueDeck.Models.Member"/>
            </summary>
        </member>
        <member name="P:BlueDeck.Models.Gender.GenderId">
            <summary>
            Gets or sets the gender's Id.
            </summary>
            <value>
            The gender Id.
            </value>
        </member>
        <member name="P:BlueDeck.Models.Gender.GenderFullName">
            <summary>
            Gets or sets the full name of the gender.
            </summary>
            <value>
            The full name of the gender.
            </value>
        </member>
        <member name="P:BlueDeck.Models.Gender.Abbreviation">
            <summary>
            Gets or sets the gender's single-character abbreviation.
            </summary>
            <value>
            The gender's single-character abbreviation.
            </value>
        </member>
        <member name="T:BlueDeck.Models.IUnitOfWork">
            <summary>
            An interface that represents the encapsulated Entity Repository Interfaces 
            </summary>
            <seealso cref="T:System.IDisposable" />
            <seealso cref="T:BlueDeck.Models.Repositories.IPositionRepository"/>
            <seealso cref="T:BlueDeck.Models.Repositories.IComponentRepository"/>
            <seealso cref="T:BlueDeck.Models.Repositories.IMemberRepository"/>
            <seealso cref="T:BlueDeck.Models.Repositories.IMemberRankRepository"/>
            <seealso cref="T:BlueDeck.Models.Repositories.IMemberGenderRepository"/>
            <seealso cref="T:BlueDeck.Models.Repositories.IMemberRaceRepository"/>
            <seealso cref="T:BlueDeck.Models.Repositories.IMemberDutyStatusRepository"/>
            <seealso cref="T:BlueDeck.Models.Repositories.IMemberContactNumberRepository"/>
            <seealso cref="T:BlueDeck.Models.Repositories.IAppStatusRepository" />
            <seealso cref="T:BlueDeck.Models.Repositories.IMemberRoleTypeRepository"/>
        </member>
        <member name="P:BlueDeck.Models.IUnitOfWork.Positions">
            <summary>
            Gets an <see cref="T:BlueDeck.Models.Repositories.IPositionRepository"/>
            </summary>
            <value>
            The Interface representing the Position Entity.
            </value>
            <seealso cref="T:BlueDeck.Models.Repositories.IPositionRepository"/>
        </member>
        <member name="P:BlueDeck.Models.IUnitOfWork.Components">
            <summary>
            Gets an <see cref="T:BlueDeck.Models.Repositories.IComponentRepository"/>
            </summary>
            <value>
            The Interface representing the Component Entity.
            </value>
            <seealso cref="T:BlueDeck.Models.Repositories.IComponentRepository"/>
        </member>
        <member name="P:BlueDeck.Models.IUnitOfWork.Members">
            <summary>
            Gets an <see cref="T:BlueDeck.Models.Repositories.IMemberRepository"/>
            </summary>
            <value>
            The Interface representing the Member Entity.
            </value>
            <seealso cref="T:BlueDeck.Models.Repositories.IMemberRepository"/>
        </member>
        <member name="P:BlueDeck.Models.IUnitOfWork.MemberRanks">
            <summary>
            Gets an <see cref="T:BlueDeck.Models.Repositories.IMemberRankRepository"/>
            </summary>
            <value>
            The Interface representing the MemberRanks Entity.
            </value>
            <seealso cref="T:BlueDeck.Models.Repositories.IMemberRankRepository"/>
        </member>
        <member name="P:BlueDeck.Models.IUnitOfWork.MemberGenders">
            <summary>
            Gets an <see cref="T:BlueDeck.Models.Repositories.IMemberGenderRepository"/>
            </summary>
            <value>
            The Interface representing the MemberGender Entity.
            </value>
            <seealso cref="T:BlueDeck.Models.Repositories.IMemberGenderRepository"/>
        </member>
        <member name="P:BlueDeck.Models.IUnitOfWork.MemberRaces">
            <summary>
            Gets an <see cref="T:BlueDeck.Models.Repositories.IMemberRaceRepository"/>
            </summary>
            <value>
            The Interface representing the MemberRace Entity.
            </value>
            <seealso cref="T:BlueDeck.Models.Repositories.IMemberRaceRepository"/>
        </member>
        <member name="P:BlueDeck.Models.IUnitOfWork.MemberDutyStatus">
            <summary>
            Gets an <see cref="T:BlueDeck.Models.Repositories.IMemberDutyStatusRepository"/>
            </summary>
            <value>
            The Interface representing the MemberRace Entity.
            </value>
            <seealso cref="T:BlueDeck.Models.Repositories.IMemberDutyStatusRepository"/>
        </member>
        <member name="P:BlueDeck.Models.IUnitOfWork.MemberContactNumbers">
            <summary>
            Gets an <see cref="T:BlueDeck.Models.Repositories.IMemberContactNumberRepository" />
            </summary>
            <value>
            The Interface representing the MemberContactNumber Entity.
            </value>
            <seealso cref="T:BlueDeck.Models.Repositories.IMemberContactNumberRepository" />
        </member>
        <member name="P:BlueDeck.Models.IUnitOfWork.PhoneNumberTypes">
            <summary>
            Gets an <see cref="T:BlueDeck.Models.Repositories.IPhoneNumberTypeRepository" />
            </summary>
            <value>
            The Interface representing the PhoneNumberType Entity.
            </value>
            <seealso cref="T:BlueDeck.Models.Repositories.IPhoneNumberTypeRepository" />
        </member>
        <member name="P:BlueDeck.Models.IUnitOfWork.AppStatuses">
            <summary>
            Gets an <see cref="T:BlueDeck.Models.Repositories.IAppStatusRepository" />
            </summary>
            <value>
            The Interface representing the AppStatus Entity.
            </value>
            <seealso cref="T:BlueDeck.Models.Repositories.IAppStatusRepository" />
        </member>
        <member name="P:BlueDeck.Models.IUnitOfWork.RoleTypes">
            <summary>
            Gets an <see cref="T:BlueDeck.Models.Repositories.IMemberRoleTypeRepository" />
            </summary>
            <value>
            The Interface representing the RoleType Entity.
            </value>
            <seealso cref="T:BlueDeck.Models.Repositories.IMemberRoleTypeRepository" />
        </member>
        <member name="M:BlueDeck.Models.IUnitOfWork.Complete">
            <summary>
            Saves changes made in the Unit of Work to ensure consistent updates
            </summary>
            <returns></returns>
        </member>
        <member name="T:BlueDeck.Models.Member">
            <summary>
            Member Entity
            </summary>
        </member>
        <member name="P:BlueDeck.Models.Member.MemberId">
            <summary>
            Gets or sets the Member's Id (PK).
            </summary>
            <value>
            The Member's Id (PK).
            </value>
        </member>
        <member name="P:BlueDeck.Models.Member.Rank">
            <summary>
            Gets or sets the Member's <see cref="P:BlueDeck.Models.Member.Rank"/>.
            </summary>
            <value>
            The <see cref="P:BlueDeck.Models.Member.Rank"/> of the Member
            </value>
        </member>
        <member name="P:BlueDeck.Models.Member.FirstName">
            <summary>
            Gets or sets the Member's first name.
            </summary>
            <value>
            The first name of the Member.
            </value>
        </member>
        <member name="P:BlueDeck.Models.Member.LastName">
            <summary>
            Gets or sets the Member's last name.
            </summary>
            <value>
            The last name of the Member.
            </value>
        </member>
        <member name="P:BlueDeck.Models.Member.MiddleName">
            <summary>
            Gets or sets the Member's middle name.
            </summary>
            <value>
            The name of the middle.
            </value>
        </member>
        <member name="P:BlueDeck.Models.Member.IdNumber">
            <summary>
            Gets or sets the Member's Departmental Id Number.
            </summary>
            <value>
            The Departmental Id Number of the Member.
            </value>
        </member>
        <member name="P:BlueDeck.Models.Member.Gender">
            <summary>
            Gets or sets the Member's gender.
            </summary>
            <value>
            The Member's gender.
            </value>
            <seealso cref="T:BlueDeck.Models.Types.MemberGender"/>
        </member>
        <member name="P:BlueDeck.Models.Member.Race">
            <summary>
            Gets or sets the Member's race.
            </summary>
            <value>
            The Member's race.
            </value>
            <seealso cref="T:BlueDeck.Models.Types.MemberRace"/>
        </member>
        <member name="P:BlueDeck.Models.Member.DutyStatus">
            <summary>
            Gets or sets the Member's duty status.
            </summary>
            <value>
            The Member's race.
            </value>
            <seealso cref="T:BlueDeck.Models.Types.MemberDutyStatus"/>
        </member>
        <member name="P:BlueDeck.Models.Member.Email">
            <summary>
            Gets or sets the Member's email.
            </summary>
            <value>
            The Member's email.
            </value>
        </member>
        <member name="P:BlueDeck.Models.Member.PositionId">
            <summary>
            Gets or sets the position identifier.
            </summary>
            <value>
            The position identifier.
            </value>
        </member>
        <member name="P:BlueDeck.Models.Member.Position">
            <summary>
            Gets or sets the <see cref="P:BlueDeck.Models.Member.Position"/> to which the Member is assigned.
            </summary>
            <value>
            The position.
            </value>
        </member>
        <member name="P:BlueDeck.Models.Member.TempPositionId">
            <summary>
            Gets or sets the temporary <see cref="P:BlueDeck.Models.Member.Position"/> position identifier.
            </summary>
            <remarks>
            A member can be assigned a Temporary (TDY) position, which allows them to be included in the roster
            (but not demographic or staffing) calculations of a second position while preserving their primary position.
            </remarks>
            <value>
            The temporary position identifier.
            </value>
        </member>
        <member name="P:BlueDeck.Models.Member.TempPosition">
            <summary>
            Gets or sets the temporary duty position.
            </summary>
            <value>
            The temporary duty position.
            </value>
        </member>
        <member name="M:BlueDeck.Models.Member.GetTitleName">
            <summary>
            Gets the formal title form of the Member's name and rank.
            </summary>
            <remarks>
            e.g. "POFC Foo Bar #1234"
            </remarks>
            <returns>A <see cref="T:System.String"/> with the formal display name for the Member</returns>
        </member>
        <member name="M:BlueDeck.Models.Member.GetLastNameFirstName">
            <summary>
            Gets the Member's name in "LastName, FirstName" format.
            </summary>
            <returns>A <see cref="T:System.String"/> with the Member's "LastName, FirstName"</returns>
        </member>
        <member name="T:BlueDeck.Models.Position">
            <summary>
            Position Entity
            </summary>
        </member>
        <member name="P:BlueDeck.Models.Position.PositionId">
            <summary>
            Gets or sets the position identifier.
            </summary>
            <value>
            The PositionId PK.
            </value>
        </member>
        <member name="P:BlueDeck.Models.Position.ParentComponent">
            <summary>
            Gets or sets the ParentComponentId.
            </summary>
            <value>
            The ComponentId (PK) of the Parent Component (FK)
            </value>
        </member>
        <member name="P:BlueDeck.Models.Position.Name">
            <summary>
            Gets or sets the Position name.
            </summary>
            <value>
            The name of the Position.
            </value>
        </member>
        <member name="P:BlueDeck.Models.Position.IsUnique">
            <summary>
            Gets or sets a value indicating whether the Position is unique.
            </summary>
            <value>
              <c>true</c> if this instance is unique and can be assigned only one Member; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:BlueDeck.Models.Position.JobTitle">
            <summary>
            Gets or sets the Job Title.
            </summary>
            <value>
            The Job Title of a Member assigned to this Position
            </value>
        </member>
        <member name="P:BlueDeck.Models.Position.IsManager">
            <summary>
            Gets or sets a value indicating whether this Position is the manager.
            A Component must have exactly one position designated as manager.
            </summary>
            <value>
              <c>true</c> if this instance is the manager of it's Parent Component.; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:BlueDeck.Models.Position.IsAssistantManager">
            <summary>
            Gets or sets a value indicating whether this Position is an assistant manager.
            A Component can have exactly one position designated as an assistant manager.
            </summary>
            <value>
              <c>true</c> if this instance is an assistant manager of it's Parent Component.; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:BlueDeck.Models.Position.LineupPosition">
            <summary>
            Gets or sets the lineup position.
            </summary>
            <remarks>
            This indicates the current Position's display order among it's Parent Component's Positions
            </remarks>
            <value>
            The lineup position.
            </value>
        </member>
        <member name="P:BlueDeck.Models.Position.Members">
            <summary>
            Gets or sets the Members.
            </summary>
            <value>
            A collection of Member Entities that represent the members assigned to this Position
            </value>
        </member>
        <member name="P:BlueDeck.Models.Position.TempMembers">
            <summary>
            Gets or sets the temporary members.
            </summary>
            <value>
            A collection of Member Entities that represents members assigned to this Position temporarily
            </value>
        </member>
        <member name="M:BlueDeck.Models.Position.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BlueDeck.Models.Position"/> class.
            <remarks>
            Parameter-less constructor used to ensure that the <see cref="T:BlueDeck.Models.Position.Members"/> <see cref="T:List{T}"/> is initialized.
            </remarks>
            </summary>
        </member>
        <member name="T:BlueDeck.Models.Race">
            <summary>
            A Class that represents racial demographic group.  Contains properties and methods used in displaying the race of a <see cref="T:BlueDeck.Models.Member"/>
            </summary>
        </member>
        <member name="P:BlueDeck.Models.Race.MemberRaceId">
            <summary>
            Gets or sets the member race identifier.
            </summary>
            <value>
            The member race identifier.
            </value>
        </member>
        <member name="P:BlueDeck.Models.Race.MemberRaceFullName">
            <summary>
            Gets or sets the full name of the member race.
            </summary>
            <value>
            The full name of the member race.
            </value>
        </member>
        <member name="P:BlueDeck.Models.Race.Abbreviation">
            <summary>
            Gets or sets the race's abbreviation.
            </summary>
            <value>
            The race's abbreviation.
            </value>
        </member>
        <member name="T:BlueDeck.Models.Rank">
            <summary>
            A Class that represents a Organizational Rank.  Contains properties and methods used in displaying the rank of a <see cref="T:BlueDeck.Models.Member"/>
            </summary>
        </member>
        <member name="P:BlueDeck.Models.Rank.RankId">
            <summary>
            Gets or sets the rank Id.
            </summary>
            <value>
            The rank Id.
            </value>
        </member>
        <member name="P:BlueDeck.Models.Rank.RankFullName">
            <summary>
            Gets or sets the full name of the rank.
            </summary>
            <remarks>
            e.g. "Police Officer First Class" 
            </remarks>
            <value>
            The full name of the rank.
            </value>
        </member>
        <member name="P:BlueDeck.Models.Rank.RankShort">
            <summary>
            Gets or sets the rank abbreviation.
            </summary>
            <remarks>
            e.g. "POFC"
            </remarks>
            <value>
            The rank abbreviation.
            </value>
        </member>
        <member name="P:BlueDeck.Models.Rank.PayGrade">
            <summary>
            Gets or sets the pay grade for a rank.
            </summary>
            <remarks>
            e.g. "L02"
            </remarks>
            <value>
            The pay grade for the rank.
            </value>
        </member>
        <member name="T:BlueDeck.Models.Repositories.IComponentRepository">
            <summary>
            An implementation of <see cref="T:BlueDeck.Models.Repositories.IRepository{T}"/>
            </summary>
            <seealso cref="T:BlueDeck.Models.Repositories.IRepository{BlueDeck.Models.Component}" />
        </member>
        <member name="M:BlueDeck.Models.Repositories.IComponentRepository.GetOrgChartComponentsWithoutMembers">
            <summary>
            Gets the list of <see cref="T:BlueDeck.Models.ChartableComponent"/>s.
            </summary>
            <remarks>
            This method is used to seed the GetOrgChart JQuery chart with a list of Components without Member details .
            </remarks>
            <returns>A <see cref="T:IEnumerable{T}"/> list of <see cref="T:BlueDeck.Models.ChartableComponent"/> objects</returns>
        </member>
        <member name="M:BlueDeck.Models.Repositories.IComponentRepository.GetOrgChartComponentsWithMembers(System.Int32)">
            <summary>
            Gets the list of <see cref="T:BlueDeck.Models.ChartableComponentWithMember"/>s.
            </summary>
            <remarks>
            This method is used to seed the GetOrgChart JQuery chart with a list of Components with Member details.
            </remarks>
            <returns>A <see cref="T:IEnumerable{T}"/> list of <see cref="T:BlueDeck.Models.ChartableComponentWithMember"/> objects</returns>
        </member>
        <member name="M:BlueDeck.Models.Repositories.IComponentRepository.GetComponentSelectListItems">
            <summary>
            Gets the list of <see cref="T:BlueDeck.Models.Types.ComponentSelectListItem"/>s to populate a Component select list
            </summary>
            <returns>A <see cref="T:List{BlueDeck.Models.Types.ComponentSelectListItem}"/></returns>
        </member>
        <member name="M:BlueDeck.Models.Repositories.IComponentRepository.GetComponentWithChildren(System.Int32)">
            <summary>
            Gets the component with all of it's member children.
            </summary>
            <param name="id">The Component identifier.</param>
            <returns>A <see cref="T:BlueDeck.Models.Component"/></returns>
        </member>
        <member name="M:BlueDeck.Models.Repositories.IComponentRepository.GetComponentWithParentComponent(System.Int32)">
            <summary>
            Gets the component with it's Parent Component loaded
            </summary>
            <param name="id">The ComponentId of the desired Component Entity.</param>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Models.Repositories.IComponentRepository.GetComponentWithPositions(System.Int32)">
            <summary>
            Gets the Component with it's Positions.
            </summary>
            <param name="id">The ComponentId of the requested Component.</param>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Models.Repositories.IComponentRepository.GetComponentsWithChildren">
            <summary>
            Gets the list components with all member children.
            </summary>
            <returns>A <see cref="T:System.Collections.IEnumerable{BlueDeck.Models.Component}"/></returns>
        </member>
        <member name="M:BlueDeck.Models.Repositories.IComponentRepository.GetChildComponentCountForComponent(System.Int32)">
            <summary>
            Gets the number of child Components of a given ComponentId.
            </summary>
            <remarks>
            This method can be used to determine if a Component has children. It is mainly used to prevent deletion of 
            Components with active children assigned to it.
            </remarks>
            <param name="componentId">The component identifier.</param>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Models.Repositories.IComponentRepository.ComponentNameNotAvailable(BlueDeck.Models.Component)">
            <summary>
            Determines if a Component Name is available.
            </summary>
            <remarks>
            This method will determine if a Component Name is available.
            It requires a <see cref="T:BlueDeck.Models.Component"/> parameter because the method needs to validate
            that a Component name isn't colliding with itself.
            </remarks>
            <param name="c">The Component to to check.</param>
            <returns></returns>
        </member>
        <member name="T:BlueDeck.Models.Repositories.IMemberDutyStatusRepository">
            <summary>
            An implementation of <see cref="T:BlueDeck.Models.Repositories.IRepository{T}"/>
            </summary>
            <seealso cref="T:BlueDeck.Models.Repositories.IRepository{BlueDeck.Models.Types.MemberDutyStatus}" />
        </member>
        <member name="M:BlueDeck.Models.Repositories.IMemberDutyStatusRepository.GetMemberDutyStatusSelectListItems">
            <summary>
            Gets a list of <see cref="T:BlueDeck.Types.MemberDutyStatusSelectListItem"/>s.
            </summary>
            <remarks>
            This method is used to populate Duty Status select lists.
            </remarks>
            <returns>A <see cref="T:List{BlueDeck.Models.Types.MemberDutyStatusSelectListItem}"/></returns>
        </member>
        <member name="M:BlueDeck.Models.Repositories.IMemberDutyStatusRepository.GetStatusById(System.Int32)">
            <summary>
            Gets the Duty Status with the given identifier.
            </summary>
            <param name="memberDutyStatus">The DutyStatusId of the desired Duty Status.</param>
            <returns>A <see cref="T:BlueDeck.Models.DutyStatus"/></returns>
        </member>
        <member name="M:BlueDeck.Models.Repositories.IMemberDutyStatusRepository.GetDutyStatusesWithMemberCount">
            <summary>
            Gets the a list of all current duty statuses with member count.
            </summary>
            <returns>A <see cref="T:System.Collections.Generic.List`1"/> of all current Duty Status types</returns>
        </member>
        <member name="M:BlueDeck.Models.Repositories.IMemberDutyStatusRepository.GetDutyStatusWithMemberCount(System.Int32)">
            <summary>
            Gets a duty status with member count.
            </summary>
            <param name="id">The DutyStatusId of the desired Duty Status.</param>
            <returns>A <see cref="T:BlueDeck.Models.DutyStatus"/></returns>
        </member>
        <member name="T:BlueDeck.Models.Repositories.IMemberGenderRepository">
            <summary>
            An implementation of <see cref="T:BlueDeck.Models.Repositories.IRepository{T}"/>
            </summary>
            <seealso cref="T:BlueDeck.Models.Repositories.IRepository{BlueDeck.Models.Types.MemberGender}" />
        </member>
        <member name="M:BlueDeck.Models.Repositories.IMemberGenderRepository.GetMemberGenderSelectListItems">
            <summary>
            Gets a list of <see cref="T:BlueDeck.Types.MemberGenderSelectListItem"/>s.
            </summary>
            <remarks>
            This method is used to populate Gender select lists.
            </remarks>
            <returns>A <see cref="T:List{BlueDeck.Models.Types.MemberGenderSelectListItem}"/></returns>
        </member>
        <member name="M:BlueDeck.Models.Repositories.IMemberGenderRepository.GetGendersWithMembers">
            <summary>
            Gets a list of all <see cref="T:BlueDeck.Models.Gender"/> with members.
            </summary>
            <returns>A <see cref="T:System.Collections.Generic.List`1"/> containing all current <see cref="T:BlueDeck.Models.Gender"/></returns>
        </member>
        <member name="M:BlueDeck.Models.Repositories.IMemberGenderRepository.GetGenderWithMembers(System.Int32)">
            <summary>
            Gets a <see cref="T:BlueDeck.Models.Gender"/> with it's current <see cref="T:BlueDeck.Models.Member"/>s.
            </summary>
            <param name="id">The identifier of the <see cref="T:BlueDeck.Models.Gender"/>.</param>
            <returns>A <see cref="T:BlueDeck.Models.Gender"/></returns>
        </member>
        <member name="M:BlueDeck.Models.Repositories.IMemberGenderRepository.GetGenderById(System.Int32)">
            <summary>
            Gets the gender by identifier.
            </summary>
            <param name="memberGenderId">The <see cref="T:BlueDeck.Models.Gender"/> identifier.</param>
            <returns>A <see cref="T:BlueDeck.Models.Gender"/></returns>
        </member>
        <member name="T:BlueDeck.Models.Repositories.IMemberRaceRepository">
            <summary>
            An implementation of <see cref="T:BlueDeck.Models.Repositories.IRepository`1"/> that handles database actions for the <see cref="T:BlueDeck.Models.Race"/> entity.
            </summary>
            <seealso cref="T:BlueDeck.Models.Repositories.IRepository`1" />
        </member>
        <member name="M:BlueDeck.Models.Repositories.IMemberRaceRepository.GetMemberRaceSelectListItems">
            <summary>
            Gets a list of <see cref="T:BlueDeck.Models.Types.MemberRaceSelectListItem"/>s.
            </summary>
            <remarks>
            This method is used to populate Rank select lists.
            </remarks>
            <returns>A <see cref="T:System.Collections.Generic.List`1"/></returns>
        </member>
        <member name="M:BlueDeck.Models.Repositories.IMemberRaceRepository.GetRaceById(System.Int32)">
            <summary>
            Gets the race by identifier.
            </summary>
            <param name="memberRaceId">The member race identifier.</param>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Models.Repositories.IMemberRaceRepository.GetRacesWithMembers">
            <summary>
            Gets a lsit of all Races including their members.
            </summary>
            <returns>A <see cref="T:System.Collections.Generic.List`1"/> of all races including their members.</returns>
        </member>
        <member name="M:BlueDeck.Models.Repositories.IMemberRaceRepository.GetRaceWithMembers(System.Int32)">
            <summary>
            Gets a race with it's members.
            </summary>
            <param name="id">The identifier of the <see cref="T:BlueDeck.Models.Race"/>.</param>
            <returns></returns>
        </member>
        <member name="T:BlueDeck.Models.Repositories.IMemberRankRepository">
            <summary>
            An implementation of <see cref="T:BlueDeck.Models.Repositories.IRepository`1"/> 
            </summary>
            <seealso cref="T:BlueDeck.Models.Repositories.IRepository`1" />
        </member>
        <member name="M:BlueDeck.Models.Repositories.IMemberRankRepository.GetMemberRankSelectListItems">
            <summary>
            Gets a list of <see cref="T:BlueDeck.Models.Types.MemberRankSelectListItem"/>s.
            </summary>
            <remarks>
            This method is used to populate Rank select lists.
            </remarks>
            <returns>A <see cref="T:BlueDeck.Models.Types.MemberRankSelectListItem"/></returns>
        </member>
        <member name="M:BlueDeck.Models.Repositories.IMemberRankRepository.GetRankById(System.Int32)">
            <summary>
            Gets the rank by identifier.
            </summary>
            <param name="memberRankId">The member rank identifier.</param>
            <returns>A <see cref="T:BlueDeck.Models.Rank"/> object.</returns>
        </member>
        <member name="M:BlueDeck.Models.Repositories.IMemberRankRepository.GetRanksWithMembers">
            <summary>
            Gets the all ranks with their members.
            </summary>
            <returns>A <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:BlueDeck.Models.Rank"/> with all of their <see cref="T:BlueDeck.Models.Member"/>s.</returns>
        </member>
        <member name="M:BlueDeck.Models.Repositories.IMemberRankRepository.GetRankWithMembers(System.Int32)">
            <summary>
            Gets a specific rank with its members.
            </summary>
            <param name="id">The identifier of the <see cref="T:BlueDeck.Models.Rank"/>.</param>
            <returns>A <see cref="T:BlueDeck.Models.Rank"/> with it's <see cref="T:BlueDeck.Models.Member"/>s.</returns>
        </member>
        <member name="T:BlueDeck.Models.Repositories.IMemberRepository">
            <summary>
            An implementation of <see cref="T:BlueDeck.Models.Repositories.IRepository{T}"/>
            </summary>
            <seealso cref="T:BlueDeck.Models.Repositories.IRepository{BlueDeck.Models.Member}" />
        </member>
        <member name="M:BlueDeck.Models.Repositories.IMemberRepository.Remove(System.Int32)">
            <summary>
            Removes the specified member identifier.
            </summary>
            <remarks>
            This is an override of the IRepository's Remove method. This override removes all MemberContact entries 
            when removing a Member.
            </remarks>
            <param name="memberId">The member identifier.</param>
        </member>
        <member name="T:BlueDeck.Models.Repositories.IPhoneNumberTypeRepository">
            <summary>
            Repository that handles database interactions for the <see cref="T:BlueDeck.Models.PhoneNumberType"/> entity.
            </summary>
            <seealso cref="T:BlueDeck.Models.Repositories.IRepository`1" />
        </member>
        <member name="M:BlueDeck.Models.Repositories.IPhoneNumberTypeRepository.GetPhoneNumberTypeSelectListItems">
            <summary>
            Gets a list of <see cref="T:BlueDeck.Models.Types.PhoneNumberTypeSelectListItem"/> items for all phone number types in the database.
            </summary>
            <remarks>
            This method is used to populate select lists for Phone Number Types
            </remarks>
            <returns>A <see cref="T:System.Collections.Generic.List`1"/></returns>
        </member>
        <member name="M:BlueDeck.Models.Repositories.IPhoneNumberTypeRepository.GetPhoneNumberTypesWithPhoneNumbers">
            <summary>
            Gets a list of all <see cref="T:BlueDeck.Models.PhoneNumberType"/> entities including all associated <see cref="T:BlueDeck.Models.ContactNumber"/>
            </summary>
            <returns>A <see cref="T:System.Collections.Generic.List`1"/></returns>
        </member>
        <member name="M:BlueDeck.Models.Repositories.IPhoneNumberTypeRepository.GetPhoneNumberTypeWithPhoneNumbers(System.Int32)">
            <summary>
            Gets a specific <see cref="T:BlueDeck.Models.PhoneNumberType"/> entity including all associated <see cref="T:BlueDeck.Models.ContactNumber"/>
            </summary>
            <param name="id">The identity of the <see cref="T:BlueDeck.Models.PhoneNumberType"/></param>
            <returns>A <see cref="T:BlueDeck.Models.PhoneNumberType"/> object.</returns>
        </member>
        <member name="T:BlueDeck.Models.Repositories.IPositionRepository">
            <summary>
            An implementation of <see cref="T:BlueDeck.Models.Repositories.IRepository{T}"/>
            </summary>
            <seealso cref="T:BlueDeck.Models.Repositories.IRepository{BlueDeck.Models.Position}" />
        </member>
        <member name="M:BlueDeck.Models.Repositories.IPositionRepository.GetPositionsWithMembers">
            <summary>
            Gets the Positions with their Members.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Models.Repositories.IPositionRepository.RemovePositionAndReassignMembers(System.Int32,System.String)">
            <summary>
            Removes the position and reassign members.
            </summary>
            <param name="id">The identifier.</param>
            <param name="newPositionName">New name of the position.</param>
        </member>
        <member name="T:BlueDeck.Models.Repositories.IRepository`1">
            <summary>
            An interface that encapsulates data store interactions common to all Domain Entity Interactions. 
            </summary>
            <remarks>
            This interface should not be implemented directly, but rather a Entity-specific interface that implements this interface should be created,
            and specific implementations of Repositories should be derived from Entity-specific interface 
            </remarks>
            <seealso cref="T:BlueDeck.Models.Repositories.IPositionRepository"/>
            <seealso cref="T:BlueDeck.Models.Repositories.IComponentRepository"/>
            <seealso cref="T:BlueDeck.Models.Repositories.IMemberRepository"/>
            <seealso cref="T:BlueDeck.Models.Repositories.IMemberRankRepository"/>
            <typeparam name="TEntity">The type of the entity.</typeparam>
        </member>
        <member name="M:BlueDeck.Models.Repositories.IRepository`1.Get(System.Int32)">
            <summary>
            Gets the Entity with the given identifier.
            </summary>
            <param name="id">The identifier for the desired entity.</param>
            <returns>A <see cref="T:TEntity"/></returns>
        </member>
        <member name="M:BlueDeck.Models.Repositories.IRepository`1.GetAll">
            <summary>
            Gets Entities in the Repository
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerable{T}"/> of the Entity.</returns>
        </member>
        <member name="M:BlueDeck.Models.Repositories.IRepository`1.Find(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Finds the Entities that match the specified predicate.
            </summary>
            <remarks>
            This Method can accept LINQ Lambda Expression delegates
            </remarks>
            <param name="predicate">The predicate LINQ Lambda Expression delegate.</param>
            <returns>An <see cref="T:System.Collections.IEnumerable{T}"/> of the Entity.</returns>
        </member>
        <member name="M:BlueDeck.Models.Repositories.IRepository`1.SingleOrDefault(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Finds a Single Entity based on the predicate.
            </summary>
            <remarks>
            This Method can accept LINQ Lambda Expression delegates
            </remarks>
            <param name="predicate">The predicate LINQ Lambda Expression delegate.</param>
            <returns>A <see cref="T:TEntity"/></returns>
        </member>
        <member name="M:BlueDeck.Models.Repositories.IRepository`1.Add(`0)">
            <summary>
            Adds the specified entity.
            </summary>
            <param name="entity">The Entity to add.</param>
        </member>
        <member name="M:BlueDeck.Models.Repositories.IRepository`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Adds a range of Entities.
            </summary>
            <param name="entities">An <see cref="T:IEnumerable{T}"/> of entities to add.</param>
        </member>
        <member name="M:BlueDeck.Models.Repositories.IRepository`1.Remove(`0)">
            <summary>
            Removes the specified entity.
            </summary>
            <param name="entity">The <see cref="T:TEntity:"/> to add.</param>
        </member>
        <member name="M:BlueDeck.Models.Repositories.IRepository`1.RemoveRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Removes a range of <see cref="T:TEntity"/>.
            </summary>
            <param name="entities">An <see cref="T:IEnumerable{T}"/> of entities to remove.</param>
        </member>
        <member name="T:BlueDeck.Models.Types.ComponentSelectListItem">
            <summary>
            A type that represents the Name and Id of any entity. This is used to create select lists in views.
            <remarks>
            This was initially created for a <see cref="T:BlueDeck.Models.Component"/>, but can be used for any Name/Id combination.
            </remarks>
            </summary>
        </member>
        <member name="P:BlueDeck.Models.Types.ComponentSelectListItem.ComponentName">
            <summary>
            Gets or sets the display name of the component.
            </summary>
            <value>
            The name of the component.
            </value>
        </member>
        <member name="P:BlueDeck.Models.Types.ComponentSelectListItem.Id">
            <summary>
            Gets or sets the Id of the component.
            </summary>
            <value>
            The identifier.
            </value>
        </member>
        <member name="M:BlueDeck.Models.Types.ComponentSelectListItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BlueDeck.Models.Types.ComponentSelectListItem"/> class.
            </summary>
        </member>
        <member name="M:BlueDeck.Models.Types.ComponentSelectListItem.#ctor(BlueDeck.Models.Component)">
            <summary>
            Initializes a new instance of the <see cref="T:BlueDeck.Models.Types.ComponentSelectListItem"/> class.
            </summary>
            <param name="_c">The Component.</param>
        </member>
        <member name="T:BlueDeck.Models.Types.MappedField">
            <summary>
            Class used to map Table/Cell index and value
            </summary>
        </member>
        <member name="P:BlueDeck.Models.Types.MappedField.TableIndex">
            <summary>
            Gets or sets the index of the table.
            </summary>
            <remarks>
            This is the index of the table in the Template document
            </remarks>
            <value>
            The index of the table.
            </value>
        </member>
        <member name="P:BlueDeck.Models.Types.MappedField.Table">
            <summary>
            Gets or sets the table.
            </summary>
            <remarks>
            This property may replace the TableIndex completely, as the Table's index in the Document is 
            dependant on the part of the document that it is in, which means tables in the header/footer
            will be indexed according to the Header/Footer's tables collection, which is independent of the MainDocumentPart's
            table indexes.
            </remarks>
            <value>
            The table.
            </value>
        </member>
        <member name="P:BlueDeck.Models.Types.MappedField.RowIndex">
            <summary>
            Gets or sets the index of the row.
            </summary>
            <value>
            The index of the row.
            </value>
        </member>
        <member name="P:BlueDeck.Models.Types.MappedField.CellIndex">
            <summary>
            Gets or sets the index of the cell.
            </summary>
            <value>
            The index of the cell.
            </value>
        </member>
        <member name="P:BlueDeck.Models.Types.MappedField.FieldName">
            <summary>
            Gets or sets the name of the field.
            </summary>
            <value>
            The name of the field.
            </value>
        </member>
        <member name="M:BlueDeck.Models.Types.MappedField.Write(System.String)">
            <summary>
            Writes the data in the mapped field to the document.
            </summary>
            <param name="table">
            The target <see cref="T:DocumentFormat.OpenXml.Wordprocessing.Table"/>. 
            This parameter is required because the Table index depends on whether the MappedField is in a Header/Footer or in the document's mainpart, which means that the TableIndex is not
            sufficient to target the proper table. 
            </param>
            <param name="newText">The new text.</param>
        </member>
        <member name="T:BlueDeck.Models.Types.MemberDutyStatusSelectListItem">
            <summary>
            A Type that includes the DutyStatusId and DutyStatusName for the <see cref="T:BlueDeck.Models.Types.MemberDutyStatus"/> Entity.
            /// <remarks>
            This type is used to populate a MemberDutyStatus select list.
            </remarks>
            </summary>
        </member>
        <member name="P:BlueDeck.Models.Types.MemberDutyStatusSelectListItem.MemberDutyStatusId">
            <summary>
            Gets or sets the member duty status identifier.
            </summary>
            <value>
            The member duty status identifier.
            </value>
        </member>
        <member name="P:BlueDeck.Models.Types.MemberDutyStatusSelectListItem.MemberDutyStatusName">
            <summary>
            Gets or sets the name of the member duty status.
            </summary>
            <value>
            The name of the member duty status.
            </value>
        </member>
        <member name="T:BlueDeck.Models.Types.MemberGenderSelectListItem">
            <summary>
            A Type that includes the MemberRaceId and RaceFullName for the <see cref="T:BlueDeck.Models.Types.MemberGender"/> Entity.
            /// <remarks>
            This type is used to populate a MemberGender select list.
            </remarks>
            </summary>
        </member>
        <member name="P:BlueDeck.Models.Types.MemberGenderSelectListItem.MemberGenderId">
            <summary>
            Gets or sets the member gender identifier.
            </summary>
            <value>
            The member gender identifier.
            </value>
        </member>
        <member name="P:BlueDeck.Models.Types.MemberGenderSelectListItem.MemberGenderFullName">
            <summary>
            Gets or sets the full name of the member gender.
            </summary>
            <value>
            The full name of the member gender.
            </value>
        </member>
        <member name="P:BlueDeck.Models.Types.MemberGenderSelectListItem.Abbreviation">
            <summary>
            Gets or sets the abbreviation.
            </summary>
            <value>
            The abbreviation.
            </value>
        </member>
        <member name="M:BlueDeck.Models.Types.MemberGenderSelectListItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BlueDeck.Models.Types.MemberGenderSelectListItem"/> class.
            </summary>
        </member>
        <member name="M:BlueDeck.Models.Types.MemberGenderSelectListItem.#ctor(BlueDeck.Models.Gender)">
            <summary>
            Initializes a new instance of the <see cref="T:BlueDeck.Models.Types.MemberGenderSelectListItem"/> class.
            </summary>
            <param name="_g">The g.</param>
        </member>
        <member name="T:BlueDeck.Models.Types.MemberRaceSelectListItem">
            <summary>
            A Type that includes the MemberRaceId and RaceFullName for the <see cref="T:BlueDeck.Models.Types.MemberRace"/> Entity.
            /// <remarks>
            This type is used to populate a MemberRace select list.
            </remarks>
            </summary>
        </member>
        <member name="P:BlueDeck.Models.Types.MemberRaceSelectListItem.MemberRaceId">
            <summary>
            Gets or sets the member race identifier.
            </summary>
            <value>
            The member race identifier.
            </value>
        </member>
        <member name="P:BlueDeck.Models.Types.MemberRaceSelectListItem.RaceFullName">
            <summary>
            Gets or sets the name of the race.
            </summary>
            <value>
            The name of the race.
            </value>
        </member>
        <member name="P:BlueDeck.Models.Types.MemberRaceSelectListItem.Abbreviation">
            <summary>
            Gets or sets the abbreviation.
            </summary>
            <value>
            The abbreviation.
            </value>
        </member>
        <member name="M:BlueDeck.Models.Types.MemberRaceSelectListItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BlueDeck.Models.Types.MemberRaceSelectListItem"/> class.
            </summary>
        </member>
        <member name="T:BlueDeck.Models.Types.MemberRankSelectListItem">
            <summary>
            A Type that includes the MemberRankId and RankFullName for the <see cref="T:BlueDeck.Models.Types.MemberRank"/> Entity.
            <remarks>
            This type is used to populate a MemberRank select list.
            </remarks>
            </summary>
        </member>
        <member name="P:BlueDeck.Models.Types.MemberRankSelectListItem.MemberRankId">
            <summary>
            Gets or sets the member rank identifier.
            </summary>
            <value>
            The member rank identifier.
            </value>
        </member>
        <member name="P:BlueDeck.Models.Types.MemberRankSelectListItem.RankName">
            <summary>
            Gets or sets the name of the rank.
            </summary>
            <value>
            The name of the rank.
            </value>
        </member>
        <member name="T:BlueDeck.Models.Types.MemberSelectListItem">
            <summary>
            A Type that includes the MemberDisplayName and MemberId for the <see cref="T:BlueDeck.Models.Member"/> Entity.
            <remarks>
            This type is used to populate a Position select list.
            </remarks>
            </summary>
        </member>
        <member name="P:BlueDeck.Models.Types.MemberSelectListItem.MemberName">
            <summary>
            Gets or sets the Member Name
            </summary>
        </member>
        <member name="P:BlueDeck.Models.Types.MemberSelectListItem.MemberId">
            <summary>
            Gets or sets the Member Id
            </summary>
        </member>
        <member name="P:BlueDeck.Models.Types.PositionIndexViewModelPositionListItem.PositionId">
            <summary>
            Gets or sets the position identifier.
            </summary>
            <value>
            The PositionId PK.
            </value>
        </member>
        <member name="P:BlueDeck.Models.Types.PositionIndexViewModelPositionListItem.ParentComponentId">
            <summary>
            Gets or sets the id of the parent component.
            </summary>
            <value>
            The Id of the Component to which this Position Instance is assigned
            </value>        
        </member>
        <member name="P:BlueDeck.Models.Types.PositionIndexViewModelPositionListItem.ParentComponentName">
            <summary>
            Gets or sets the name of the parent component.
            </summary>
            <value>
            The name of the parent component.
            </value>
        </member>
        <member name="P:BlueDeck.Models.Types.PositionIndexViewModelPositionListItem.PositionName">
            <summary>
            Gets or sets the Position name.
            </summary>
            <value>
            The name of the Position.
            </value>
        </member>
        <member name="P:BlueDeck.Models.Types.PositionIndexViewModelPositionListItem.IsUnique">
            <summary>
            Gets or sets a value indicating whether the Position is unique.
            </summary>
            <value>
              <c>true</c> if this instance is unique and can be assigned only one Member; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:BlueDeck.Models.Types.PositionIndexViewModelPositionListItem.JobTitle">
            <summary>
            Gets or sets the Job Title.
            </summary>
            <value>
            The Job Title of a Member assigned to this Position
            </value>
        </member>
        <member name="P:BlueDeck.Models.Types.PositionIndexViewModelPositionListItem.MembersCount">
            <summary>
            Gets or sets the count of Position Members
            </summary>
            <value>
            A count of Member Entities that are assigned to this Position
            </value>
        </member>
        <member name="P:BlueDeck.Models.Types.PositionIndexViewModelPositionListItem.IsManager">
            <summary>
            Gets or sets a value indicating whether this Position is the manager.
            A Component must have exactly one position designated as manager.
            </summary>
            <value>
              <c>true</c> if this instance is the manager of it's Parent Component.; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:BlueDeck.Models.Types.PositionIndexViewModelPositionListItem.#ctor(BlueDeck.Models.Position)">
            <summary>
            Initializes a new instance of the <see cref="T:BlueDeck.Models.Types.PositionIndexViewModelPositionListItem"/> class.
            </summary>
            <remarks>
            This constructor requires a <see cref="T:BlueDeck.Models.Position"/> to be passed as a parameter.
            </remarks>
            <param name="p">A <see cref="T:BlueDeck.Models.Position"/> object.</param>
        </member>
        <member name="M:BlueDeck.Models.Types.PositionIndexViewModelPositionListItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BlueDeck.Models.Types.PositionIndexViewModelPositionListItem"/>.
            <remarks>
            This is a parameterless constructor used to create new objects
            </remarks>
            </summary>
        </member>
        <member name="T:BlueDeck.Models.Types.PositionSelectListItem">
            <summary>
            A Type that includes the PositionName and PositionId for the <see cref="T:BlueDeck.Models.Position"/> Entity.
            <remarks>
            This type is used to populate a Position select list.
            </remarks>
            </summary>
        </member>
        <member name="P:BlueDeck.Models.Types.PositionSelectListItem.PositionName">
            <summary>
            Gets or sets the Rank Name
            </summary>
        </member>
        <member name="P:BlueDeck.Models.Types.PositionSelectListItem.PositionId">
            <summary>
            Gets or sets the Rank Id
            </summary>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.AddPositionToComponentViewComponentViewModel.PositionId">
            <summary>
            Gets or sets the Id of the Position.
            </summary>
            <value>
            The Position's Id.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.AddPositionToComponentViewComponentViewModel.PositionName">
            <summary>
            Gets or sets the name of the position.
            </summary>
            <value>
            The name of the position.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.AddPositionToComponentViewComponentViewModel.ParentComponentId">
            <summary>
            Gets or sets the Id of the Position's parent <see cref="T:BlueDeck.Models.Component"/>
            </summary>
            <value>
            The parent's ComponentId.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.AddPositionToComponentViewComponentViewModel.JobTitle">
            <summary>
            Gets or sets the job title.
            </summary>
            <value>
            The job title.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.AddPositionToComponentViewComponentViewModel.IsManager">
            <summary>
            Gets or sets a value indicating whether this Position is designated as the manager of it's parent <see cref="T:BlueDeck.Models.Component"/>.
            </summary>
            <value>
              <c>true</c> if this instance is manager; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.AddPositionToComponentViewComponentViewModel.IsAssistantManager">
            <summary>
            Gets or sets a value indicating whether this position is an assistant manager for it's component <see cref="T:BlueDeck.Models.Component"/>.
            </summary>
            <value>
              <c>true</c> if this instance is assistant manager; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.AddPositionToComponentViewComponentViewModel.IsUnique">
            <summary>
            Gets or sets a value indicating whether this instance is unique, or if it can be assigned multiple <see cref="T:BlueDeck.Models.Member"/>s.
            </summary>
            <value>
              <c>true</c> if this instance is unique; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.AssignMemberModalViewComponentViewModel.MemberId">
            <summary>
            Gets or sets the member identifier.
            </summary>
            <remarks>
            This is used to store the selection from the ViewComponent's Select list
            and POST to the handler. It will be null until a selection is made.
            </remarks>
            <value>
            The member identifier.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.AssignMemberModalViewComponentViewModel.PositionId">
            <summary>
            Gets or sets the position identifier.
            </summary>
            <remarks>
            This is the PositionId of the Position wherein the user clicked the "assign a member" on the RosterManager
            It will be populated via the viewmodel's constructor when the RosterController invokes the ViewComponent
            </remarks>
            <value>
            The position identifier.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.AssignMemberModalViewComponentViewModel.SelectedComponentId">
            <summary>
            Gets or sets the selected component identifier.
            </summary>
            <remarks>
            This will be set in the Ajax POST for the AssignMember modal. It is used to store the current value of the 
            Component selection box on Roster/Index. We need this in case the Member assignment requires a full refresh 
            of the RosterManager ViewComponent as determined in RosterController/ReassignMember
            </remarks>
            <value>
            The selected component identifier.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.AssignMemberModalViewComponentViewModel.Members">
            <summary>
            Gets or sets the List of Members.
            </summary>
            <remarks>
            This list is used to populate a Select List from which a user can select a Member to assign.
            See <see cref="T:BlueDeck.Models.Types.MemberSelectListItem"/>
            </remarks>
            <value>
            The members.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.AssignMemberModalViewComponentViewModel.TemporaryAssignment">
            <summary>
            Gets or sets a value indicating whether the assignment is temporary.
            </summary>
            <value>
              <c>true</c> if [temporary assignment]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:BlueDeck.Models.ViewModels.AssignMemberModalViewComponentViewModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BlueDeck.Models.ViewModels.AssignMemberModalViewComponentViewModel"/> class.
            </summary>
        </member>
        <member name="M:BlueDeck.Models.ViewModels.AssignMemberModalViewComponentViewModel.#ctor(BlueDeck.Models.Position,System.Collections.Generic.List{BlueDeck.Models.Types.MemberSelectListItem},System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:BlueDeck.Models.ViewModels.AssignMemberModalViewComponentViewModel"/> class.
            </summary>
            <param name="p">The p.</param>
            <param name="members">The members.</param>
            <param name="selectedComponentId">The selected component identifier.</param>
        </member>
        <member name="T:BlueDeck.Models.ViewModels.ComponentWithComponentListViewModel">
            <summary>
            ViewModel used to display a Component and populate a selectlist of Component Names/Ids to facilitate adding a Component or changing the Component to which a Component is assigned. 
            </summary>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.ComponentWithComponentListViewModel.ComponentId">
            <summary>
            Gets or sets the Id of the Component.
            </summary>
            <value>
            The component id.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.ComponentWithComponentListViewModel.ComponentName">
            <summary>
            Gets or sets the Component Name.
            </summary>
            <value>
            The name of the component.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.ComponentWithComponentListViewModel.ParentComponentId">
            <summary>
            Gets or sets the Id of the Component's Parent Component
            </summary>
            <value>
            The Id of the Component's Parent Component.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.ComponentWithComponentListViewModel.Acronym">
            <summary>
            Gets or sets the Component's acronym.
            </summary>
            <value>
            The acronym of the Component.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.ComponentWithComponentListViewModel.Components">
            <summary>
            Gets or sets the list of all Component Names/Ids in the repository.  Used to populate an HTML select list.
            </summary>
            <value>
            The <see cref="T:List{T}"/> of <see cref="T:BlueDeck.Types.ComponentSelectListItem"/>s.
            </value>
        </member>
        <member name="M:BlueDeck.Models.ViewModels.ComponentWithComponentListViewModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BlueDeck.ViewModels.ComponentWithComponentListViewModel"/> class.
            <remarks>
            This parameter-less constructor had to be added in because the <see cref="T:BlueDeck.ViewModels.ComponentWithComponentListViewModel(Component, List{Component})"/> constructor overrode the default, and the form POST model-binding failed
            </remarks>
            </summary>
        </member>
        <member name="M:BlueDeck.Models.ViewModels.ComponentWithComponentListViewModel.#ctor(BlueDeck.Models.Component,System.Collections.Generic.List{BlueDeck.Models.Types.ComponentSelectListItem})">
            TODO: Use a SP to get a list of all Component Names/Ids instead of using EF to pull all Components?
            <summary>
            Initializes a new instance of the <see cref="T:BlueDeck.ViewModels.ComponentWithComponentListViewModel"/> class.
            </summary>
            <param name="c">The <see cref="T:BlueDeck.Models.Component"/> being displayed by the view</param>
            <param name="l">A <see cref="T:List{T}"/> of all <see cref="T:BlueDeck.Models.Component"/>s in the repository </param>
        </member>
        <member name="T:BlueDeck.Models.ViewModels.MemberAddEditViewModel">
            <summary>
            ViewModel used to display a Position and populate a selectlist of Component Names/Ids to facilitate adding a Position or changing the Component to which a position is assigned. 
            </summary>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.MemberAddEditViewModel.MemberId">
            <summary>
            Gets or sets the Id of the Member.
            </summary>
            <value>
            The Member's Id.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.MemberAddEditViewModel.MemberRank">
            <summary>
            Gets or sets the Rank of the Member.
            </summary>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.MemberAddEditViewModel.MemberGender">
            <summary>
            Gets or sets the member gender.
            </summary>
            <value>
            The member gender.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.MemberAddEditViewModel.MemberRace">
            <summary>
            Gets or sets the member race.
            </summary>
            <value>
            The member race.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.MemberAddEditViewModel.FirstName">
            <summary>
            Gets or sets the First Name of the Member.
            </summary>
            <value>
            The first name.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.MemberAddEditViewModel.LastName">
            <summary>
            Gets or sets the Last Name of the Member.
            </summary>
            <value>
            The last name.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.MemberAddEditViewModel.MiddleName">
            <summary>
            Gets or sets the Middle Name of the Member.
            </summary>
            <value>
            The Member's middle name.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.MemberAddEditViewModel.IdNumber">
            <summary>
            Gets or sets the Member's IDNumber.
            </summary>
            <remarks>
            This is NOT the Member Entity Id. This is the Member's employee Id number
            </remarks>
            <value>
            The Member's Departmental ID Number.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.MemberAddEditViewModel.DutyStatusId">
            <summary>
            Gets or sets the Member's Duty Status.
            </summary>
            <value>
            The Member's Duty Status Index.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.MemberAddEditViewModel.Email">
            <summary>
            Gets or sets the Member's email.
            </summary>
            <value>
            The email.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.MemberAddEditViewModel.PositionId">
            <summary>
            Gets or sets the Position identifier.
            </summary>
            <value>
            The position identifier.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.MemberAddEditViewModel.TempPositionId">
            <summary>
            Gets or sets the Position identifier for the Member's Temporary Position.
            </summary>
            <value>
            The position identifier for the member's Temporary (TDY) position.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.MemberAddEditViewModel.DisplayName">
            <summary>
            Gets or sets the display name.
            </summary>
            <value>
            The Member's display name, used only for Display. This is not a model-bound editable field.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.MemberAddEditViewModel.ContactNumbers">
            <summary>
            Gets or sets the Member's Contact Numbers.
            </summary>
            <remarks>
            This property stores a List of <see cref="T:BlueDeck.Models.ContactNumber"/> objects to store the Member's phone numbers.
            </remarks>
            <value>
            The contact numbers.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.MemberAddEditViewModel.RankList">
            <summary>
            Gets or sets a list of <see cref="T:BlueDeck.Models.Types.MemberRankSelectListItem"/>s.
            </summary>
            <value>
            The rank list.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.MemberAddEditViewModel.Positions">
            <summary>
            Gets or sets a list of <see cref="T:BlueDeck.Models.Types.PositionSelectListItem"/>.
            </summary>
            <value>
            The positions.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.MemberAddEditViewModel.GenderList">
            <summary>
            Gets or sets a list of <see cref="T:BlueDeck.Models.Types.MemberGenderSelectListItem"/>.
            </summary>
            <value>
            The genders.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.MemberAddEditViewModel.RaceList">
            <summary>
            Gets or sets a list of <see cref="T:BlueDeck.Models.Types.MemberRaceSelectListItem"/>.
            </summary>
            <value>
            The races.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.MemberAddEditViewModel.DutyStatus">
            <summary>
            Gets or sets a list of <see cref="T:BlueDeck.Models.Types.MemberDutyStatusSelectListItem"/>.
            </summary>
            <remarks>
            This property is used to populate drop-down lists of Member Duty Statuses.
            </remarks>
            <value>
            The races.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.MemberAddEditViewModel.PhoneNumberTypes">
            <summary>
            Gets or sets the list of <see cref="T:BlueDeck.Models.Types.PhoneNumberTypeSelectListItem"/>.
            </summary>
            <remarks>
            This property is used to populate drop-down lists of Phone Number Types.
            </remarks>
            <value>
            The phone number types.
            </value>
        </member>
        <member name="M:BlueDeck.Models.ViewModels.MemberAddEditViewModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BlueDeck.Models.ViewModels.MemberAddEditViewModel"/> class.
            </summary>
        </member>
        <member name="M:BlueDeck.Models.ViewModels.MemberAddEditViewModel.#ctor(BlueDeck.Models.Member,System.Collections.Generic.List{BlueDeck.Models.Types.PositionSelectListItem},System.Collections.Generic.List{BlueDeck.Models.Types.MemberRankSelectListItem},System.Collections.Generic.List{BlueDeck.Models.Types.MemberGenderSelectListItem},System.Collections.Generic.List{BlueDeck.Models.Types.MemberRaceSelectListItem},System.Collections.Generic.List{BlueDeck.Models.Types.MemberDutyStatusSelectListItem},System.Collections.Generic.List{BlueDeck.Models.Types.PhoneNumberTypeSelectListItem},System.Collections.Generic.List{BlueDeck.Models.Types.ApplicationStatusSelectListItem})">
            <summary>
            Initializes a new instance of the <see cref="T:BlueDeck.Models.ViewModels.MemberAddEditViewModel"/> class.
            </summary>
            <param name="_member">A <see cref="T:BlueDeck.Models.Member"/>.</param>
            <param name="_positionList">A <see cref="T:BlueDeck.Models.Types.PositionSelectListItem"/>.</param>
            <param name="_rankList">A <see cref="T:BlueDeck.Models.Types.MemberRankSelectListItem"/>.</param>
            <param name="_genderList">A <see cref="T:BlueDeck.Models.Types.MemberGenderSelectListItem"/>.</param>
            <param name="_raceList">A <see cref="T:BlueDeck.Models.Types.MemberRaceSelectListItem"/>.</param>
            <param name="_dutyStatusList">A <see cref="T:BlueDeck.Models.Types.MemberDutyStatusSelectListItem"/>.</param>
            <param name="_phoneNumberTypes">A <see cref="T:BlueDeck.Models.Types.PhoneNumberTypeSelectListItem"/>.</param>
            <param name="_appStatusList">A List of  <see cref="T:BlueDeck.Models.Types.ApplicationStatusSelectListItem"/>.</param>
        </member>
        <member name="M:BlueDeck.Models.ViewModels.MemberAddEditViewModel.#ctor(BlueDeck.Models.Member,System.Collections.Generic.List{BlueDeck.Models.Types.MemberRankSelectListItem},System.Collections.Generic.List{BlueDeck.Models.Types.MemberGenderSelectListItem},System.Collections.Generic.List{BlueDeck.Models.Types.MemberRaceSelectListItem},System.Collections.Generic.List{BlueDeck.Models.Types.MemberDutyStatusSelectListItem},System.Collections.Generic.List{BlueDeck.Models.Types.PhoneNumberTypeSelectListItem},System.Collections.Generic.List{BlueDeck.Models.Types.ApplicationStatusSelectListItem})">
            <summary>
            Initializes a new instance of the <see cref="T:BlueDeck.Models.ViewModels.MemberAddEditViewModel"/> class.
            </summary>
            <remarks>
            This constructor serves the Modal Form to add a Member which is invoked from the RosterManager view.
            The Member's Position cannot be changed from this Modal, so there is no List of PositionSelectListItem parameter.
            </remarks>
            <param name="_member">The member.</param>
            <param name="_rankList">A List of <see cref="T:BlueDeck.Models.Types.MemberRankSelectListItem"/>.</param>
            <param name="_genderList">A List of  <see cref="T:BlueDeck.Models.Types.MemberGenderSelectListItem"/>.</param>
            <param name="_raceList">A List of  <see cref="T:BlueDeck.Models.Types.MemberRaceSelectListItem"/>.</param>
            <param name="_dutyStatusList">A List of  <see cref="T:BlueDeck.Models.Types.MemberDutyStatusSelectListItem"/>.</param>
            <param name="_phoneNumberTypes">A List of  <see cref="T:BlueDeck.Models.Types.PhoneNumberTypeSelectListItem"/>.</param>
            <param name="_appStatusList">A List of  <see cref="T:BlueDeck.Models.Types.ApplicationStatusSelectListItem"/>.</param>
        </member>
        <member name="T:BlueDeck.Models.ViewModels.PositionWithComponentListViewModel">
            <summary>
            ViewModel used to display a Position and populate a selectlist of Component Names/Ids to facilitate adding a Position or changing the Component to which a position is assigned. 
            </summary>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.PositionWithComponentListViewModel.PositionId">
            <summary>
            Gets or sets the Id of the Position.
            </summary>
            <value>
            The Position's Id.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.PositionWithComponentListViewModel.PositionName">
            <summary>
            Gets or sets the name of the position.
            </summary>
            <value>
            The name of the position.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.PositionWithComponentListViewModel.ParentComponentId">
            <summary>
            Gets or sets the Id of the Position's parent <see cref="T:BlueDeck.Models.Component"/>
            </summary>
            <value>
            The parent's ComponentId.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.PositionWithComponentListViewModel.JobTitle">
            <summary>
            Gets or sets the job title.
            </summary>
            <value>
            The job title.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.PositionWithComponentListViewModel.IsManager">
            <summary>
            Gets or sets a value indicating whether this Position is designated as the manager of it's parent <see cref="T:BlueDeck.Models.Component"/>.
            </summary>
            <value>
              <c>true</c> if this instance is manager; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.PositionWithComponentListViewModel.IsAssistantManager">
            <summary>
            Gets or sets a value indicating whether this position is an assistant manager for it's component <see cref="T:BlueDeck.Models.Component"/>.
            </summary>
            <value>
              <c>true</c> if this instance is assistant manager; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.PositionWithComponentListViewModel.IsUnique">
            <summary>
            Gets or sets a value indicating whether this instance is unique, or if it can be assigned multiple <see cref="T:BlueDeck.Models.Member"/>s.
            </summary>
            <value>
              <c>true</c> if this instance is unique; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.PositionWithComponentListViewModel.LineupPosition">
            <summary>
            Gets or sets the lineup position.
            </summary>
            <remarks>
            The Lineup position determines the order in which a Position is listed among it's siblings. 
            </remarks>
            <value>
            The lineup position.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.PositionWithComponentListViewModel.Callsign">
            <summary>
            Gets or sets the callsign.
            </summary>
            <remarks>
            The Callsign is an optional field indicating the radio identifier for a person assigned to this position.
            </remarks>
            <value>
            The callsign.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.PositionWithComponentListViewModel.Creator">
            <summary>
            Gets or sets the creator.
            </summary>
            <remarks>
            This property is the display name of the <see cref="T:BlueDeck.Models.Member"/> that created the Position
            </remarks>
            <value>
            The creator.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.PositionWithComponentListViewModel.CreatedDate">
            <summary>
            Gets or sets the date that the Member was initially created.
            </summary>
            <remarks>
            This value should be set at initial creation and should never change.
            </remarks>
            <value>
            The created date.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.PositionWithComponentListViewModel.CreatedById">
            <summary>
            Gets or sets the MemberId of the <see cref="T:BlueDeck.Models.Member"/> who created the Position.
            </summary>
            <remarks>
            This propery should be set at the time the Position is first created and should never change.
            </remarks>
            <value>
            The created by identifier.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.PositionWithComponentListViewModel.LastModifiedBy">
            <summary>
            Gets or sets the name of the <see cref="T:BlueDeck.Models.Member"/> that last modified the Position.
            </summary>
            <remarks>
            This property is set to the Display Name of the <see cref="T:BlueDeck.Models.Member"/> who last modified the Position.
            </remarks>
            <value>
            The last modified by.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.PositionWithComponentListViewModel.LastModified">
            <summary>
            Gets or sets the date that the Position was last modified.
            </summary>
            <value>
            The date the Position was last modified.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.PositionWithComponentListViewModel.LastModifiedById">
            <summary>
            Gets or sets the MemberId of the <see cref="T:BlueDeck.Models.Member"/> that last modified the Position.
            </summary>
            <value>
            The last modified by identifier.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.PositionWithComponentListViewModel.Components">
            <summary>
            Gets or sets the list of all Component Names/Ids in the repository.  Used to populate an HTML select list.
            </summary>
            <value>
            The <see cref="T:List{T}"/> of <see cref="!:BlueDeck.Types.ComponentSelectListItem"/>s.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.PositionWithComponentListViewModel.CurrentMembers">
            <summary>
            Gets or sets a List of current <see cref="!:Members"/> Members assigned to this Position.
            </summary>
            <value>
            The current members.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.PositionWithComponentListViewModel.AvailableMembers">
            <summary>
            Gets or sets a list of <see cref="T:BlueDeck.Models.Types.MemberSelectListItem"/> that can be assigned to this position
            </summary>
            <remarks>
            As if v1.0, this list is set by the PositionController depending on the Claims of the Current User. 
            This list will contain all current Members in the Database if the User is a Global Admin, but will otherwise be limited 
            to Members that are stored in the User's claims, which are loaded via the <see cref="T:BlueDeck.Models.ClaimsLoader"/> middleware.
            </remarks>
            <value>
            The available members.
            </value>
        </member>
        <member name="M:BlueDeck.Models.ViewModels.PositionWithComponentListViewModel.#ctor(BlueDeck.Models.Position)">
            TODO: Use a SP to get a list of all Component Names/Ids instead of using EF to pull all Components?
            <summary>
            Initializes a new instance of the <see cref="T:BlueDeck.Models.ViewModels.PositionWithComponentListViewModel"/> class.
            </summary>
            <param name="p">The <see cref="T:BlueDeck.Models.Position"/> being displayed by the view</param>
        </member>
        <member name="M:BlueDeck.Models.ViewModels.PositionWithComponentListViewModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BlueDeck.Models.ViewModels.PositionWithComponentListViewModel"/> class.
            <remarks>
            This parameter-less constructor had to be added in because the <see cref="T:BlueDeck.Models.ViewModels.PositionWithComponentListViewModel"/> constructor overrode the default, and the form POST model-binding failed
            </remarks>
            </summary>
        </member>
        <member name="T:BlueDeck.Models.ViewModels.ManageOrAssistantNotBothAttribute">
            <summary>
            Attribute validator that ensures that a Position is not designated as both Manager and Assistant Manager
            </summary>
            <seealso cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" />
        </member>
        <member name="M:BlueDeck.Models.ViewModels.ManageOrAssistantNotBothAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:BlueDeck.Models.ViewModels.ManageOrAssistantNotBothAttribute"/> class.
            </summary>
            <param name="comparisonProperty">The name of the property to compare.</param>
        </member>
        <member name="M:BlueDeck.Models.ViewModels.ManageOrAssistantNotBothAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            Returns Success if both Manager and AssistantManager properties are not true.
            </summary>
            <param name="value">The value to validate.</param>
            <param name="validationContext">The context information about the validation operation.</param>
            <returns>
            An instance of the <see cref="T:System.ComponentModel.DataAnnotations.ValidationResult"></see> class.
            </returns>
            <exception cref="T:System.ArgumentException">Property with this name not found</exception>
        </member>
        <member name="P:BlueDeck.Persistence.Repositories.AppStatusRepository.ApplicationDbContext">
            <summary>
            Gets the application database context.
            </summary>
            <value>
            The application database context.
            </value>
        </member>
        <member name="T:BlueDeck.Persistence.Repositories.ComponentRepository">
            <summary>
            A repository for the Component Entity
            </summary>
            <seealso cref="T:BlueDeck.Persistence.Repositories.Repository{BlueDeck.Models.Component}" />
            <seealso cref="T:BlueDeck.Models.Repositories.IComponentRepository" />
        </member>
        <member name="M:BlueDeck.Persistence.Repositories.ComponentRepository.#ctor(BlueDeck.Models.ApplicationDbContext)">
            <summary>
            Initializes a new instance of the <see cref="T:BlueDeck.Persistence.Repositories.ComponentRepository"/> class.
            </summary>
            <param name="context">The <see cref="T:BlueDeck.Models.ApplicationDbContext"/></param>
        </member>
        <member name="M:BlueDeck.Persistence.Repositories.ComponentRepository.GetComponentsWithChildren">
            <summary>
            Gets the list components with all member children.
            </summary>
            <returns>
            A <see cref="T:System.Collections.IEnumerable{BlueDeck.Models.Component}" />
            </returns>
        </member>
        <member name="M:BlueDeck.Persistence.Repositories.ComponentRepository.GetComponentWithChildren(System.Int32)">
            <summary>
            Gets the component with all of it's member children.
            </summary>
            <param name="id">The Component identifier.</param>
            <returns>
            A <see cref="T:BlueDeck.Models.Component" />
            </returns>
        </member>
        <member name="M:BlueDeck.Persistence.Repositories.ComponentRepository.GetComponentWithParentComponent(System.Int32)">
            <summary>
            Gets the Component with it's Parent Component.
            </summary>
            <param name="id">The ComponentId of the desired Component Entity.</param>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Persistence.Repositories.ComponentRepository.GetComponentWithPositions(System.Int32)">
            <summary>
            Gets the Component with it's Positions.
            </summary>
            <param name="id">The ComponentId of the requested Component.</param>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Persistence.Repositories.ComponentRepository.GetOrgChartComponentsWithoutMembers">
            <summary>
            Gets the list of <see cref="T:BlueDeck.Models.ChartableComponent"/>s.
            </summary>
            <returns>A <see cref="T:IEnumerable{T}"/> list of <see cref="T:BlueDeck.Models.ChartableComponent"/> objects</returns>
        </member>
        <member name="M:BlueDeck.Persistence.Repositories.ComponentRepository.GetComponentSelectListItems">
            <summary>
            Gets the list of <see cref="T:BlueDeck.Models.Types.ComponentSelectListItem" />s to populate a Component select list
            </summary>
            <returns>
            A <see cref="T:List{BlueDeck.Models.Types.ComponentSelectListItem}" />
            </returns>
        </member>
        <member name="M:BlueDeck.Persistence.Repositories.ComponentRepository.GetOrgChartComponentsWithMembers(System.Int32)">
            <summary>
            Gets the list of <see cref="T:BlueDeck.Models.ChartableComponentWithMember"/>s.
            </summary>
            <returns>A <see cref="T:System.Collections.Generic.IEnumerable`1"/> list of <see cref="T:BlueDeck.Models.ChartableComponentWithMember"/> objects</returns>
        </member>
        <member name="M:BlueDeck.Persistence.Repositories.ComponentRepository.GetOrgChartComponentsWithMembersNoMarkup(System.Int32)">
            <summary>
            Gets the list of <see cref="T:BlueDeck.Models.ChartableComponentWithMember"/>s.
            </summary>
            <returns>A <see cref="T:IEnumerable{T}"/> list of <see cref="T:BlueDeck.Models.ChartableComponentWithMember"/> objects</returns>
        </member>
        <member name="M:BlueDeck.Persistence.Repositories.ComponentRepository.UpdateComponentAndSetLineup(BlueDeck.Models.Component)">
            <summary>
            Adds a new Component or Updates an existing Component and adjusts the LineupPosition of all sibling Components within the ParentComponent
            </summary>
            <remarks>
            If this method is used to edit an existing component, then the Component parameter must be a new Component instance set to the form values of the existing component.
            This is because the method needs to know the "unedited" value of the Component's LineupPosition to determine whether the Component has been moved up or down
            in it's ParentComponent's Lineup.
            /// </remarks>
            <param name="c">The <seealso cref="T:BlueDeck.Models.Component"/> being added or edited.</param>
        </member>
        <member name="T:BlueDeck.Persistence.Repositories.MemberDutyStatusRepository">
            <summary>
            Repository that Controls CRUD operations for the <see cref="T:BlueDeck.Models.DutyStatus"/> entity.
            </summary>
            <seealso cref="!:Repositories.Repository&lt;Models.DutyStatus&gt;" />
            <seealso cref="T:BlueDeck.Models.Repositories.IMemberDutyStatusRepository" />
        </member>
        <member name="M:BlueDeck.Persistence.Repositories.MemberDutyStatusRepository.#ctor(BlueDeck.Models.ApplicationDbContext)">
            <summary>
            Initializes a new instance of the <see cref="T:BlueDeck.Models.Persistence.MemberDutyStatusRepository"/> class.
            </summary>
            <param name="context">A <see cref="T:BlueDeck.Models.ApplicationDbContext"/></param>
        </member>
        <member name="M:BlueDeck.Persistence.Repositories.MemberDutyStatusRepository.GetMemberDutyStatusSelectListItems">
            <summary>
            Gets a list of <see cref="T:BlueDeck.Types.MemberGenderSelectListItem" />s.
            </summary>
            <remarks>
            This method is used to populate Gender select lists.
            </remarks>
            <returns>
            A <see cref="T:List{BlueDeck.Models.Types.MemberGenderSelectListItem}" />
            </returns>
        </member>
        <member name="M:BlueDeck.Persistence.Repositories.MemberDutyStatusRepository.GetStatusById(System.Int32)">
            <summary>
            Gets the Duty Status with the given identifier.
            </summary>
            <param name="memberDutyStatus">The DutyStatusId of the desired Duty Status.</param>
            <returns>A <see cref="T:BlueDeck.Models.DutyStatus"/></returns>
        </member>
        <member name="P:BlueDeck.Persistence.Repositories.MemberDutyStatusRepository.ApplicationDbContext">
            <summary>
            Gets the application database context.
            </summary>
            <value>
            The application database context.
            </value>
        </member>
        <member name="M:BlueDeck.Persistence.Repositories.MemberDutyStatusRepository.GetDutyStatusesWithMemberCount">
            <summary>
            Gets the a list of all current duty statuses with member count.
            </summary>
            <returns>A <see cref="T:System.Collections.Generic.List`1"/> of all current Duty Status types</returns>
        </member>
        <member name="M:BlueDeck.Persistence.Repositories.MemberDutyStatusRepository.GetDutyStatusWithMemberCount(System.Int32)">
            <summary>
            Gets a duty status with member count.
            </summary>
            <param name="id">The DutyStatusId of the desired Duty Status.</param>
            <returns>A <see cref="T:BlueDeck.Models.DutyStatus"/></returns>
        </member>
        <member name="M:BlueDeck.Persistence.Repositories.MemberDutyStatusRepository.Remove(System.Int32)">
            <summary>
            Removes the Duty Status with the specified identifier.
            </summary>
            <remarks>
            If the Duty Status being deleted has Members assigned to it, this method will try to reassign them the to "Full Duty" status, or, failing that, assign them to DutyStatusId = 1.
            This is to prevent orphaning Members. The current calling methods are supposed to prevent allowing this method to be called on Duty Statuses with active Members.
            </remarks>
            <param name="id">The DutyStatusId of the Duty Status to remove.</param>
        </member>
        <member name="T:BlueDeck.Persistence.Repositories.MemberGenderRepository">
            <summary>
            A repository for the MemberGender entity.
            </summary>
            <seealso cref="T:BlueDeck.Persistence.Repositories.Repository{BlueDeck.Models.Types.MemberGender}" />
            <seealso cref="T:BlueDeck.Models.Repositories.IMemberGenderRepository" />
        </member>
        <member name="M:BlueDeck.Persistence.Repositories.MemberGenderRepository.#ctor(BlueDeck.Models.ApplicationDbContext)">
            <summary>
            Initializes a new instance of the <see cref="T:BlueDeck.Persistence.Repositories.MemberGenderRepository"/> class.
            </summary>
            <param name="context">A <see cref="T:BlueDeck.Models.ApplicationDbContext"/></param>
        </member>
        <member name="M:BlueDeck.Persistence.Repositories.MemberGenderRepository.GetMemberGenderSelectListItems">
            <summary>
            Gets a list of <see cref="T:BlueDeck.Types.MemberGenderSelectListItem" />s.
            </summary>
            <remarks>
            This method is used to populate Gender select lists.
            </remarks>
            <returns>
            A <see cref="T:List{BlueDeck.Models.Types.MemberGenderSelectListItem}" />
            </returns>
        </member>
        <member name="M:BlueDeck.Persistence.Repositories.MemberGenderRepository.GetGenderById(System.Int32)">
            <summary>
            Gets the gender by identifier.
            </summary>
            <param name="memberGenderId">The <see cref="T:BlueDeck.Models.Gender" /> identifier.</param>
            <returns>
            A <see cref="T:BlueDeck.Models.Gender" />
            </returns>
        </member>
        <member name="M:BlueDeck.Persistence.Repositories.MemberGenderRepository.GetGendersWithMembers">
            <summary>
            Gets a list of all <see cref="T:BlueDeck.Models.Gender"/> with members.
            </summary>
            <returns>A <see cref="T:System.Collections.Generic.List`1"/> containing all current <see cref="T:BlueDeck.Models.Gender"/></returns>
        </member>
        <member name="M:BlueDeck.Persistence.Repositories.MemberGenderRepository.GetGenderWithMembers(System.Int32)">
            <summary>
            Gets a <see cref="T:BlueDeck.Models.Gender"/> with it's current <see cref="T:BlueDeck.Models.Member"/>s.
            </summary>
            <param name="id">The identifier of the <see cref="T:BlueDeck.Models.Gender"/>.</param>
            <returns>A <see cref="T:BlueDeck.Models.Gender"/></returns>
        </member>
        <member name="P:BlueDeck.Persistence.Repositories.MemberGenderRepository.ApplicationDbContext">
            <summary>
            Gets the application database context.
            </summary>
            <value>
            The application database context.
            </value>
        </member>
        <member name="T:BlueDeck.Persistence.Repositories.MemberRaceRepository">
            <summary>
            A repository for the MemberRace entity.
            </summary>
            <seealso cref="T:BlueDeck.Persistence.Repositories.Repository{BlueDeck.Models.Types.MemberRace}" />
            <seealso cref="T:BlueDeck.Models.Repositories.IMemberRaceRepository" />
        </member>
        <member name="M:BlueDeck.Persistence.Repositories.MemberRaceRepository.#ctor(BlueDeck.Models.ApplicationDbContext)">
            <summary>
            Initializes a new instance of the <see cref="T:BlueDeck.Persistence.Repositories.MemberRaceRepository"/> class.
            </summary>
            <param name="context">A <see cref="T:BlueDeck.Models.ApplicationDbContext"/></param>
        </member>
        <member name="M:BlueDeck.Persistence.Repositories.MemberRaceRepository.GetMemberRaceSelectListItems">
            <summary>
            Gets a list of <see cref="T:BlueDeck.Types.MemberRaceSelectListItem" />s.
            </summary>
            <remarks>
            This method is used to populate Rank select lists.
            </remarks>
            <returns>
            A <see cref="T:List{BlueDeck.Models.Types.MemberRaceSelectListItem}" />
            </returns>
        </member>
        <member name="M:BlueDeck.Persistence.Repositories.MemberRaceRepository.GetRaceById(System.Int32)">
            <summary>
            Gets the race by identifier.
            </summary>
            <param name="memberRaceId">The member race identifier.</param>
            <returns>A <see cref="T:BlueDeck.Models.Race"/></returns>
        </member>
        <member name="M:BlueDeck.Persistence.Repositories.MemberRaceRepository.GetRacesWithMembers">
            <summary>
            Gets a lsit of all Races including their members.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.List`1" /> of all races including their members.
            </returns>
        </member>
        <member name="M:BlueDeck.Persistence.Repositories.MemberRaceRepository.GetRaceWithMembers(System.Int32)">
            <summary>
            Gets a race with it's members.
            </summary>
            <param name="id">The identifier of the <see cref="T:BlueDeck.Models.Race" />.</param>
            <returns></returns>
        </member>
        <member name="P:BlueDeck.Persistence.Repositories.MemberRaceRepository.ApplicationDbContext">
            <summary>
            Gets the application database context.
            </summary>
            <value>
            The application database context.
            </value>
        </member>
        <member name="T:BlueDeck.Persistence.Repositories.MemberRankRepository">
            <summary>
            A repository for the MemberRank entity.
            </summary>
            <seealso cref="T:BlueDeck.Persistence.Repositories.Repository{BlueDeck.Models.Types.MemberRank}" />
            <seealso cref="T:BlueDeck.Models.Repositories.IMemberRankRepository" />
        </member>
        <member name="M:BlueDeck.Persistence.Repositories.MemberRankRepository.#ctor(BlueDeck.Models.ApplicationDbContext)">
            <summary>
            Initializes a new instance of the <see cref="T:BlueDeck.Persistence.Repositories.MemberRankRepository"/> class.
            </summary>
            <param name="context">A <see cref="T:BlueDeck.Models.ApplicationDbContext"/></param>
        </member>
        <member name="M:BlueDeck.Persistence.Repositories.MemberRankRepository.GetMemberRankSelectListItems">
            <summary>
            Gets a list of <see cref="T:BlueDeck.Types.MemberRankSelectListItem" />s.
            </summary>
            <returns>
            A <see cref="T:List{BlueDeck.Models.Types.MemberRankSelectListItem}" />
            </returns>
            <remarks>
            This method is used to populate Rank select lists.
            </remarks>
        </member>
        <member name="M:BlueDeck.Persistence.Repositories.MemberRankRepository.GetRankById(System.Int32)">
            <summary>
            Gets the rank by identifier.
            </summary>
            <param name="memberRankId">The member rank identifier.</param>
            <returns>
            A <see cref="T:BlueDeck.Models.Rank" /> object.
            </returns>
        </member>
        <member name="M:BlueDeck.Persistence.Repositories.MemberRankRepository.GetRanksWithMembers">
            <summary>
            Gets a list of all ranks with their members.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:BlueDeck.Models.Rank" /> with all of their <see cref="T:BlueDeck.Models.Member" />s.
            </returns>
        </member>
        <member name="M:BlueDeck.Persistence.Repositories.MemberRankRepository.GetRankWithMembers(System.Int32)">
            <summary>
            Gets a specific rank with its members.
            </summary>
            <param name="id">The identifier of the <see cref="T:BlueDeck.Models.Rank" />.</param>
            <returns>
            A <see cref="T:BlueDeck.Models.Rank" /> with it's <see cref="T:BlueDeck.Models.Member" />s.
            </returns>
        </member>
        <member name="P:BlueDeck.Persistence.Repositories.MemberRankRepository.ApplicationDbContext">
            <summary>
            Gets the application database context.
            </summary>
            <value>
            The application database context.
            </value>
        </member>
        <member name="T:BlueDeck.Persistence.Repositories.MemberRepository">
            <summary>
            A repository for the Member entity
            </summary>
            <seealso cref="T:BlueDeck.Persistence.Repositories.Repository{BlueDeck.Models.Member}" />
            <seealso cref="T:BlueDeck.Models.Repositories.IMemberRepository" />
        </member>
        <member name="M:BlueDeck.Persistence.Repositories.MemberRepository.#ctor(BlueDeck.Models.ApplicationDbContext)">
            <summary>
            Initializes a new instance of the <see cref="T:BlueDeck.Persistence.Repositories.MemberRepository"/> class.
            </summary>
            <param name="context">The <see cref="T:BlueDeck.Models.ApplicationDbContext"/>.</param>
        </member>
        <member name="P:BlueDeck.Persistence.Repositories.MemberRepository.ApplicationDbContext">
            <summary>
            Gets the application database context.
            </summary>
            <value>
            The application database context.
            </value>        
        </member>
        <member name="M:BlueDeck.Persistence.Repositories.MemberRepository.GetMembersWithPositions">
            <summary>
            Gets the members with positions.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Persistence.Repositories.MemberRepository.Remove(System.Int32)">
            <summary>
            Removes the Member with the specified Identifier.
            </summary>
            <param name="memberId">The MemberId of the Member to remove.</param>
            <remarks>
            This is an override of the IRepository's Remove method. This override removes all MemberContact entries
            when removing a Member.
            </remarks>
        </member>
        <member name="M:BlueDeck.Persistence.Repositories.MemberRepository.GetMemberWithRoles(System.String)">
            <summary>
            Gets a specific Member with their roles via LDAP Name
            </summary>
            <param name="LDAPName">The Windows LDAP Name of the Member.</param>
            <returns>The <see cref="T:BlueDeck.Models.Member"/> with the given LDAP Name</returns>
        </member>
        <member name="M:BlueDeck.Persistence.Repositories.MemberRepository.GetHomePageViewModelForMember(System.Int32)">
            <summary>
            Gets the home page view model for member.
            </summary>
            <remarks>
            This is an attempt to try and apply some better SOLID principals to the
            way I build these viewModels...
            </remarks>
            <param name="memberId">The member identifier.</param>
            <returns></returns>
        </member>
        <member name="T:BlueDeck.Persistence.Repositories.PhoneNumberTypeRepository">
            <summary>
            An implementation of the <see cref="T:BlueDeck.Models.Repositories.IPhoneNumberTypeRepository"/> that handles CRUD interactions for the <see cref="T:BlueDeck.Models.PhoneNumberType"/> entities.
            </summary>
            <seealso cref="T:BlueDeck.Persistence.Repositories.Repository`1" />
            <seealso cref="T:BlueDeck.Models.Repositories.IPhoneNumberTypeRepository" />
        </member>
        <member name="M:BlueDeck.Persistence.Repositories.PhoneNumberTypeRepository.#ctor(BlueDeck.Models.ApplicationDbContext)">
            <summary>
            Initializes a new instance of the <see cref="T:BlueDeck.Persistence.Repositories.PhoneNumberTypeRepository"/> class.
            </summary>
            <param name="context">An injected <see cref="P:BlueDeck.Persistence.Repositories.PhoneNumberTypeRepository.ApplicationDbContext"/> database context obtained from the services middleware.</param>
        </member>
        <member name="M:BlueDeck.Persistence.Repositories.PhoneNumberTypeRepository.GetPhoneNumberTypeSelectListItems">
            <summary>
            Gets a list of <see cref="T:BlueDeck.Models.Types.PhoneNumberTypeSelectListItem" /> items for all phone number types in the database.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.List`1" />
            </returns>
            <remarks>
            This method is used to populate select lists for Phone Number Types
            </remarks>
        </member>
        <member name="M:BlueDeck.Persistence.Repositories.PhoneNumberTypeRepository.GetPhoneNumberTypesWithPhoneNumbers">
            <summary>
            Gets a list of all <see cref="T:BlueDeck.Models.PhoneNumberType" /> entities including all associated <see cref="T:BlueDeck.Models.ContactNumber" />
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.List`1"/> that includes all <see cref="T:BlueDeck.Models.PhoneNumberType"/> entities and their related <see cref="T:BlueDeck.Models.ContactNumber"/>.
            </returns>
        </member>
        <member name="M:BlueDeck.Persistence.Repositories.PhoneNumberTypeRepository.GetPhoneNumberTypeWithPhoneNumbers(System.Int32)">
            <summary>
            Gets a specific <see cref="T:BlueDeck.Models.PhoneNumberType" /> entity including all associated <see cref="T:BlueDeck.Models.ContactNumber" />
            </summary>
            <param name="id">The identity of the <see cref="T:BlueDeck.Models.PhoneNumberType" /></param>
            <returns>
            A <see cref="T:BlueDeck.Models.PhoneNumberType"/> object.
            </returns>
        </member>
        <member name="P:BlueDeck.Persistence.Repositories.PhoneNumberTypeRepository.ApplicationDbContext">
            <summary>
            Exposes the injected DB Context to class methods.
            </summary>
            <value>
            The application database context.
            </value>
        </member>
        <member name="T:BlueDeck.Persistence.Repositories.PositionRepository">
            <summary>
            A repository for the Position entity
            </summary>
            <seealso cref="T:BlueDeck.Persistence.Repositories.Repository{BlueDeck.Models.Position}" />
            <seealso cref="T:BlueDeck.Models.Repositories.IPositionRepository" />
        </member>
        <member name="M:BlueDeck.Persistence.Repositories.PositionRepository.#ctor(BlueDeck.Models.ApplicationDbContext)">
            <summary>
            Initializes a new instance of the <see cref="T:BlueDeck.Persistence.Repositories.PositionRepository"/> class.
            </summary>
            <param name="context">An <see cref="T:BlueDeck.Models.ApplicationDbContext"/>.</param>
        </member>
        <member name="P:BlueDeck.Persistence.Repositories.PositionRepository.ApplicationDbContext">
            <summary>
            Gets the application database context.
            </summary>
            <value>
            The application database context.
            </value>
        </member>
        <member name="M:BlueDeck.Persistence.Repositories.PositionRepository.GetPositionsWithMembers">
            <summary>
            Gets the Positions with their Members.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Persistence.Repositories.PositionRepository.RemovePositionAndReassignMembers(System.Int32,System.String)">
            <summary>
            Removes the position and reassigns any members.
            </summary>
            <param name="id">The identifier.</param>
            <param name="newPositionName">New name of the position.</param>
        </member>
        <member name="T:BlueDeck.Persistence.Repositories.Repository`1">
            <summary>
            Represents CRUD actions common to DbContext entities
            </summary>
            <typeparam name="TEntity">The type of the entity.</typeparam>
            <seealso cref="T:BlueDeck.Models.Repositories.IRepository`1" />
        </member>
        <member name="F:BlueDeck.Persistence.Repositories.Repository`1.Context">
            <summary>
            An <see cref="T:Microsoft.EntityFrameworkCore.DbContext"/> context
            </summary>
        </member>
        <member name="M:BlueDeck.Persistence.Repositories.Repository`1.#ctor(Microsoft.EntityFrameworkCore.DbContext)">
            <summary>
            Initializes a new instance of the <see cref="T:BlueDeck.Persistence.Repositories.Repository`1"/> class.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:BlueDeck.Persistence.Repositories.Repository`1.Get(System.Int32)">
            <summary>
            Gets the Entity with the given identifier.
            </summary>
            <param name="id">The identifier for the desired entity.</param>
            <returns>
            A <see cref="!:TEntity" />
            </returns>
        </member>
        <member name="M:BlueDeck.Persistence.Repositories.Repository`1.GetAll">
            <summary>
            Gets Entities in the Repository
            </summary>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of the Entity.
            </returns>
        </member>
        <member name="M:BlueDeck.Persistence.Repositories.Repository`1.Find(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Finds the Entities that match the specified predicate.
            </summary>
            <param name="predicate">The predicate LINQ Lambda Expression delegate.</param>
            <returns>
            An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of the Entity.
            </returns>
            <remarks>
            This Method can accept LINQ Lambda Expression delegates
            </remarks>
        </member>
        <member name="M:BlueDeck.Persistence.Repositories.Repository`1.SingleOrDefault(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Finds a Single Entity based on the predicate.
            </summary>
            <param name="predicate">The predicate LINQ Lambda Expression delegate.</param>
            <returns>
            A <see cref="!:TEntity" />
            </returns>
            <remarks>
            This Method can accept LINQ Lambda Expression delegates
            </remarks>
        </member>
        <member name="M:BlueDeck.Persistence.Repositories.Repository`1.Add(`0)">
            <summary>
            Adds the specified entity.
            </summary>
            <param name="entity">The Entity to add.</param>
        </member>
        <member name="M:BlueDeck.Persistence.Repositories.Repository`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Adds a range of Entities.
            </summary>
            <param name="entities">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of entities to add.</param>
        </member>
        <member name="M:BlueDeck.Persistence.Repositories.Repository`1.Remove(`0)">
            <summary>
            Removes the specified entity.
            </summary>
            <param name="entity">The <see cref="!:TEntity" /> to add.</param>
        </member>
        <member name="M:BlueDeck.Persistence.Repositories.Repository`1.RemoveRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Removes a range of <see cref="!:TEntity" />.
            </summary>
            <param name="entities">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> of entities to remove.</param>
        </member>
        <member name="T:BlueDeck.Persistence.UnitOfWork">
            <summary>
            An instance of <see cref="T:BlueDeck.Models.IUnitOfWork"/>
            </summary>
            <seealso cref="T:BlueDeck.Models.IUnitOfWork" />
        </member>
        <member name="M:BlueDeck.Persistence.UnitOfWork.#ctor(BlueDeck.Models.ApplicationDbContext)">
            <summary>
            Initializes a new instance of the <see cref="T:BlueDeck.Persistence.UnitOfWork"/> class.
            </summary>
            <param name="context">An <see cref="T:BlueDeck.Models.ApplicationDbContext"/>.</param>
        </member>
        <member name="P:BlueDeck.Persistence.UnitOfWork.Positions">
            <summary>
            Gets an <see cref="T:BlueDeck.Models.Repositories.IPositionRepository" />
            </summary>
            <value>
            The Interface representing the Position Entity.
            </value>
            <seealso cref="T:BlueDeck.Models.Repositories.IPositionRepository" />
        </member>
        <member name="P:BlueDeck.Persistence.UnitOfWork.Components">
            <summary>
            Gets an <see cref="T:BlueDeck.Models.Repositories.IComponentRepository" />
            </summary>
            <value>
            The Interface representing the Component Entity.
            </value>
            <seealso cref="T:BlueDeck.Models.Repositories.IComponentRepository" />
        </member>
        <member name="P:BlueDeck.Persistence.UnitOfWork.Members">
            <summary>
            Gets an <see cref="T:BlueDeck.Models.Repositories.IMemberRepository" />
            </summary>
            <value>
            The Interface representing the Member Entity.
            </value>
            <seealso cref="T:BlueDeck.Models.Repositories.IMemberRepository" />
        </member>
        <member name="P:BlueDeck.Persistence.UnitOfWork.MemberRanks">
            <summary>
            Gets an <see cref="T:BlueDeck.Models.Repositories.IMemberRankRepository" />
            </summary>
            <value>
            The Interface representing the MemberRanks Entity.
            </value>
            <seealso cref="T:BlueDeck.Models.Repositories.IMemberRankRepository" />
        </member>
        <member name="P:BlueDeck.Persistence.UnitOfWork.MemberGenders">
            <summary>
            Gets an <see cref="T:BlueDeck.Models.Repositories.IMemberGenderRepository" />
            </summary>
            <value>
            The Interface representing the MemberGender Entity.
            </value>
            <seealso cref="T:BlueDeck.Models.Repositories.IMemberGenderRepository" />
        </member>
        <member name="P:BlueDeck.Persistence.UnitOfWork.MemberRaces">
            <summary>
            Gets an <see cref="T:BlueDeck.Models.Repositories.IMemberRaceRepository" />
            </summary>
            <value>
            The Interface representing the MemberRace Entity.
            </value>
            <seealso cref="T:BlueDeck.Models.Repositories.IMemberRaceRepository" />
        </member>
        <member name="P:BlueDeck.Persistence.UnitOfWork.MemberDutyStatus">
            <summary>
            Gets an <see cref="T:BlueDeck.Models.Repositories.IMemberDutyStatusRepository" />
            </summary>
            <value>
            The Interface representing the MemberRace Entity.
            </value>
            <seealso cref="T:BlueDeck.Models.Repositories.IMemberDutyStatusRepository" />
        </member>
        <member name="P:BlueDeck.Persistence.UnitOfWork.MemberContactNumbers">
            <summary>
            Gets an <see cref="T:BlueDeck.Models.Repositories.IMemberContactNumberRepository" />
            </summary>
            <value>
            The Interface representing the MemberContactNumber Entity.
            </value>
            <seealso cref="T:BlueDeck.Models.Repositories.IMemberContactNumberRepository" />
        </member>
        <member name="P:BlueDeck.Persistence.UnitOfWork.PhoneNumberTypes">
            <summary>
            Gets an <see cref="T:BlueDeck.Models.Repositories.IPhoneNumberTypeRepository" />
            </summary>
            <value>
            The Interface representing the PhoneNumberType Entity.
            </value>
            <seealso cref="T:BlueDeck.Models.Repositories.IPhoneNumberTypeRepository" />
        </member>
        <member name="P:BlueDeck.Persistence.UnitOfWork.AppStatuses">
            <summary>
            Gets an <see cref="T:BlueDeck.Models.Repositories.IAppStatusRepository" />
            </summary>
            <value>
            The Interface representing the AppStatus Entity.
            </value>
            <seealso cref="T:BlueDeck.Models.Repositories.IAppStatusRepository" />
        </member>
        <member name="P:BlueDeck.Persistence.UnitOfWork.RoleTypes">
            <summary>
            Gets an <see cref="T:BlueDeck.Models.Repositories.IMemberRoleTypeRepository" />
            </summary>
            <value>
            The Interface representing the RoleType Entity.
            </value>
            <seealso cref="T:BlueDeck.Models.Repositories.IMemberRoleTypeRepository" />
        </member>
        <member name="M:BlueDeck.Persistence.UnitOfWork.Complete">
            <summary>
            Saves changes made in the Unit of Work to ensure consistent updates
            </summary>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Persistence.UnitOfWork.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:BlueDeck.Program">
            <summary>
            Program Starting Routine
            </summary>
        </member>
        <member name="M:BlueDeck.Program.Main(System.String[])">
            <summary>
            Defines the entry point of the application.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:BlueDeck.Program.CreateWebHostBuilder(System.String[])">
            <summary>
            Creates the web host builder.
            </summary>
            <param name="args">The arguments.</param>
            <returns></returns>
        </member>
        <member name="T:BlueDeck.Startup">
            <summary>
            Startup Class
            </summary>
        </member>
        <member name="M:BlueDeck.Startup.#ctor(Microsoft.AspNetCore.Hosting.IHostingEnvironment)">
            <summary>
            Initializes a new instance of the <see cref="T:BlueDeck.Startup"/> class.
            </summary>
            <param name="env">An <see cref="T:Microsoft.AspNetCore.Hosting.IHostingEnvironment"/> object.</param>
        </member>
        <member name="M:BlueDeck.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            This method gets called by the runtime. Use this method to add services to the container.
            For more information on how to configure your application, visit https://go.microsoft.com/fwlink/?LinkID=398940   
            </summary>
            <param name="services">An <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></param>
        </member>
        <member name="M:BlueDeck.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IHostingEnvironment)">
            <summary>
            This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
            </summary>
            <param name="app">An <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/> object.</param>
            <param name="env">An <see cref="T:Microsoft.AspNetCore.Hosting.IHostingEnvironment"/> object.</param>
        </member>
        <member name="T:BlueDeck.ViewComponents.NavigationMenuViewComponent">
            <summary>
            A ViewComponent that renders the Navigation Sidebar
            </summary>
            <seealso cref="T:Microsoft.AspNetCore.Mvc.ViewComponent" />
        </member>
        <member name="M:BlueDeck.ViewComponents.NavigationMenuViewComponent.Invoke">
            <summary>
            Invokes the default <see cref="T:BlueDeck.ViewComponents.NavigationMenuViewComponent" />
            </summary>
            <returns></returns>              
        </member>
    </members>
</doc>
