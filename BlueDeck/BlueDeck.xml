<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BlueDeck</name>
    </assembly>
    <members>
        <member name="M:BlueDeck.Controllers.ComponentsApiController.GetComponents">
            <summary>
            Gets a List of Component Names/Ids of all Components
            </summary>
            <remarks>
            Sample request:
            
                GET /ComponentApi/GetAll
                {
                    {
                        name : "District I",
                        componentId : "1"
                    },
                    {
                        name : "Automotive Services",
                        componentId : "2"
                    }
                }
                    
            Use this method to retrieve the Component Id of a Component by the Component's name.
            </remarks>
            <returns>A list of Component Names/Ids of all current Component</returns>
            <response code="200">Returns a JSON object containing all current Component</response>
        </member>
        <member name="M:BlueDeck.Controllers.ComponentsApiController.SearchComponents(System.String)">
            <summary>
            Searches for a Component whose Name or Acronym matches the provided search string.
            </summary>
            <remarks>
            Sample Request
            
                GET /ComponentApi/SearchComponents/Example
                {
                    {
                        name : "Example District",
                        componentId : "1"
                    },
                    {
                        name : "Example Office of Administration",
                        componentId : "4"
                    }
                }
            </remarks>
            <param name="searchString">The search string.</param>
            <returns>A list of Components that match the search string</returns>
            <response code="200">Returns a list of Components that match the search string</response>
            <response code="400">No Components match the search string</response>
        </member>
        <member name="M:BlueDeck.Controllers.ComponentsApiController.GetComponent(System.Int32)">
            <summary>
            Gets detailed information for a specific Component by Id.
            </summary>
            <remarks>
            Sample request:
            
                GET /ComponentApi/GetComponent/1
                
            </remarks>
            <param name="id">The Component Id of the Component.</param>
            <returns>A collection of detailed information for the Component with the provided Component Id</returns>
            <response code="200">Detailed information for the Component with the provided Component Id</response>
            <response code="400">No Component with the provided Component Id was found</response>
        </member>
        <member name="T:BlueDeck.Controllers.ComponentsController">
            <summary>
            Controller for Component CRUD actions
            </summary>
            <seealso cref="T:Microsoft.AspNetCore.Mvc.Controller" />
        </member>
        <member name="M:BlueDeck.Controllers.ComponentsController.#ctor(BlueDeck.Models.IUnitOfWork)">
            <summary>
            Initializes a new instance of the <see cref="T:BlueDeck.Controllers.ComponentsController"/> class.
            </summary>
            <param name="unit"><see cref="T:BlueDeck.Persistence.UnitOfWork"/>.</param>
        </member>
        <member name="M:BlueDeck.Controllers.ComponentsController.Index(System.String,System.String,System.Int32)">
            <summary>
            GET: Components
            </summary>
            <remarks>
            This View requires an <see cref="T:IEnumerable{T}"/> list of <see cref="T:BlueDeck.Models.ViewModels.ComponentIndexListViewModel"/>
            </remarks>
            <permission>
            Any authenticated User can view the Component Index. Auth is handled via Windows. The Components/Index.cshtml view contains
            logic that restricts the rendering of hyperlinks to Add/Edit/Delete Components from the rendered Index List.
            </permission>
            <param name="sortOrder">The sort order.</param>
            <param name="searchString">The search string.</param>
            <returns>An <see cref="T:IActionResult"/></returns>
        </member>
        <member name="M:BlueDeck.Controllers.ComponentsController.Details(System.Nullable{System.Int32},System.String)">
            <summary>
            GET: Components/Details/5.
            </summary>
            <param name="id">The identifier for a Component.</param>
            <returns>An <see cref="T:IActionResult"/></returns>
        </member>
        <member name="M:BlueDeck.Controllers.ComponentsController.Create(System.String)">
            <summary>
            GET: Component/Create.
            </summary>
            <returns>An <see cref="T:IActionResult"/></returns>
        </member>
        <member name="M:BlueDeck.Controllers.ComponentsController.Create(BlueDeck.Models.ViewModels.ComponentWithComponentListViewModel,System.String)">
            <summary>
            POST: Components/Create.
            </summary>
            <param name="form">A <see cref="T:BlueDeck.Models.ViewModels.ComponentWithComponentListViewModel"/> with certain fields bound on submit</param>
            <returns>An <see cref="T:IActionResult"/></returns>
        </member>
        <member name="M:BlueDeck.Controllers.ComponentsController.Edit(System.Nullable{System.Int32},System.String)">
            <summary>
            Components/Edit/5
            </summary>
            <param name="id"></param>
            <returns>An <see cref="T:IActionResult"/></returns>
        </member>
        <member name="M:BlueDeck.Controllers.ComponentsController.Edit(System.Int32,BlueDeck.Models.ViewModels.ComponentWithComponentListViewModel,System.String)">
            <summary>
            POST: Components/Edit/5
            </summary>
            <param name="id">The ComponentId for the <see cref="T:BlueDeck.Models.Component"/> being edited</param>
            <param name="form">The <see cref="T:BlueDeck.Models.ViewModels.ComponentWithComponentListViewModel"/> object to which the POSTed form is Bound</param>
            <returns>An <see cref="T:IActionResult"/></returns>
        </member>
        <member name="M:BlueDeck.Controllers.ComponentsController.Delete(System.Nullable{System.Int32},System.String)">
            <summary>
            GET: Components/Delete/5
            </summary>
            <param name="id">The ComponentId of the <see cref="T:BlueDeck.Models.Component"/> being deleted</param>
            <returns>An <see cref="T:IActionResult"/></returns>
        </member>
        <member name="M:BlueDeck.Controllers.ComponentsController.DeleteConfirmed(System.Int32,System.String)">
            <summary>
            POST: Components/Delete/5
            </summary>
            <param name="id">The ComponentId of the <see cref="T:BlueDeck.Models.Component"/> being deleted</param>
            <returns>An <see cref="T:IActionResult"/></returns>
        </member>
        <member name="M:BlueDeck.Controllers.ComponentsController.ComponentExists(System.Int32)">
            <summary>
            Determines if a Component exists with the provided ComponentId .
            </summary>
            <param name="id">The ComponentId of the <see cref="T:BlueDeck.Models.Component"/></param>
            <returns>An <see cref="T:IActionResult"/></returns>
        </member>
        <member name="M:BlueDeck.Controllers.EnumsApiController.GetAll">
            <summary>
            Gets a List of all BlueDeck enumberable types
            </summary>
            <remarks>
            Sample request:
            
                GET /EnumsApi/GetAll
                {
                    "genders": [
                        {
                            "genderId": 1,
                            "genderFullName": "Unknown",
                            "abbreviation": "U",
                            "members": null
                        },
                        {
                            "genderId": 2,
                            "genderFullName": "Male",
                            "abbreviation": "M",
                            "members": null
                        }
                    ],
                    "ranks": [
                        {
                            "rankId": 1,
                            "rankFullName": "Police Officer",
                            "rankShort": "P/O",
                            "payGrade": "L01",
                            "isSworn": true,
                            "members": null
                        },
                        {
                            "rankId": 2,
                            "rankFullName": "Police Officer First Class",
                            "rankShort": "POFC",
                            "payGrade": "L02",
                            "isSworn": true,
                            "members": null
                        }
                    ],
                    ...              
                }
                    
            Use this method to retrieve a collection of all BlueDeck Enumerable types
            </remarks>
            <returns>A collection of all BlueDeck Enumerable types</returns>
            <response code="200">Returns a JSON object containing all BlueDeck Enumerable types</response>
        </member>
        <member name="M:BlueDeck.Controllers.MembersApiController.GetMembers">
            <summary>
            Gets a List of Member Names/BlueDeck Ids of all Members
            </summary>
            <remarks>
            Sample request:
            
                GET /MembersApi/GetAll
                {
                    {
                        name : "Bob Jones",
                        blueDeckId : "1"
                    },
                    {
                        name : "Steve Johnson",
                        blueDeckId : "2"
                    }
                }
                    
            Use this method to retrieve the BlueDeck Id of a member by the Member's name.
            </remarks>
            <returns>A list of Member Names/BlueDeck Ids of all current Members</returns>
            <response code="200">Returns a JSON object containing all current Members</response>
        </member>
        <member name="M:BlueDeck.Controllers.MembersApiController.SearchMembers(System.String)">
            <summary>
            Searches for a member whose First Name, Last Name, or PGPD ID# matches the provided search string.
            </summary>
            <remarks>
            Sample Request
            
                GET /MembersApi/SearchMembers/smith
                {
                    {
                        name : "Bob Smith",
                        blueDeckId : "1"
                    },
                    {
                        name : "John Smith",
                        blueDeckId : "4"
                    }
                }
            </remarks>
            <param name="searchString">The search string.</param>
            <returns>A list of Members that match the search string</returns>
            <response code="200">Returns a list of Members that match the search string</response>
            <response code="400">No members match the search string</response>
        </member>
        <member name="M:BlueDeck.Controllers.MembersApiController.GetMember(System.Int32)">
            <summary>
            Gets detailed information for a specific member by BlueDeck Id.
            </summary>
            <remarks>
            Sample request:
            
                GET /MembersApi/GetMember/1
                {
                    "memberId": 1,
                    "firstName": "John",
                    "lastName": "Smith",
                    "pgpdId": "1234",
                    "email": "example@email.com",
                    "contactNumbers": [
                        {
                            "type": "Cell (Personal)",
                            "phoneNumber": "(123) 456-7890"
                        }
                    ],
                    "rank": {
                        "rankName": "Lieutenant",
                        "rankShort": "Lt.",
                        "payGrade": "L05",
                        "isSworn": true
                    },
                    "gender": {
                        "name": "Male",
                        "abbreviation": "M"
                    },
                    "race": {
                        "name": "White",
                        "abbreviation": "W"
                    },
                    "dutyStatus": {
                        "name": "Full Duty",
                        "abbreviation": "F",
                        "hasPolicePower": true
                    },
                    "position": {
                        "positionId": 13,
                        "name": "Assistant District Commander, District I",
                        "isManager": true,
                        "isUnique": true,
                        "callsign": null,
                    },
                    "supervisor": {
                        "memberId": 1234,
                        "firstName": "Judy",
                        "lastName": "Johnson",
                        "pgpdId": "4321",
                        "email": "example2@email.net",
                        "contactNumbers": [
                            {
                                "type": "Cell (Work)",
                                "phoneNumber": "(123) 456-7890"
                            }
                        ],
                        "rank": {
                            "rankName": "Captain",
                            "rankShort": "Capt.",
                            "payGrade": "L06",
                            "isSworn": true
                        },
                        "gender": {
                            "name": "Female",
                            "abbreviation": "F"
                        },
                        "race": {
                            "name": "White",
                            "abbreviation": "W"
                        },
                        "dutyStatus": {
                            "name": "Full Duty",
                            "abbreviation": "F",
                            "hasPolicePower": true
                        },
                        "position": {
                            "positionId": 12,
                            "name": "Commander, District I",
                            "isManager": true,
                            "isUnique": true,
                            "callsign": "CAR-11",
                            "component": {
                                "componentId": null,
                                "name": "",
                                "acronym": "",
                                "parentComponent": null
                            }
                        },
                        "supervisor": null
                    }
                } 
                
            </remarks>
            <param name="id">The BlueDeck Id of the member.</param>
            <returns>A collection of detailed information for the Member with the provided BlueDeckId</returns>
            <response code="200">Detailed information for the Member with the provided BlueDeckId</response>
            <response code="400">No member with the provided BlueDeck Id was found</response>
        </member>
        <member name="T:BlueDeck.Controllers.MembersController">
            <summary>
            Controller for Member CRUD actions
            </summary>
            <seealso cref="T:Microsoft.AspNetCore.Mvc.Controller" />
        </member>
        <member name="M:BlueDeck.Controllers.MembersController.#ctor(BlueDeck.Models.IUnitOfWork)">
            <summary>
            Initializes a new instance of the <see cref="T:BlueDeck.Controllers.MembersController"/> class.
            </summary>
            <param name="unit">A Dependency-Injected IUnitOfWork object.<see cref="T:BlueDeck.Persistence.UnitOfWork"/>.</param>
        </member>
        <member name="M:BlueDeck.Controllers.MembersController.Index(System.String,System.String,System.Int32)">
            <summary>
            GET: Members
            </summary>
            <remarks>        
            </remarks>
            <returns>An <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/></returns>
        </member>
        <member name="M:BlueDeck.Controllers.MembersController.Details(System.Nullable{System.Int32},System.String)">
            <summary>
            GET: Members/Details/5.
            </summary>
            <param name="id">The identifier for a Member.</param>
            <returns>An <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/></returns>
        </member>
        <member name="M:BlueDeck.Controllers.MembersController.Create(System.String)">
            <summary>
            GET: Members/Create.
            </summary>
            <returns>An <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/></returns>
        </member>
        <member name="M:BlueDeck.Controllers.MembersController.Create(BlueDeck.Models.ViewModels.MemberAddEditViewModel,System.String)">
            <summary>
            POST: Members/Create.
            </summary>
            <param name="form">A <see cref="T:BlueDeck.Models.ViewModels.MemberAddEditViewModel"/> with certain fields bound on submit</param>
            <returns>An <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/></returns>
        </member>
        <member name="M:BlueDeck.Controllers.MembersController.Edit(System.Nullable{System.Int32},System.String)">
            <summary>
            Members/Edit/5
            </summary>
            <param name="id"></param>
            <returns>An <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/></returns>
        </member>
        <member name="M:BlueDeck.Controllers.MembersController.Edit(System.Int32,BlueDeck.Models.ViewModels.MemberAddEditViewModel,System.String)">
            <summary>
            POST: Members/Edit/5
            </summary>
            <param name="id">The MemberId for the <see cref="T:BlueDeck.Models.Member"/> being edited</param>
            <param name="form">The <see cref="T:BlueDeck.Models.ViewModels.MemberAddEditViewModel"/> object to which the POSTed form is Bound</param>
            <returns>An <see cref="T:IActionResult"/></returns>
        </member>
        <member name="M:BlueDeck.Controllers.MembersController.Delete(System.Nullable{System.Int32},System.String)">
            <summary>
            GET: Member/Delete/5
            </summary>
            <param name="id">The MemberId of the <see cref="T:BlueDeck.Models.Member"/> being deleted</param>
            <returns>An <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/> that prompts the user to confirm the deletion of the Member with the given id</returns>
        </member>
        <member name="M:BlueDeck.Controllers.MembersController.DeleteConfirmed(System.Int32,System.String)">
            <summary>
            POST: Members/Delete/5
            </summary>
            <param name="id">The MemberId of the <see cref="T:BlueDeck.Models.Member"/> being deleted</param>
            <returns>An <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/> that redirects to <see cref="M:BlueDeck.Controllers.MembersController.Index(System.String,System.String,System.Int32)"/> on successful deletion of a Member.</returns>
        </member>
        <member name="M:BlueDeck.Controllers.MembersController.MemberExists(System.Int32)">
            <summary>
            Determines if a Member exists with the provided MemberId .
            </summary>
            <param name="id">The MemberId of the <see cref="T:BlueDeck.Models.Member"/></param>
            <returns>True if a <see cref="T:BlueDeck.Models.Member"/> with the given id exists</returns>
        </member>
        <member name="M:BlueDeck.Controllers.MembersController.GetMemberContactNumberViewComponent(System.Int32)">
            <summary>
            Gets the member contact number view component.
            </summary>
            <remarks>
            This View Component is used to add Phone Numbers in the Members/Edit and Member/Edit Modal Views
            </remarks>
            <param name="memberId">The member identifier.</param>
            <returns></returns>
        </member>
        <member name="T:BlueDeck.Controllers.OrgChartController">
            <summary>
            Serves Views and data that renders in <a href="http://www.getorgchart.com/Documentation#separationMixedHierarchyNodes" >GetOrgChart</a> Plugin
            </summary>
            <seealso cref="T:Microsoft.AspNetCore.Mvc.Controller" />
        </member>
        <member name="M:BlueDeck.Controllers.OrgChartController.#ctor(BlueDeck.Models.IUnitOfWork)">
            <summary>
            Initializes a new instance of the <see cref="T:BlueDeck.Controllers.HomeController"/> class.
            </summary>
            <param name="unit">An <see cref="T:BlueDeck.Models.IUnitOfWork"/></param>
        </member>
        <member name="M:BlueDeck.Controllers.OrgChartController.GetComponents(System.Int32)">
            <summary>
            Gets the components. (async, JSON result from the GetOrgChart JQuery Library
            </summary>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Controllers.OrgChartController.Index(System.Nullable{System.Int32})">
            <summary>
            GET /OrgChart/
            </summary>
            <returns>An <see cref="T:IActionResult"/></returns>
        </member>
        <member name="M:BlueDeck.Controllers.PositionsApiController.GetPositions">
            <summary>
            Gets a List of Position Names/Ids of all Positions
            </summary>
            <remarks>
            Sample request:
            
                GET /PositionsApi/GetAll
                {
                    {
                        positionId : "1",
                        name : "Squad 1 OIC"
                    },
                    {
                        positionId : "2",
                        name : "Shift 1 Commander"            
                    }
                }
                    
            Use this method to retrieve the Position Id of a position by the Position's name.
            </remarks>
            <returns>A list of Position Names/Ids of all current Positions</returns>
            <response code="200">Returns a JSON object containing all current Positions</response>
        </member>
        <member name="M:BlueDeck.Controllers.PositionsApiController.SearchPositions(System.String)">
            <summary>
            Searches for a Position whose name or callsign matches the provided search string.
            </summary>
            <remarks>
            Sample Request
            
                GET /PositionsApi/SearchPositions/District I
                {
                    {
                        positionId : "1",
                        name : "District I Commander"
                    },
                    {
                        positionId : "2",
                        name : "District I, Shift I Commander"            
                    }
                }
            </remarks>
            <param name="searchString">The search string.</param>
            <returns>A list of Positions that match the search string</returns>
            <response code="200">Returns a list of Positions that match the search string</response>
            <response code="400">No Positions match the search string</response>
        </member>
        <member name="M:BlueDeck.Controllers.PositionsApiController.GetPosition(System.Int32)">
            <summary>
            Gets detailed information for a specific Position by BlueDeck Id.
            </summary>
            <remarks>
            Sample request:
            
                GET /PositionsApi/GetPosition/10
                {
                    "positionId": 10,
                    "name": "OIC, Squad 1",
                    "isManager": true,
                    "isUnique": true,
                    "callsign": "BAKER-10",
                    "component": {
                    "componentId": 84,
                    "name": "Squad 1",
                    "acronym": "NULL"
                     },
                    "members": [
                        {
                            "memberId": 1234,
                            "firstName": "John",
                            "lastName": "Smith",
                            "pgpdId": "4321",
                            "email": "example@mail.com",
                            "contactNumbers": [],
                            "rank": {
                                "rankName": "Sergeant",
                                "rankShort": "Sgt.",
                                "payGrade": "L04",
                                "isSworn": true
                            },
                            "gender": {
                                "name": "Male",
                                "abbreviation": "M"
                            },
                            "race": {
                                "name": "Black",
                                "abbreviation": "B"
                            },
                            "dutyStatus": {
                                "name": "Full Duty",
                                "abbreviation": "F",
                                "hasPolicePower": true
                            }
                        }
                    ]
                }
                
            </remarks>
            <param name="id">The Position Id of the Position.</param>
            <returns>A collection of detailed information for the Position with the provided PositionId</returns>
            <response code="200">Detailed information for the Positionwith the provided PositionId</response>
            <response code="400">No Position with the provided Position Id was found</response>
        </member>
        <member name="T:BlueDeck.Controllers.PositionsController">
            <summary>
            Controller for Position CRUD actions
            </summary>
            <seealso cref="T:Microsoft.AspNetCore.Mvc.Controller" />
        </member>
        <member name="M:BlueDeck.Controllers.PositionsController.#ctor(BlueDeck.Models.IUnitOfWork)">
            <summary>
            Initializes a new instance of the <see cref="T:BlueDeck.Controllers.PositionsController"/> class.
            </summary>
            <param name="unit"><see cref="T:BlueDeck.Persistence.UnitOfWork"/>.</param>
        </member>
        <member name="M:BlueDeck.Controllers.PositionsController.Index(System.String,System.String,System.Int32)">
            <summary>
            GET: Positions
            </summary>
            <remarks>
            This View requires an <see cref="T:IEnumerable{T}"/> list of <see cref="T:BlueDeck.Models.ViewModels.PositionWithMemberCountItem"/>
            </remarks>
            <returns>An <see cref="T:IActionResult"/></returns>
        </member>
        <member name="M:BlueDeck.Controllers.PositionsController.Details(System.Nullable{System.Int32},System.String)">
            <summary>
            GET: Positions/Details/5.
            </summary>
            <param name="id">The identifier for a Position.</param>
            <returns>An <see cref="T:IActionResult"/></returns>
        </member>
        <member name="M:BlueDeck.Controllers.PositionsController.Create(System.String)">
            <summary>
            GET: Positions/Create.
            </summary>
            <returns>An <see cref="T:IActionResult"/></returns>
        </member>
        <member name="M:BlueDeck.Controllers.PositionsController.Create(BlueDeck.Models.ViewModels.PositionWithComponentListViewModel,System.String)">
            <summary>
            POST: Positions/Create.
            </summary>
            <param name="form">A <see cref="T:BlueDeck.Models.ViewModels.PositionWithComponentListViewModel"/> with certain fields bound on submit</param>
            <returns>An <see cref="T:IActionResult"/></returns>
        </member>
        <member name="M:BlueDeck.Controllers.PositionsController.Edit(System.Nullable{System.Int32},System.String)">
            <summary>
            Positions/Edit/5
            </summary>
            <param name="id"></param>
            <returns>An <see cref="T:IActionResult"/></returns>
        </member>
        <member name="M:BlueDeck.Controllers.PositionsController.Edit(System.Int32,BlueDeck.Models.ViewModels.PositionWithComponentListViewModel,System.String)">
            <summary>
            POST: Positions/Edit/5
            </summary>
            <param name="id">The PositionId for the <see cref="T:BlueDeck.Models.Position"/> being edited</param>
            <param name="form">The <see cref="T:BlueDeck.Models.ViewModels.PositionWithComponentListViewModel"/> object to which the POSTed form is Bound</param>
            <returns>An <see cref="T:IActionResult"/></returns>
        </member>
        <member name="M:BlueDeck.Controllers.PositionsController.Delete(System.Nullable{System.Int32},System.String)">
            <summary>
            GET: Positions/Delete/5
            </summary>
            <param name="id">The PositionId of the <see cref="T:BlueDeck.Models.Position"/> being deleted</param>
            <returns>An <see cref="T:IActionResult"/></returns>
        </member>
        <member name="M:BlueDeck.Controllers.PositionsController.DeleteConfirmed(System.Int32,System.String)">
            TODO: PositionsController: Handle Deleting a Position with members? Move all to Unassigned?
            <summary>
            POST: Positions/Delete/5
            </summary>
            <param name="id">The PositionId of the <see cref="T:BlueDeck.Models.Position"/> being deleted</param>
            <returns>An <see cref="T:IActionResult"/> that redirects to <see cref="T:BlueDeck.Controllers.PositionsController.Index"/> on successful deletion of a Position.</returns>
        </member>
        <member name="M:BlueDeck.Controllers.PositionsController.PositionExists(System.Int32)">
            <summary>
            Determines if a Position exists with the provided PositionId .
            </summary>
            <param name="id">The PositionId of the <see cref="T:BlueDeck.Models.Position"/></param>
            <returns>True if a <see cref="T:BlueDeck.Models.Position"/> with the given id exists</returns>
        </member>
        <member name="M:BlueDeck.Controllers.RosterController.#ctor(BlueDeck.Models.IUnitOfWork)">
            <summary>
            Initializes a new instance of the <see cref="T:BlueDeck.Controllers.RosterController"/> class.
            </summary>
            <param name="unit">An <see cref="T:BlueDeck.Models.IUnitOfWork"/></param>
        </member>
        <member name="M:BlueDeck.Controllers.RosterController.ReassignMember(System.Int32,System.Int32,System.Int32)">
            <summary>
            Reassigns the member to a new position.
            </summary>
            <remarks>
            This method is invoked via the View's Javascript when a member is Dragged/Dropped into a new position in the RosterManager
            </remarks>
            <param name="memberId">The MemberId of the member being reassigned.</param>
            <param name="positionId">The PositionId of the new position to which the member is to be assigned</param>
            <param name="selectedComponentId">The selected component identifier.</param>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Controllers.RosterController.GetRosterViewComponent(System.Int32)">
            <summary>
            Gets the RosterManager ViewComponent.
            </summary>
            <param name="componentId">The ComponentId of the top-level component</param>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Controllers.RosterController.GetReassignMemberViewComponent(System.Int32,System.Int32)">
            <summary>
            Gets the ReassignEmployee ViewComponent.
            </summary>
            <param name="memberId">The MemberId of the Member being reassigned.</param>
            <param name="selectedComponentId">The ComponentId of the current top-level component shown in the RosterManager.</param>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Controllers.RosterController.ReassignMemberViaModal(BlueDeck.Models.ViewModels.ReassignEmployeeModalViewComponentViewModel)">
            <summary>
            Reassigns the member via POST from the ReassignMemberModal ViewComponent.
            </summary>
            <param name="form">A POSTed <see cref="T:BlueDeck.Models.ViewModels.ReassignEmployeeModalViewComponentViewModel"></see></param>
        </member>
        <member name="M:BlueDeck.Controllers.RosterController.GetAddPositionToComponentViewComponent(System.Int32,System.Nullable{System.Int32})">
            <summary>
            Gets the AddPositionToComponentViewComponent.
            </summary>
            <param name="componentId">The ComponentId of the Component to which a Position is being added</param>
            <returns>A <see cref="T:BlueDeck.ViewComponents.AddPositionToComponentViewComponent"/></returns>
        </member>
        <member name="M:BlueDeck.Controllers.RosterController.AddPositionToComponent(BlueDeck.Models.ViewModels.AddPositionToComponentViewComponentViewModel)">
            <summary>
            Adds a new Position to a Component via POST from the AddPositionToComponentViewComponent.
            </summary>
            <param name="form">The POSTed <see cref="T:BlueDeck.Models.ViewModels.AddPositionToComponentViewComponentViewModel"/></param>
            <returns></returns>
        </member>
        <member name="T:BlueDeck.Models.ApplicationDbContext">
            <summary>
            Entity Framework DbContext Class
            </summary>
            <seealso cref="T:Microsoft.EntityFrameworkCore.DbContext" />
        </member>
        <member name="M:BlueDeck.Models.ApplicationDbContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{BlueDeck.Models.ApplicationDbContext})">
            <summary>
            Initializes a new instance of the <see cref="T:BlueDeck.Models.ApplicationDbContext"/> class.
            </summary>
            <param name="options">A <see cref="T:Microsoft.EntityFrameWorkCore.DbContextOptions"/> of <see cref="T:BlueDeck.Models.ApplicationDbContext"/></param>
        </member>
        <member name="M:BlueDeck.Models.ApplicationDbContext.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BlueDeck.Models.ApplicationDbContext"/> class.
            </summary>
            <remarks>
            Parameterless Constructor
            </remarks>
        </member>
        <member name="P:BlueDeck.Models.ApplicationDbContext.Components">
            <summary>
            Gets or sets the Components.
            </summary>
            <value>
            A <see cref="T:Microsoft.EntityFrameWorkCore.DbSet{TEntity}"/> of <see cref="T:BlueDeck.Models.Component"/>s.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ApplicationDbContext.Members">
            <summary>
            Gets or sets the Members.
            </summary>
            <value>
            A <see cref="T:Microsoft.EntityFrameWorkCore.DbSet{TEntity}"/> of <see cref="T:BlueDeck.Models.Member"/>s
            </value>
        </member>
        <member name="P:BlueDeck.Models.ApplicationDbContext.Positions">
            <summary>
            Gets or sets the Positions.
            </summary>
            <value>
            A <see cref="T:Microsoft.EntityFrameWorkCore.DbSet{TEntity}"/> of <see cref="T:BlueDeck.Models.Position"/>s
            </value>
        </member>
        <member name="P:BlueDeck.Models.ApplicationDbContext.Ranks">
            <summary>
            Gets or sets the MemberRanks.
            </summary>
            <value>
            A <see cref="T:Microsoft.EntityFrameWorkCore.DbSet{TEntity}"/> of <see cref="T:BlueDeck.Models.MemberRank"/>s
            </value>
        </member>
        <member name="P:BlueDeck.Models.ApplicationDbContext.Races">
            <summary>
            Gets or sets the MemberRaces.
            </summary>
            <value>
            A <see cref="T:Microsoft.EntityFrameWorkCore.DbSet{TEntity}"/> of <see cref="T:BlueDeck.Models.MemberRace"/>s
            </value>
        </member>
        <member name="P:BlueDeck.Models.ApplicationDbContext.Genders">
            <summary>
            Gets or sets the MemberGenders.
            </summary>
            <value>
            A <see cref="T:Microsoft.EntityFrameWorkCore.DbSet{TEntity}"/> of <see cref="T:BlueDeck.Models.MemberGender"/>s
            </value>
        </member>
        <member name="P:BlueDeck.Models.ApplicationDbContext.DutyStatuses">
            <summary>
            Gets or sets the MemberGenders.
            </summary>
            <value>
            A <see cref="T:Microsoft.EntityFrameWorkCore.DbSet{TEntity}"/> of <see cref="T:BlueDeck.Models.MemberDutyStatus"/>s
            </value>
        </member>
        <member name="T:BlueDeck.Models.ChartableComponent">
            <summary>
            Base class for creating an Organization Chart using GetOrgChart
            </summary>
        </member>
        <member name="P:BlueDeck.Models.ChartableComponent.Id">
            <summary>
            Gets or sets the id.
            </summary>
            <value>
            The id of the component.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ChartableComponent.Parentid">
            <summary>
            Gets or sets the parentid. Combined with <see cref="T:BlueDeck.Models.ChartableComponent.Id"/>, this establishes the Child/Parent relationship for rendering using <a href="http://www.getorgchart.com/Documentation">GetOrgChart</a>.
            </summary>
            <value>
            The parentid of the component.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ChartableComponent.ComponentName">
            <summary>
            Gets or sets the name of the component.
            </summary>
            <value>
            The name of the component.
            </value>
        </member>
        <member name="T:BlueDeck.Models.ChartableComponentWithMember">
            <summary>
            An extension of <see cref="T:BlueDeck.Models.ChartableComponent"/> that adds additional display information to render in a <a href="http://www.getorgchart.com/Documentation">GetOrgChart</a> org chart.
            </summary>
            <remarks>
            This is not a direct representation of a <see cref="T:BlueDeck.Models.Component"/> entity. A <a href="http://www.getorgchart.com/Documentation">
            GetOrgChart</a> cannot render a component with multiple positions or multiple members.
            This class is used to map GetOrgChart Components, NOT domain <see cref="T:BlueDeck.Models.Component"/>s.
            When rendering <see cref="T:BlueDeck.Models.Member"/> information into GetOrgChart, an instance of this class will be generated for each.
            </remarks>
            <seealso cref="T:BlueDeck.Models.ChartableComponent" />
        </member>
        <member name="P:BlueDeck.Models.ChartableComponentWithMember.Id">
            <summary>
            Gets or sets the id.
            </summary>
            <value>
            The id of the component.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ChartableComponentWithMember.Parentid">
            <summary>
            Gets or sets the parentid. Combined with <see cref="T:BlueDeck.Models.ChartableComponent.Id"/>, this establishes the Child/Parent relationship for rendering using <a href="http://www.getorgchart.com/Documentation">GetOrgChart</a>.
            </summary>
            <value>
            The parentid of the component.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ChartableComponentWithMember.ComponentName">
            <summary>
            Gets or sets the name of the component.
            </summary>
            <value>
            The name of the component.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ChartableComponentWithMember.PositionId">
            <summary>
            Gets or sets the position id.
            </summary>
            <value>
            The position identifier.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ChartableComponentWithMember.PositionName">
            <summary>
            Gets or sets the name of the position.
            </summary>
            <value>
            The name of the position.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ChartableComponentWithMember.MemberId">
            <summary>
            Gets or sets the member identifier.
            </summary>
            <value>
            The member identifier.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ChartableComponentWithMember.MemberName">
            <summary>
            Gets or sets the name of the member.
            </summary>
            <value>
            The name of the member.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ChartableComponentWithMember.Email">
            <summary>
            Gets or sets the email.
            </summary>
            <value>
            The email.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ChartableComponentWithMember.ContactNumber">
            <summary>
            Gets or sets the contact number.
            </summary>
            <value>
            The contact number.
            </value>
        </member>
        <member name="T:BlueDeck.Models.Component">
            <summary>
            Component Entity
            </summary>
        </member>
        <member name="P:BlueDeck.Models.Component.ComponentId">
            <summary>
            Gets or sets the Component's Id (PK).
            </summary>
            <value>
            The Component's (PK) identifier.
            </value>
        </member>
        <member name="P:BlueDeck.Models.Component.ParentComponent">
            <summary>
            Gets or sets the component's parent <see cref="T:BlueDeck.Models.Component"/>.
            </summary>
            <value>
            The Component's parent <see cref="T:BlueDeck.Models.Component"/>
            </value>
        </member>
        <member name="P:BlueDeck.Models.Component.Name">
            <summary>
            Gets or sets the Component's name.
            </summary>
            <value>
            The name of the Component.
            </value>
        </member>
        <member name="P:BlueDeck.Models.Component.Acronym">
            <summary>
            Gets or sets the Component's acronym.
            </summary>
            <value>
            The acronym of the Component
            </value>        
        </member>
        <member name="P:BlueDeck.Models.Component.LineupPosition">
            <summary>
            Gets or sets the lineup position.
            </summary>
            <remarks>
            This property is used to control the order in which the component is displayed among it's sibling components
            </remarks>
            <value>
            The lineup position.
            </value>
        </member>
        <member name="P:BlueDeck.Models.Component.Positions">
            <summary>
            Gets or sets the list of the <see cref="T:BlueDeck.Models.Position"/>s assinged to this Component.
            </summary>
            <value>
            An <see cref="T:ICollection{T}"/> of <see cref="T:BlueDeck.Models.Position"/>s.
            </value>
        </member>
        <member name="M:BlueDeck.Models.DocGenerators.ComponentRosterGenerator.GenerateComponentTableHeaderRow(System.String,System.Int32)">
            <summary>
            Generates the Header Row for a Component Table.
            </summary>
            <param name="_componentName">Name of the component. This is required to populate the Table title and the link Bookmark</param>
            <param name="_componentId">The component id. This is required for the Table's BookMarkStart/End.</param>
            <returns></returns>
        </member>
        <member name="T:BlueDeck.Models.DutyStatus">
            <summary>
            A Class that represents a member's duty status.  Contains properties and methods used in displaying the duty status of a <see cref="T:BlueDeck.Models.Member"/>
            </summary>
        </member>
        <member name="P:BlueDeck.Models.DutyStatus.DutyStatusId">
            <summary>
            Gets or sets the duty status identifier.
            </summary>
            <value>
            The duty status identifier.
            </value>
        </member>
        <member name="P:BlueDeck.Models.DutyStatus.DutyStatusName">
            <summary>
            Gets or sets the name of the duty status.
            </summary>
            <value>
            The name of the duty status.
            </value>
        </member>
        <member name="P:BlueDeck.Models.DutyStatus.HasPolicePower">
            <summary>
            Gets or sets a value indicating whether this instance has police power.
            </summary>
            <value>
              <c>true</c> if this instance has police power; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:BlueDeck.Models.DutyStatus.Abbreviation">
            <summary>
            Gets or sets the abbreviation.
            </summary>
            <value>
            The abbreviation.
            </value>
        </member>
        <member name="T:BlueDeck.Models.ExtensionMethods.ExtensionMethods">
            <summary>
            Class containing custom extensions
            </summary>
        </member>
        <member name="M:BlueDeck.Models.ExtensionMethods.ExtensionMethods.Add``1(System.Collections.Generic.IEnumerable{``0},``0)">
            <summary>
            Adds the specified value to a <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </summary>
            <typeparam name="T">The type of Object in the <see cref="T:System.Collections.Generic.IEnumerable`1"/> to which you are adding.</typeparam>
            <param name="e">The <see cref="T:System.Collections.Generic.IEnumerable`1"/> to which you are adding.</param>
            <param name="value">The object of T type to add to the <see cref="T:System.Collections.Generic.IEnumerable`1"/>parameter.</param>
            <returns></returns>
        </member>
        <member name="T:BlueDeck.Models.Gender">
            <summary>
            A Class that represents a Gender.  Contains properties and methods used in displaying the gender of a <see cref="T:BlueDeck.Models.Member"/>
            </summary>
        </member>
        <member name="P:BlueDeck.Models.Gender.GenderId">
            <summary>
            Gets or sets the gender's Id.
            </summary>
            <value>
            The gender Id.
            </value>
        </member>
        <member name="P:BlueDeck.Models.Gender.GenderFullName">
            <summary>
            Gets or sets the full name of the gender.
            </summary>
            <value>
            The full name of the gender.
            </value>
        </member>
        <member name="P:BlueDeck.Models.Gender.Abbreviation">
            <summary>
            Gets or sets the gender's single-character abbreviation.
            </summary>
            <value>
            The gender's single-character abbreviation.
            </value>
        </member>
        <member name="T:BlueDeck.Models.IUnitOfWork">
            <summary>
            An interface that represents the encapsulated Entity Repository Interfaces 
            </summary>
            <seealso cref="T:System.IDisposable" />
            <seealso cref="T:BlueDeck.Models.Repositories.IPositionRepository"/>
            <seealso cref="T:BlueDeck.Models.Repositories.IComponentRepository"/>
            <seealso cref="T:BlueDeck.Models.Repositories.IMemberRepository"/>
            <seealso cref="T:BlueDeck.Models.Repositories.IMemberRankRepository"/> 
        </member>
        <member name="P:BlueDeck.Models.IUnitOfWork.Positions">
            <summary>
            Gets an <see cref="T:BlueDeck.Models.Repositories.IPositionRepository"/>
            </summary>
            <value>
            The Interface representing the Position Entity.
            </value>
            <seealso cref="T:BlueDeck.Models.Repositories.IPositionRepository"/>
        </member>
        <member name="P:BlueDeck.Models.IUnitOfWork.Components">
            <summary>
            Gets an <see cref="T:BlueDeck.Models.Repositories.IComponentRepository"/>
            </summary>
            <value>
            The Interface representing the Component Entity.
            </value>
            <seealso cref="T:BlueDeck.Models.Repositories.IComponentRepository"/>
        </member>
        <member name="P:BlueDeck.Models.IUnitOfWork.Members">
            <summary>
            Gets an <see cref="T:BlueDeck.Models.Repositories.IMemberRepository"/>
            </summary>
            <value>
            The Interface representing the Member Entity.
            </value>
            <seealso cref="T:BlueDeck.Models.Repositories.IMemberRepository"/>
        </member>
        <member name="P:BlueDeck.Models.IUnitOfWork.MemberRanks">
            <summary>
            Gets an <see cref="T:BlueDeck.Models.Repositories.IMemberRankRepository"/>
            </summary>
            <value>
            The Interface representing the MemberRanks Entity.
            </value>
            <seealso cref="T:BlueDeck.Models.Repositories.IPositionRepository"/>
        </member>
        <member name="P:BlueDeck.Models.IUnitOfWork.MemberGenders">
            <summary>
            Gets an <see cref="T:BlueDeck.Models.Repositories.IMemberGenderRepository"/>
            </summary>
            <value>
            The Interface representing the MemberGender Entity.
            </value>
            <seealso cref="T:BlueDeck.Models.Repositories.IMemberGenderRepository"/>
        </member>
        <member name="P:BlueDeck.Models.IUnitOfWork.MemberRaces">
            <summary>
            Gets an <see cref="T:BlueDeck.Models.Repositories.IMemberRaceRepository"/>
            </summary>
            <value>
            The Interface representing the MemberRace Entity.
            </value>
            <seealso cref="T:BlueDeck.Models.Repositories.IMemberRaceRepository"/>
        </member>
        <member name="P:BlueDeck.Models.IUnitOfWork.MemberDutyStatus">
            <summary>
            Gets an <see cref="T:BlueDeck.Models.Repositories.IMemberDutyStatusRepository"/>
            </summary>
            <value>
            The Interface representing the MemberRace Entity.
            </value>
            <seealso cref="T:BlueDeck.Models.Repositories.IMemberDutyStatusRepository"/>
        </member>
        <member name="M:BlueDeck.Models.IUnitOfWork.Complete">
            <summary>
            Saves changes made in the Unit of Work to ensure consistent updates
            </summary>
            <returns></returns>
        </member>
        <member name="T:BlueDeck.Models.Member">
            <summary>
            Member Entity
            </summary>
        </member>
        <member name="P:BlueDeck.Models.Member.MemberId">
            <summary>
            Gets or sets the Member's Id (PK).
            </summary>
            <value>
            The Member's Id (PK).
            </value>
        </member>
        <member name="P:BlueDeck.Models.Member.Rank">
            <summary>
            Gets or sets the Member's <see cref="P:BlueDeck.Models.Member.Rank"/>.
            </summary>
            <value>
            The <see cref="P:BlueDeck.Models.Member.Rank"/> of the Member
            </value>
        </member>
        <member name="P:BlueDeck.Models.Member.FirstName">
            <summary>
            Gets or sets the Member's first name.
            </summary>
            <value>
            The first name of the Member.
            </value>
        </member>
        <member name="P:BlueDeck.Models.Member.LastName">
            <summary>
            Gets or sets the Member's last name.
            </summary>
            <value>
            The last name of the Member.
            </value>
        </member>
        <member name="P:BlueDeck.Models.Member.MiddleName">
            <summary>
            Gets or sets the Member's middle name.
            </summary>
            <value>
            The name of the middle.
            </value>
        </member>
        <member name="P:BlueDeck.Models.Member.IdNumber">
            <summary>
            Gets or sets the Member's Departmental Id Number.
            </summary>
            <value>
            The Departmental Id Number of the Member.
            </value>
        </member>
        <member name="P:BlueDeck.Models.Member.Gender">
            <summary>
            Gets or sets the Member's gender.
            </summary>
            <value>
            The Member's gender.
            </value>
            <seealso cref="T:BlueDeck.Models.Types.MemberGender"/>
        </member>
        <member name="P:BlueDeck.Models.Member.Race">
            <summary>
            Gets or sets the Member's race.
            </summary>
            <value>
            The Member's race.
            </value>
            <seealso cref="T:BlueDeck.Models.Types.MemberRace"/>
        </member>
        <member name="P:BlueDeck.Models.Member.DutyStatus">
            <summary>
            Gets or sets the Member's duty status.
            </summary>
            <value>
            The Member's race.
            </value>
            <seealso cref="T:BlueDeck.Models.Types.MemberDutyStatus"/>
        </member>
        <member name="P:BlueDeck.Models.Member.Email">
            <summary>
            Gets or sets the Member's email.
            </summary>
            <value>
            The Member's email.
            </value>
        </member>
        <member name="P:BlueDeck.Models.Member.Position">
            <summary>
            Gets or sets the <see cref="P:BlueDeck.Models.Member.Position"/> to which the Member is assigned.
            </summary>
            <value>
            The position.
            </value>
        </member>
        <member name="M:BlueDeck.Models.Member.GetTitleName">
            <summary>
            Gets the formal title form of the Member's name and rank.
            </summary>
            <remarks>
            e.g. "POFC Foo Bar #1234"
            </remarks>
            <returns>A <see cref="T:System.String"/> with the formal display name for the Member</returns>
        </member>
        <member name="M:BlueDeck.Models.Member.GetLastNameFirstName">
            <summary>
            Gets the Member's name in "LastName, FirstName" format.
            </summary>
            <returns>A <see cref="T:System.String"/> with the Member's "LastName, FirstName"</returns>
        </member>
        <member name="T:BlueDeck.Models.Position">
            <summary>
            Position Entity
            </summary>
        </member>
        <member name="P:BlueDeck.Models.Position.PositionId">
            <summary>
            Gets or sets the position identifier.
            </summary>
            <value>
            The PositionId PK.
            </value>
        </member>
        <member name="P:BlueDeck.Models.Position.ParentComponent">
            <summary>
            Gets or sets the ParentComponentId.
            </summary>
            <value>
            The ComponentId (PK) of the Parent Component (FK)
            </value>
        </member>
        <member name="P:BlueDeck.Models.Position.Name">
            <summary>
            Gets or sets the Position name.
            </summary>
            <value>
            The name of the Position.
            </value>
        </member>
        <member name="P:BlueDeck.Models.Position.IsUnique">
            <summary>
            Gets or sets a value indicating whether the Position is unique.
            </summary>
            <value>
              <c>true</c> if this instance is unique and can be assigned only one Member; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:BlueDeck.Models.Position.JobTitle">
            <summary>
            Gets or sets the Job Title.
            </summary>
            <value>
            The Job Title of a Member assigned to this Position
            </value>
        </member>
        <member name="P:BlueDeck.Models.Position.IsManager">
            <summary>
            Gets or sets a value indicating whether this Position is the manager.
            A Component must have exactly one position designated as manager.
            </summary>
            <value>
              <c>true</c> if this instance is the manager of it's Parent Component.; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:BlueDeck.Models.Position.LineupPosition">
            <summary>
            Gets or sets the lineup position.
            </summary>
            <remarks>
            This indicates the current Position's display order among it's Parent Component's Positions
            </remarks>
            <value>
            The lineup position.
            </value>
        </member>
        <member name="P:BlueDeck.Models.Position.Members">
            <summary>
            Gets or sets the Members.
            </summary>
            <value>
            A collection of Member Entities that represent the members assigned to this Position
            </value>
        </member>
        <member name="M:BlueDeck.Models.Position.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BlueDeck.Models.Position"/> class.
            <remarks>
            Parameter-less constructor used to ensure that the <see cref="T:BlueDeck.Models.Position.Members"/> <see cref="T:List{T}"/> is initialized.
            </remarks>
            </summary>
        </member>
        <member name="T:BlueDeck.Models.Race">
            <summary>
            A Class that represents racial demographic group.  Contains properties and methods used in displaying the race of a <see cref="T:BlueDeck.Models.Member"/>
            </summary>
        </member>
        <member name="P:BlueDeck.Models.Race.MemberRaceId">
            <summary>
            Gets or sets the member race identifier.
            </summary>
            <value>
            The member race identifier.
            </value>
        </member>
        <member name="P:BlueDeck.Models.Race.MemberRaceFullName">
            <summary>
            Gets or sets the full name of the member race.
            </summary>
            <value>
            The full name of the member race.
            </value>
        </member>
        <member name="P:BlueDeck.Models.Race.Abbreviation">
            <summary>
            Gets or sets the race's abbreviation.
            </summary>
            <value>
            The race's abbreviation.
            </value>
        </member>
        <member name="T:BlueDeck.Models.Rank">
            <summary>
            A Class that represents a Organizational Rank.  Contains properties and methods used in displaying the rank of a <see cref="T:BlueDeck.Models.Member"/>
            </summary>
        </member>
        <member name="P:BlueDeck.Models.Rank.RankId">
            <summary>
            Gets or sets the rank Id.
            </summary>
            <value>
            The rank Id.
            </value>
        </member>
        <member name="P:BlueDeck.Models.Rank.RankFullName">
            <summary>
            Gets or sets the full name of the rank.
            </summary>
            <remarks>
            e.g. "Police Officer First Class" 
            </remarks>
            <value>
            The full name of the rank.
            </value>
        </member>
        <member name="P:BlueDeck.Models.Rank.RankShort">
            <summary>
            Gets or sets the rank abbreviation.
            </summary>
            <remarks>
            e.g. "POFC"
            </remarks>
            <value>
            The rank abbreviation.
            </value>
        </member>
        <member name="P:BlueDeck.Models.Rank.PayGrade">
            <summary>
            Gets or sets the pay grade for a rank.
            </summary>
            <remarks>
            e.g. "L02"
            </remarks>
            <value>
            The pay grade for the rank.
            </value>
        </member>
        <member name="T:BlueDeck.Models.Repositories.IComponentRepository">
            <summary>
            An implementation of <see cref="T:BlueDeck.Models.Repositories.IRepository{T}"/>
            </summary>
            <seealso cref="T:BlueDeck.Models.Repositories.IRepository{BlueDeck.Models.Component}" />
        </member>
        <member name="M:BlueDeck.Models.Repositories.IComponentRepository.GetOrgChartComponentsWithoutMembers">
            <summary>
            Gets the list of <see cref="T:BlueDeck.Models.ChartableComponent"/>s.
            </summary>
            <remarks>
            This method is used to seed the GetOrgChart JQuery chart with a list of Components without Member details .
            </remarks>
            <returns>A <see cref="T:IEnumerable{T}"/> list of <see cref="T:BlueDeck.Models.ChartableComponent"/> objects</returns>
        </member>
        <member name="M:BlueDeck.Models.Repositories.IComponentRepository.GetOrgChartComponentsWithMembers(System.Int32)">
            <summary>
            Gets the list of <see cref="T:BlueDeck.Models.ChartableComponentWithMember"/>s.
            </summary>
            <remarks>
            This method is used to seed the GetOrgChart JQuery chart with a list of Components with Member details.
            </remarks>
            <returns>A <see cref="T:IEnumerable{T}"/> list of <see cref="T:BlueDeck.Models.ChartableComponentWithMember"/> objects</returns>
        </member>
        <member name="M:BlueDeck.Models.Repositories.IComponentRepository.GetComponentSelectListItems">
            <summary>
            Gets the list of <see cref="T:BlueDeck.Models.Types.ComponentSelectListItem"/>s to populate a Component select list
            </summary>
            <returns>A <see cref="T:List{BlueDeck.Models.Types.ComponentSelectListItem}"/></returns>
        </member>
        <member name="M:BlueDeck.Models.Repositories.IComponentRepository.GetComponentWithChildren(System.Int32)">
            <summary>
            Gets the component with all of it's member children.
            </summary>
            <param name="id">The Component identifier.</param>
            <returns>A <see cref="T:BlueDeck.Models.Component"/></returns>
        </member>
        <member name="M:BlueDeck.Models.Repositories.IComponentRepository.GetComponentWithParentComponent(System.Int32)">
            <summary>
            Gets the component with it's Parent Component loaded
            </summary>
            <param name="id">The ComponentId of the desired Component Entity.</param>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Models.Repositories.IComponentRepository.GetComponentWithPositions(System.Int32)">
            <summary>
            Gets the Component with it's Positions.
            </summary>
            <param name="id">The ComponentId of the requested Component.</param>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Models.Repositories.IComponentRepository.GetComponentsWithChildren">
            <summary>
            Gets the list components with all member children.
            </summary>
            <returns>A <see cref="T:System.Collections.IEnumerable{BlueDeck.Models.Component}"/></returns>
        </member>
        <member name="M:BlueDeck.Models.Repositories.IComponentRepository.GetChildComponentCountForComponent(System.Int32)">
            <summary>
            Gets the number of child Components of a given ComponentId.
            </summary>
            <remarks>
            This method can be used to determine if a Component has children. It is mainly used to prevent deletion of 
            Components with active children assigned to it.
            </remarks>
            <param name="componentId">The component identifier.</param>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Models.Repositories.IComponentRepository.ComponentNameNotAvailable(BlueDeck.Models.Component)">
            <summary>
            Determines if a Component Name is available.
            </summary>
            <remarks>
            This method will determine if a Component Name is available.
            It requires a <see cref="T:BlueDeck.Models.Component"/> parameter because the method needs to validate
            that a Component name isn't colliding with itself.
            </remarks>
            <param name="c">The Component to to check.</param>
            <returns></returns>
        </member>
        <member name="T:BlueDeck.Models.Repositories.IMemberDutyStatusRepository">
            <summary>
            An implementation of <see cref="T:BlueDeck.Models.Repositories.IRepository{T}"/>
            </summary>
            <seealso cref="T:BlueDeck.Models.Repositories.IRepository{BlueDeck.Models.Types.MemberDutyStatus}" />
        </member>
        <member name="M:BlueDeck.Models.Repositories.IMemberDutyStatusRepository.GetMemberDutyStatusSelectListItems">
            <summary>
            Gets a list of <see cref="T:BlueDeck.Types.MemberDutyStatusSelectListItem"/>s.
            </summary>
            <remarks>
            This method is used to populate Duty Status select lists.
            </remarks>
            <returns>A <see cref="T:List{BlueDeck.Models.Types.MemberDutyStatusSelectListItem}"/></returns>
        </member>
        <member name="T:BlueDeck.Models.Repositories.IMemberGenderRepository">
            <summary>
            An implementation of <see cref="T:BlueDeck.Models.Repositories.IRepository{T}"/>
            </summary>
            <seealso cref="T:BlueDeck.Models.Repositories.IRepository{BlueDeck.Models.Types.MemberGender}" />
        </member>
        <member name="M:BlueDeck.Models.Repositories.IMemberGenderRepository.GetMemberGenderSelectListItems">
            <summary>
            Gets a list of <see cref="T:BlueDeck.Types.MemberGenderSelectListItem"/>s.
            </summary>
            <remarks>
            This method is used to populate Gender select lists.
            </remarks>
            <returns>A <see cref="T:List{BlueDeck.Models.Types.MemberGenderSelectListItem}"/></returns>
        </member>
        <member name="T:BlueDeck.Models.Repositories.IMemberRaceRepository">
            <summary>
            An implementation of <see cref="T:BlueDeck.Models.Repositories.IRepository{T}"/>
            </summary>
            <seealso cref="T:BlueDeck.Models.Repositories.IRepository{BlueDeck.Models.Types.MemberRace}" />
        </member>
        <member name="M:BlueDeck.Models.Repositories.IMemberRaceRepository.GetMemberRaceSelectListItems">
            <summary>
            Gets a list of <see cref="T:BlueDeck.Types.MemberRaceSelectListItem"/>s.
            </summary>
            <remarks>
            This method is used to populate Rank select lists.
            </remarks>
            <returns>A <see cref="T:List{BlueDeck.Models.Types.MemberRaceSelectListItem}"/></returns>
        </member>
        <member name="T:BlueDeck.Models.Repositories.IMemberRankRepository">
            <summary>
            An implementation of <see cref="T:BlueDeck.Models.Repositories.IRepository{T}"/>
            </summary>
            <seealso cref="T:BlueDeck.Models.Repositories.IRepository{BlueDeck.Models.MemberRank}" />
        </member>
        <member name="M:BlueDeck.Models.Repositories.IMemberRankRepository.GetMemberRankSelectListItems">
            <summary>
            Gets a list of <see cref="T:BlueDeck.Types.MemberRankSelectListItem"/>s.
            </summary>
            <remarks>
            This method is used to populate Rank select lists.
            </remarks>
            <returns>A <see cref="T:List{BlueDeck.Models.Types.MemberRankSelectListItem}"/></returns>
        </member>
        <member name="T:BlueDeck.Models.Repositories.IMemberRepository">
            <summary>
            An implementation of <see cref="T:BlueDeck.Models.Repositories.IRepository{T}"/>
            </summary>
            <seealso cref="T:BlueDeck.Models.Repositories.IRepository{BlueDeck.Models.Member}" />
        </member>
        <member name="M:BlueDeck.Models.Repositories.IMemberRepository.Remove(System.Int32)">
            <summary>
            Removes the specified member identifier.
            </summary>
            <remarks>
            This is an override of the IRepository's Remove method. This override removes all MemberContact entries 
            when removing a Member.
            </remarks>
            <param name="memberId">The member identifier.</param>
        </member>
        <member name="T:BlueDeck.Models.Repositories.IPositionRepository">
            <summary>
            An implementation of <see cref="T:BlueDeck.Models.Repositories.IRepository{T}"/>
            </summary>
            <seealso cref="T:BlueDeck.Models.Repositories.IRepository{BlueDeck.Models.Position}" />
        </member>
        <member name="M:BlueDeck.Models.Repositories.IPositionRepository.GetPositionsWithMembers">
            <summary>
            Gets the Positions with their Members.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Models.Repositories.IPositionRepository.RemovePositionAndReassignMembers(System.Int32,System.String)">
            <summary>
            Removes the position and reassign members.
            </summary>
            <param name="id">The identifier.</param>
            <param name="newPositionName">New name of the position.</param>
        </member>
        <member name="T:BlueDeck.Models.Repositories.IRepository`1">
            <summary>
            An interface that encapsulates data store interactions common to all Domain Entity Interactions. 
            </summary>
            <remarks>
            This interface should not be implemented directly, but rather a Entity-specific interface that implements this interface should be created,
            and specific implementations of Repositories should be derived from Entity-specific interface 
            </remarks>
            <seealso cref="T:BlueDeck.Models.Repositories.IPositionRepository"/>
            <seealso cref="T:BlueDeck.Models.Repositories.IComponentRepository"/>
            <seealso cref="T:BlueDeck.Models.Repositories.IMemberRepository"/>
            <seealso cref="T:BlueDeck.Models.Repositories.IMemberRankRepository"/>
            <typeparam name="TEntity">The type of the entity.</typeparam>
        </member>
        <member name="M:BlueDeck.Models.Repositories.IRepository`1.Get(System.Int32)">
            <summary>
            Gets the Entity with the given identifier.
            </summary>
            <param name="id">The identifier for the desired entity.</param>
            <returns>A <see cref="T:TEntity"/></returns>
        </member>
        <member name="M:BlueDeck.Models.Repositories.IRepository`1.GetAll">
            <summary>
            Gets Entities in the Repository
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerable{T}"/> of the Entity.</returns>
        </member>
        <member name="M:BlueDeck.Models.Repositories.IRepository`1.Find(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Finds the Entities that match the specified predicate.
            </summary>
            <remarks>
            This Method can accept LINQ Lambda Expression delegates
            </remarks>
            <param name="predicate">The predicate LINQ Lambda Expression delegate.</param>
            <returns>An <see cref="T:System.Collections.IEnumerable{T}"/> of the Entity.</returns>
        </member>
        <member name="M:BlueDeck.Models.Repositories.IRepository`1.SingleOrDefault(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Finds a Single Entity based on the predicate.
            </summary>
            <remarks>
            This Method can accept LINQ Lambda Expression delegates
            </remarks>
            <param name="predicate">The predicate LINQ Lambda Expression delegate.</param>
            <returns>A <see cref="T:TEntity"/></returns>
        </member>
        <member name="M:BlueDeck.Models.Repositories.IRepository`1.Add(`0)">
            <summary>
            Adds the specified entity.
            </summary>
            <param name="entity">The Entity to add.</param>
        </member>
        <member name="M:BlueDeck.Models.Repositories.IRepository`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Adds a range of Entities.
            </summary>
            <param name="entities">An <see cref="T:IEnumerable{T}"/> of entities to add.</param>
        </member>
        <member name="M:BlueDeck.Models.Repositories.IRepository`1.Remove(`0)">
            <summary>
            Removes the specified entity.
            </summary>
            <param name="entity">The <see cref="T:TEntity:"/> to add.</param>
        </member>
        <member name="M:BlueDeck.Models.Repositories.IRepository`1.RemoveRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Removes a range of <see cref="T:TEntity"/>.
            </summary>
            <param name="entities">An <see cref="T:IEnumerable{T}"/> of entities to remove.</param>
        </member>
        <member name="T:BlueDeck.Models.Types.ComponentSelectListItem">
            <summary>
            A type that represents the Name and Id of any entity. This is used to create select lists in views.
            <remarks>
            This was initially created for a <see cref="T:BlueDeck.Models.Component"/>, but can be used for any Name/Id combination.
            </remarks>
            </summary>
        </member>
        <member name="P:BlueDeck.Models.Types.ComponentSelectListItem.ComponentName">
            <summary>
            Gets or sets the display name of the component.
            </summary>
            <value>
            The name of the component.
            </value>
        </member>
        <member name="P:BlueDeck.Models.Types.ComponentSelectListItem.Id">
            <summary>
            Gets or sets the Id of the component.
            </summary>
            <value>
            The identifier.
            </value>
        </member>
        <member name="T:BlueDeck.Models.Types.MappedField">
            <summary>
            Class used to map Table/Cell index and value
            </summary>
        </member>
        <member name="P:BlueDeck.Models.Types.MappedField.TableIndex">
            <summary>
            Gets or sets the index of the table.
            </summary>
            <remarks>
            This is the index of the table in the Template document
            </remarks>
            <value>
            The index of the table.
            </value>
        </member>
        <member name="P:BlueDeck.Models.Types.MappedField.Table">
            <summary>
            Gets or sets the table.
            </summary>
            <remarks>
            This property may replace the TableIndex completely, as the Table's index in the Document is 
            dependant on the part of the document that it is in, which means tables in the header/footer
            will be indexed according to the Header/Footer's tables collection, which is independent of the MainDocumentPart's
            table indexes.
            </remarks>
            <value>
            The table.
            </value>
        </member>
        <member name="P:BlueDeck.Models.Types.MappedField.RowIndex">
            <summary>
            Gets or sets the index of the row.
            </summary>
            <value>
            The index of the row.
            </value>
        </member>
        <member name="P:BlueDeck.Models.Types.MappedField.CellIndex">
            <summary>
            Gets or sets the index of the cell.
            </summary>
            <value>
            The index of the cell.
            </value>
        </member>
        <member name="P:BlueDeck.Models.Types.MappedField.FieldName">
            <summary>
            Gets or sets the name of the field.
            </summary>
            <value>
            The name of the field.
            </value>
        </member>
        <member name="M:BlueDeck.Models.Types.MappedField.Write(System.String)">
            <summary>
            Writes the data in the mapped field to the document.
            </summary>
            <param name="table">
            The target <see cref="T:DocumentFormat.OpenXml.Wordprocessing.Table"/>. 
            This parameter is required because the Table index depends on whether the MappedField is in a Header/Footer or in the document's mainpart, which means that the TableIndex is not
            sufficient to target the proper table. 
            </param>
            <param name="newText">The new text.</param>
        </member>
        <member name="T:BlueDeck.Models.Types.MemberDutyStatusSelectListItem">
            <summary>
            A Type that includes the DutyStatusId and DutyStatusName for the <see cref="T:BlueDeck.Models.Types.MemberDutyStatus"/> Entity.
            /// <remarks>
            This type is used to populate a MemberDutyStatus select list.
            </remarks>
            </summary>
        </member>
        <member name="P:BlueDeck.Models.Types.MemberDutyStatusSelectListItem.MemberDutyStatusId">
            <summary>
            Gets or sets the member duty status identifier.
            </summary>
            <value>
            The member duty status identifier.
            </value>
        </member>
        <member name="P:BlueDeck.Models.Types.MemberDutyStatusSelectListItem.MemberDutyStatusName">
            <summary>
            Gets or sets the name of the member duty status.
            </summary>
            <value>
            The name of the member duty status.
            </value>
        </member>
        <member name="T:BlueDeck.Models.Types.MemberGenderSelectListItem">
            <summary>
            A Type that includes the MemberRaceId and RaceFullName for the <see cref="T:BlueDeck.Models.Types.MemberGender"/> Entity.
            /// <remarks>
            This type is used to populate a MemberGender select list.
            </remarks>
            </summary>
        </member>
        <member name="P:BlueDeck.Models.Types.MemberGenderSelectListItem.MemberGenderId">
            <summary>
            Gets or sets the member gender identifier.
            </summary>
            <value>
            The member gender identifier.
            </value>
        </member>
        <member name="P:BlueDeck.Models.Types.MemberGenderSelectListItem.MemberGenderFullName">
            <summary>
            Gets or sets the full name of the member gender.
            </summary>
            <value>
            The full name of the member gender.
            </value>
        </member>
        <member name="P:BlueDeck.Models.Types.MemberGenderSelectListItem.Abbreviation">
            <summary>
            Gets or sets the abbreviation.
            </summary>
            <value>
            The abbreviation.
            </value>
        </member>
        <member name="T:BlueDeck.Models.Types.MemberRaceSelectListItem">
            <summary>
            A Type that includes the MemberRaceId and RaceFullName for the <see cref="T:BlueDeck.Models.Types.MemberRace"/> Entity.
            /// <remarks>
            This type is used to populate a MemberRace select list.
            </remarks>
            </summary>
        </member>
        <member name="P:BlueDeck.Models.Types.MemberRaceSelectListItem.MemberRaceId">
            <summary>
            Gets or sets the member race identifier.
            </summary>
            <value>
            The member race identifier.
            </value>
        </member>
        <member name="P:BlueDeck.Models.Types.MemberRaceSelectListItem.RaceFullName">
            <summary>
            Gets or sets the name of the race.
            </summary>
            <value>
            The name of the race.
            </value>
        </member>
        <member name="P:BlueDeck.Models.Types.MemberRaceSelectListItem.Abbreviation">
            <summary>
            Gets or sets the abbreviation.
            </summary>
            <value>
            The abbreviation.
            </value>
        </member>
        <member name="T:BlueDeck.Models.Types.MemberRankSelectListItem">
            <summary>
            A Type that includes the MemberRankId and RankFullName for the <see cref="T:BlueDeck.Models.Types.MemberRank"/> Entity.
            <remarks>
            This type is used to populate a MemberRank select list.
            </remarks>
            </summary>
        </member>
        <member name="P:BlueDeck.Models.Types.MemberRankSelectListItem.MemberRankId">
            <summary>
            Gets or sets the member rank identifier.
            </summary>
            <value>
            The member rank identifier.
            </value>
        </member>
        <member name="P:BlueDeck.Models.Types.MemberRankSelectListItem.RankName">
            <summary>
            Gets or sets the name of the rank.
            </summary>
            <value>
            The name of the rank.
            </value>
        </member>
        <member name="T:BlueDeck.Models.Types.MemberSelectListItem">
            <summary>
            A Type that includes the MemberDisplayName and MemberId for the <see cref="T:BlueDeck.Models.Member"/> Entity.
            <remarks>
            This type is used to populate a Position select list.
            </remarks>
            </summary>
        </member>
        <member name="P:BlueDeck.Models.Types.MemberSelectListItem.MemberName">
            <summary>
            Gets or sets the Member Name
            </summary>
        </member>
        <member name="P:BlueDeck.Models.Types.MemberSelectListItem.MemberId">
            <summary>
            Gets or sets the Member Id
            </summary>
        </member>
        <member name="P:BlueDeck.Models.Types.PositionIndexViewModelPositionListItem.PositionId">
            <summary>
            Gets or sets the position identifier.
            </summary>
            <value>
            The PositionId PK.
            </value>
        </member>
        <member name="P:BlueDeck.Models.Types.PositionIndexViewModelPositionListItem.ParentComponentId">
            <summary>
            Gets or sets the id of the parent component.
            </summary>
            <value>
            The Id of the Component to which this Position Instance is assigned
            </value>        
        </member>
        <member name="P:BlueDeck.Models.Types.PositionIndexViewModelPositionListItem.ParentComponentName">
            <summary>
            Gets or sets the name of the parent component.
            </summary>
            <value>
            The name of the parent component.
            </value>
        </member>
        <member name="P:BlueDeck.Models.Types.PositionIndexViewModelPositionListItem.PositionName">
            <summary>
            Gets or sets the Position name.
            </summary>
            <value>
            The name of the Position.
            </value>
        </member>
        <member name="P:BlueDeck.Models.Types.PositionIndexViewModelPositionListItem.IsUnique">
            <summary>
            Gets or sets a value indicating whether the Position is unique.
            </summary>
            <value>
              <c>true</c> if this instance is unique and can be assigned only one Member; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:BlueDeck.Models.Types.PositionIndexViewModelPositionListItem.JobTitle">
            <summary>
            Gets or sets the Job Title.
            </summary>
            <value>
            The Job Title of a Member assigned to this Position
            </value>
        </member>
        <member name="P:BlueDeck.Models.Types.PositionIndexViewModelPositionListItem.MembersCount">
            <summary>
            Gets or sets the count of Position Members
            </summary>
            <value>
            A count of Member Entities that are assigned to this Position
            </value>
        </member>
        <member name="P:BlueDeck.Models.Types.PositionIndexViewModelPositionListItem.IsManager">
            <summary>
            Gets or sets a value indicating whether this Position is the manager.
            A Component must have exactly one position designated as manager.
            </summary>
            <value>
              <c>true</c> if this instance is the manager of it's Parent Component.; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:BlueDeck.Models.Types.PositionIndexViewModelPositionListItem.#ctor(BlueDeck.Models.Position)">
            <summary>
            Initializes a new instance of the <see cref="T:BlueDeck.Models.Types.PositionIndexViewModelPositionListItem"/> class.
            </summary>
            <remarks>
            This constructor requires a <see cref="T:BlueDeck.Models.Position"/> to be passed as a parameter.
            </remarks>
            <param name="p">A <see cref="T:BlueDeck.Models.Position"/> object.</param>
        </member>
        <member name="M:BlueDeck.Models.Types.PositionIndexViewModelPositionListItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BlueDeck.Models.Types.PositionIndexViewModelPositionListItem"/>.
            <remarks>
            This is a parameterless constructor used to create new objects
            </remarks>
            </summary>
        </member>
        <member name="T:BlueDeck.Models.Types.PositionSelectListItem">
            <summary>
            A Type that includes the PositionName and PositionId for the <see cref="T:BlueDeck.Models.Position"/> Entity.
            <remarks>
            This type is used to populate a Position select list.
            </remarks>
            </summary>
        </member>
        <member name="P:BlueDeck.Models.Types.PositionSelectListItem.PositionName">
            <summary>
            Gets or sets the Rank Name
            </summary>
        </member>
        <member name="P:BlueDeck.Models.Types.PositionSelectListItem.PositionId">
            <summary>
            Gets or sets the Rank Id
            </summary>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.AddPositionToComponentViewComponentViewModel.PositionId">
            <summary>
            Gets or sets the Id of the Position.
            </summary>
            <value>
            The Position's Id.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.AddPositionToComponentViewComponentViewModel.PositionName">
            <summary>
            Gets or sets the name of the position.
            </summary>
            <value>
            The name of the position.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.AddPositionToComponentViewComponentViewModel.ParentComponentId">
            <summary>
            Gets or sets the Id of the Position's parent <see cref="T:BlueDeck.Models.Component"/>
            </summary>
            <value>
            The parent's ComponentId.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.AddPositionToComponentViewComponentViewModel.JobTitle">
            <summary>
            Gets or sets the job title.
            </summary>
            <value>
            The job title.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.AddPositionToComponentViewComponentViewModel.IsManager">
            <summary>
            Gets or sets a value indicating whether this Position is designated as the manager of it's parent <see cref="T:BlueDeck.Models.Component"/>.
            </summary>
            <value>
              <c>true</c> if this instance is manager; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.AddPositionToComponentViewComponentViewModel.IsUnique">
            <summary>
            Gets or sets a value indicating whether this instance is unique, or if it can be assigned multiple <see cref="T:BlueDeck.Models.Member"/>s.
            </summary>
            <value>
              <c>true</c> if this instance is unique; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.AssignMemberModalViewComponentViewModel.MemberId">
            <summary>
            Gets or sets the member identifier.
            </summary>
            <remarks>
            This is used to store the selection from the ViewComponent's Select list
            and POST to the handler. It will be null until a selection is made.
            </remarks>
            <value>
            The member identifier.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.AssignMemberModalViewComponentViewModel.PositionId">
            <summary>
            Gets or sets the position identifier.
            </summary>
            <remarks>
            This is the PositionId of the Position wherein the user clicked the "assign a member" on the RosterManager
            It will be populated via the viewmodel's constructor when the RosterController invokes the ViewComponent
            </remarks>
            <value>
            The position identifier.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.AssignMemberModalViewComponentViewModel.SelectedComponentId">
            <summary>
            Gets or sets the selected component identifier.
            </summary>
            <remarks>
            This will be set in the Ajax POST for the AssignMember modal. It is used to store the current value of the 
            Component selection box on Roster/Index. We need this in case the Member assignment requires a full refresh 
            of the RosterManager ViewComponent as determined in RosterController/ReassignMember
            </remarks>
            <value>
            The selected component identifier.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.AssignMemberModalViewComponentViewModel.Members">
            <summary>
            Gets or sets the List of Members.
            </summary>
            <remarks>
            This list is used to populate a Select List from which a user can select a Member to assign.
            See <see cref="T:BlueDeck.Models.Types.MemberSelectListItem"/>
            </remarks>
            <value>
            The members.
            </value>
        </member>
        <member name="T:BlueDeck.Models.ViewModels.ComponentWithComponentListViewModel">
            <summary>
            ViewModel used to display a Component and populate a selectlist of Component Names/Ids to facilitate adding a Component or changing the Component to which a Component is assigned. 
            </summary>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.ComponentWithComponentListViewModel.ComponentId">
            <summary>
            Gets or sets the Id of the Component.
            </summary>
            <value>
            The component id.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.ComponentWithComponentListViewModel.ComponentName">
            <summary>
            Gets or sets the Component Name.
            </summary>
            <value>
            The name of the component.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.ComponentWithComponentListViewModel.ParentComponentId">
            <summary>
            Gets or sets the Id of the Component's Parent Component
            </summary>
            <value>
            The Id of the Component's Parent Component.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.ComponentWithComponentListViewModel.Acronym">
            <summary>
            Gets or sets the Component's acronym.
            </summary>
            <value>
            The acronym of the Component.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.ComponentWithComponentListViewModel.Components">
            <summary>
            Gets or sets the list of all Component Names/Ids in the repository.  Used to populate an HTML select list.
            </summary>
            <value>
            The <see cref="T:List{T}"/> of <see cref="T:BlueDeck.Types.ComponentSelectListItem"/>s.
            </value>
        </member>
        <member name="M:BlueDeck.Models.ViewModels.ComponentWithComponentListViewModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BlueDeck.ViewModels.ComponentWithComponentListViewModel"/> class.
            <remarks>
            This parameter-less constructor had to be added in because the <see cref="T:BlueDeck.ViewModels.ComponentWithComponentListViewModel(Component, List{Component})"/> constructor overrode the default, and the form POST model-binding failed
            </remarks>
            </summary>
        </member>
        <member name="M:BlueDeck.Models.ViewModels.ComponentWithComponentListViewModel.#ctor(BlueDeck.Models.Component,System.Collections.Generic.List{BlueDeck.Models.Types.ComponentSelectListItem})">
            TODO: Use a SP to get a list of all Component Names/Ids instead of using EF to pull all Components?
            <summary>
            Initializes a new instance of the <see cref="T:BlueDeck.ViewModels.ComponentWithComponentListViewModel"/> class.
            </summary>
            <param name="c">The <see cref="T:BlueDeck.Models.Component"/> being displayed by the view</param>
            <param name="l">A <see cref="T:List{T}"/> of all <see cref="T:BlueDeck.Models.Component"/>s in the repository </param>
        </member>
        <member name="T:BlueDeck.Models.ViewModels.MemberAddEditViewModel">
            <summary>
            ViewModel used to display a Position and populate a selectlist of Component Names/Ids to facilitate adding a Position or changing the Component to which a position is assigned. 
            </summary>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.MemberAddEditViewModel.MemberId">
            <summary>
            Gets or sets the Id of the Member.
            </summary>
            <value>
            The Member's Id.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.MemberAddEditViewModel.MemberRank">
            <summary>
            Gets or sets the Rank of the Member.
            </summary>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.MemberAddEditViewModel.MemberGender">
            <summary>
            Gets or sets the member gender.
            </summary>
            <value>
            The member gender.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.MemberAddEditViewModel.MemberRace">
            <summary>
            Gets or sets the member race.
            </summary>
            <value>
            The member race.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.MemberAddEditViewModel.FirstName">
            <summary>
            Gets or sets the First Name of the Member.
            </summary>
            <value>
            The first name.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.MemberAddEditViewModel.LastName">
            <summary>
            Gets or sets the Last Name of the Member.
            </summary>
            <value>
            The last name.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.MemberAddEditViewModel.MiddleName">
            <summary>
            Gets or sets the Middle Name of the Member.
            </summary>
            <value>
            The Member's middle name.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.MemberAddEditViewModel.IdNumber">
            <summary>
            Gets or sets the Member's IDNumber.
            </summary>
            <remarks>
            This is NOT the Member Entity Id. This is the Member's employee Id number
            </remarks>
            <value>
            The Member's Departmental ID Number.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.MemberAddEditViewModel.DutyStatusId">
            <summary>
            Gets or sets the Member's Duty Status.
            </summary>
            <value>
            The Member's Duty Status Index.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.MemberAddEditViewModel.Email">
            <summary>
            Gets or sets the Member's email.
            </summary>
            <value>
            The email.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.MemberAddEditViewModel.PositionId">
            <summary>
            Gets or sets the Position identifier.
            </summary>
            <value>
            The position identifier.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.MemberAddEditViewModel.DisplayName">
            <summary>
            Gets or sets the display name.
            </summary>
            <value>
            The Member's display name, used only for Display. This is not a model-bound editable field.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.MemberAddEditViewModel.ContactNumbers">
            <summary>
            Gets or sets the Member's Contact Numbers.
            </summary>
            <remarks>
            This property stores a List of <see cref="T:BlueDeck.Models.ContactNumber"/> objects to store the Member's phone numbers.
            </remarks>
            <value>
            The contact numbers.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.MemberAddEditViewModel.RankList">
            <summary>
            Gets or sets a list of <see cref="T:BlueDeck.Models.Types.MemberRankSelectListItem"/>s.
            </summary>
            <value>
            The rank list.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.MemberAddEditViewModel.Positions">
            <summary>
            Gets or sets a list of <see cref="T:BlueDeck.Models.Types.PositionSelectListItem"/>.
            </summary>
            <value>
            The positions.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.MemberAddEditViewModel.GenderList">
            <summary>
            Gets or sets a list of <see cref="T:BlueDeck.Models.Types.MemberGenderSelectListItem"/>.
            </summary>
            <value>
            The genders.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.MemberAddEditViewModel.RaceList">
            <summary>
            Gets or sets a list of <see cref="T:BlueDeck.Models.Types.MemberRaceSelectListItem"/>.
            </summary>
            <value>
            The races.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.MemberAddEditViewModel.DutyStatus">
            <summary>
            Gets or sets a list of <see cref="T:BlueDeck.Models.Types.MemberDutyStatusSelectListItem"/>.
            </summary>
            <remarks>
            This property is used to populate drop-down lists of Member Duty Statuses.
            </remarks>
            <value>
            The races.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.MemberAddEditViewModel.PhoneNumberTypes">
            <summary>
            Gets or sets the list of <see cref="T:BlueDeck.Models.Types.PhoneNumberTypeSelectListItem"/>.
            </summary>
            <remarks>
            This property is used to populate drop-down lists of Phone Number Types.
            </remarks>
            <value>
            The phone number types.
            </value>
        </member>
        <member name="M:BlueDeck.Models.ViewModels.MemberAddEditViewModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BlueDeck.Models.ViewModels.MemberAddEditViewModel"/> class.
            </summary>
        </member>
        <member name="M:BlueDeck.Models.ViewModels.MemberAddEditViewModel.#ctor(BlueDeck.Models.Member,System.Collections.Generic.List{BlueDeck.Models.Types.PositionSelectListItem},System.Collections.Generic.List{BlueDeck.Models.Types.MemberRankSelectListItem},System.Collections.Generic.List{BlueDeck.Models.Types.MemberGenderSelectListItem},System.Collections.Generic.List{BlueDeck.Models.Types.MemberRaceSelectListItem},System.Collections.Generic.List{BlueDeck.Models.Types.MemberDutyStatusSelectListItem},System.Collections.Generic.List{BlueDeck.Models.Types.PhoneNumberTypeSelectListItem},System.Collections.Generic.List{BlueDeck.Models.Types.ApplicationStatusSelectListItem})">
            <summary>
            Initializes a new instance of the <see cref="T:BlueDeck.Models.ViewModels.MemberAddEditViewModel"/> class.
            </summary>
            <param name="_member">A <see cref="T:BlueDeck.Models.Member"/>.</param>
            <param name="_positionList">A <see cref="T:BlueDeck.Models.Types.PositionSelectListItem"/>.</param>
            <param name="_rankList">A <see cref="T:BlueDeck.Models.Types.MemberRankSelectListItem"/>.</param>
            <param name="_genderList">A <see cref="T:BlueDeck.Models.Types.MemberGenderSelectListItem"/>.</param>
            <param name="_raceList">A <see cref="T:BlueDeck.Models.Types.MemberRaceSelectListItem"/>.</param>
            <param name="_dutyStatusList">A <see cref="T:BlueDeck.Models.Types.MemberDutyStatusSelectListItem"/>.</param>
            <param name="_phoneNumberTypes">A <see cref="T:BlueDeck.Models.Types.PhoneNumberTypeSelectListItem"/>.</param>
            <param name="_appStatusList">A List of  <see cref="T:BlueDeck.Models.Types.ApplicationStatusSelectListItem"/>.</param>
        </member>
        <member name="M:BlueDeck.Models.ViewModels.MemberAddEditViewModel.#ctor(BlueDeck.Models.Member,System.Collections.Generic.List{BlueDeck.Models.Types.MemberRankSelectListItem},System.Collections.Generic.List{BlueDeck.Models.Types.MemberGenderSelectListItem},System.Collections.Generic.List{BlueDeck.Models.Types.MemberRaceSelectListItem},System.Collections.Generic.List{BlueDeck.Models.Types.MemberDutyStatusSelectListItem},System.Collections.Generic.List{BlueDeck.Models.Types.PhoneNumberTypeSelectListItem},System.Collections.Generic.List{BlueDeck.Models.Types.ApplicationStatusSelectListItem})">
            <summary>
            Initializes a new instance of the <see cref="T:BlueDeck.Models.ViewModels.MemberAddEditViewModel"/> class.
            </summary>
            <remarks>
            This constructor serves the Modal Form to add a Member which is invoked from the RosterManager view.
            The Member's Position cannot be changed from this Modal, so there is no List of PositionSelectListItem parameter.
            </remarks>
            <param name="_member">The member.</param>
            <param name="_rankList">A List of <see cref="T:BlueDeck.Models.Types.MemberRankSelectListItem"/>.</param>
            <param name="_genderList">A List of  <see cref="T:BlueDeck.Models.Types.MemberGenderSelectListItem"/>.</param>
            <param name="_raceList">A List of  <see cref="T:BlueDeck.Models.Types.MemberRaceSelectListItem"/>.</param>
            <param name="_dutyStatusList">A List of  <see cref="T:BlueDeck.Models.Types.MemberDutyStatusSelectListItem"/>.</param>
            <param name="_phoneNumberTypes">A List of  <see cref="T:BlueDeck.Models.Types.PhoneNumberTypeSelectListItem"/>.</param>
            <param name="_appStatusList">A List of  <see cref="T:BlueDeck.Models.Types.ApplicationStatusSelectListItem"/>.</param>
        </member>
        <member name="T:BlueDeck.Models.ViewModels.PositionWithComponentListViewModel">
            <summary>
            ViewModel used to display a Position and populate a selectlist of Component Names/Ids to facilitate adding a Position or changing the Component to which a position is assigned. 
            </summary>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.PositionWithComponentListViewModel.PositionId">
            <summary>
            Gets or sets the Id of the Position.
            </summary>
            <value>
            The Position's Id.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.PositionWithComponentListViewModel.PositionName">
            <summary>
            Gets or sets the name of the position.
            </summary>
            <value>
            The name of the position.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.PositionWithComponentListViewModel.ParentComponentId">
            <summary>
            Gets or sets the Id of the Position's parent <see cref="T:BlueDeck.Models.Component"/>
            </summary>
            <value>
            The parent's ComponentId.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.PositionWithComponentListViewModel.JobTitle">
            <summary>
            Gets or sets the job title.
            </summary>
            <value>
            The job title.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.PositionWithComponentListViewModel.IsManager">
            <summary>
            Gets or sets a value indicating whether this Position is designated as the manager of it's parent <see cref="T:BlueDeck.Models.Component"/>.
            </summary>
            <value>
              <c>true</c> if this instance is manager; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.PositionWithComponentListViewModel.IsUnique">
            <summary>
            Gets or sets a value indicating whether this instance is unique, or if it can be assigned multiple <see cref="T:BlueDeck.Models.Member"/>s.
            </summary>
            <value>
              <c>true</c> if this instance is unique; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:BlueDeck.Models.ViewModels.PositionWithComponentListViewModel.Components">
            <summary>
            Gets or sets the list of all Component Names/Ids in the repository.  Used to populate an HTML select list.
            </summary>
            <value>
            The <see cref="T:List{T}"/> of <see cref="T:BlueDeck.Types.ComponentSelectListItem"/>s.
            </value>
        </member>
        <member name="M:BlueDeck.Models.ViewModels.PositionWithComponentListViewModel.#ctor(BlueDeck.Models.Position)">
            TODO: Use a SP to get a list of all Component Names/Ids instead of using EF to pull all Components?
            <summary>
            Initializes a new instance of the <see cref="T:BlueDeck.ViewModels.PositionWithComponentListViewModel"/> class.
            </summary>
            <param name="p">The <see cref="T:BlueDeck.Models.Position"/> being displayed by the view</param>
        </member>
        <member name="M:BlueDeck.Models.ViewModels.PositionWithComponentListViewModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:BlueDeck.ViewModels.PositionWithComponentListViewModel"/> class.
            <remarks>
            This parameter-less constructor had to be added in because the <see cref="T:BlueDeck.ViewModels.PositionWithComponentListViewModel(Position, List{Component})"/> constructor overrode the default, and the form POST model-binding failed
            </remarks>
            </summary>
        </member>
        <member name="P:BlueDeck.Persistence.Repositories.AppStatusRepository.ApplicationDbContext">
            <summary>
            Gets the application database context.
            </summary>
            <value>
            The application database context.
            </value>
        </member>
        <member name="T:BlueDeck.Persistence.Repositories.ComponentRepository">
            <summary>
            A repository for the Component Entity
            </summary>
            <seealso cref="T:BlueDeck.Persistence.Repositories.Repository{BlueDeck.Models.Component}" />
            <seealso cref="T:BlueDeck.Models.Repositories.IComponentRepository" />
        </member>
        <member name="M:BlueDeck.Persistence.Repositories.ComponentRepository.#ctor(BlueDeck.Models.ApplicationDbContext)">
            <summary>
            Initializes a new instance of the <see cref="T:BlueDeck.Persistence.Repositories.ComponentRepository"/> class.
            </summary>
            <param name="context">The <see cref="T:BlueDeck.Models.ApplicationDbContext"/></param>
        </member>
        <member name="M:BlueDeck.Persistence.Repositories.ComponentRepository.GetComponentsWithChildren">
            <summary>
            Gets the list components with all member children.
            </summary>
            <returns>
            A <see cref="T:System.Collections.IEnumerable{BlueDeck.Models.Component}" />
            </returns>
        </member>
        <member name="M:BlueDeck.Persistence.Repositories.ComponentRepository.GetComponentWithChildren(System.Int32)">
            <summary>
            Gets the component with all of it's member children.
            </summary>
            <param name="id">The Component identifier.</param>
            <returns>
            A <see cref="T:BlueDeck.Models.Component" />
            </returns>
        </member>
        <member name="M:BlueDeck.Persistence.Repositories.ComponentRepository.GetComponentWithParentComponent(System.Int32)">
            <summary>
            Gets the Component with it's Parent Component.
            </summary>
            <param name="id">The ComponentId of the desired Component Entity.</param>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Persistence.Repositories.ComponentRepository.GetComponentWithPositions(System.Int32)">
            <summary>
            Gets the Component with it's Positions.
            </summary>
            <param name="id">The ComponentId of the requested Component.</param>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Persistence.Repositories.ComponentRepository.GetOrgChartComponentsWithoutMembers">
            <summary>
            Gets the list of <see cref="T:BlueDeck.Models.ChartableComponent"/>s.
            </summary>
            <returns>A <see cref="T:IEnumerable{T}"/> list of <see cref="T:BlueDeck.Models.ChartableComponent"/> objects</returns>
        </member>
        <member name="M:BlueDeck.Persistence.Repositories.ComponentRepository.GetComponentSelectListItems">
            <summary>
            Gets the list of <see cref="T:BlueDeck.Models.Types.ComponentSelectListItem" />s to populate a Component select list
            </summary>
            <returns>
            A <see cref="T:List{BlueDeck.Models.Types.ComponentSelectListItem}" />
            </returns>
        </member>
        <member name="M:BlueDeck.Persistence.Repositories.ComponentRepository.GetOrgChartComponentsWithMembers(System.Int32)">
            <summary>
            Gets the list of <see cref="T:BlueDeck.Models.ChartableComponentWithMember"/>s.
            </summary>
            <returns>A <see cref="T:IEnumerable{T}"/> list of <see cref="T:BlueDeck.Models.ChartableComponentWithMember"/> objects</returns>
        </member>
        <member name="M:BlueDeck.Persistence.Repositories.ComponentRepository.GetOrgChartComponentsWithMembersNoMarkup(System.Int32)">
            <summary>
            Gets the list of <see cref="T:BlueDeck.Models.ChartableComponentWithMember"/>s.
            </summary>
            <returns>A <see cref="T:IEnumerable{T}"/> list of <see cref="T:BlueDeck.Models.ChartableComponentWithMember"/> objects</returns>
        </member>
        <member name="M:BlueDeck.Persistence.Repositories.ComponentRepository.UpdateComponentAndSetLineup(BlueDeck.Models.Component)">
            <summary>
            Adds a new Component or Updates an existing Component and adjusts the LineupPosition of all sibling Components within the ParentComponent
            </summary>
            <remarks>
            If this method is used to edit an existing component, then the Component parameter must be a new Component instance set to the form values of the existing component.
            This is because the method needs to know the "unedited" value of the Component's LineupPosition to determine whether the Component has been moved up or down
            in it's ParentComponent's Lineup.
            /// </remarks>
            <param name="c">The <seealso cref="T:BlueDeck.Models.Component"/> being added or edited.</param>
        </member>
        <member name="M:BlueDeck.Persistence.Repositories.MemberDutyStatusRepository.#ctor(BlueDeck.Models.ApplicationDbContext)">
            <summary>
            Initializes a new instance of the <see cref="T:BlueDeck.Models.Persistence.MemberDutyStatusRepository"/> class.
            </summary>
            <param name="context">A <see cref="T:BlueDeck.Models.ApplicationDbContext"/></param>
        </member>
        <member name="M:BlueDeck.Persistence.Repositories.MemberDutyStatusRepository.GetMemberDutyStatusSelectListItems">
            <summary>
            Gets a list of <see cref="T:BlueDeck.Types.MemberGenderSelectListItem" />s.
            </summary>
            <remarks>
            This method is used to populate Gender select lists.
            </remarks>
            <returns>
            A <see cref="T:List{BlueDeck.Models.Types.MemberGenderSelectListItem}" />
            </returns>
        </member>
        <member name="P:BlueDeck.Persistence.Repositories.MemberDutyStatusRepository.ApplicationDbContext">
            <summary>
            Gets the application database context.
            </summary>
            <value>
            The application database context.
            </value>
        </member>
        <member name="T:BlueDeck.Persistence.Repositories.MemberGenderRepository">
            <summary>
            A repository for the MemberGender entity.
            </summary>
            <seealso cref="T:BlueDeck.Persistence.Repositories.Repository{BlueDeck.Models.Types.MemberGender}" />
            <seealso cref="T:BlueDeck.Models.Repositories.IMemberGenderRepository" />
        </member>
        <member name="M:BlueDeck.Persistence.Repositories.MemberGenderRepository.#ctor(BlueDeck.Models.ApplicationDbContext)">
            <summary>
            Initializes a new instance of the <see cref="T:BlueDeck.Persistence.Repositories.MemberGenderRepository"/> class.
            </summary>
            <param name="context">A <see cref="T:BlueDeck.Models.ApplicationDbContext"/></param>
        </member>
        <member name="M:BlueDeck.Persistence.Repositories.MemberGenderRepository.GetMemberGenderSelectListItems">
            <summary>
            Gets a list of <see cref="T:BlueDeck.Types.MemberGenderSelectListItem" />s.
            </summary>
            <remarks>
            This method is used to populate Gender select lists.
            </remarks>
            <returns>
            A <see cref="T:List{BlueDeck.Models.Types.MemberGenderSelectListItem}" />
            </returns>
        </member>
        <member name="P:BlueDeck.Persistence.Repositories.MemberGenderRepository.ApplicationDbContext">
            <summary>
            Gets the application database context.
            </summary>
            <value>
            The application database context.
            </value>
        </member>
        <member name="T:BlueDeck.Persistence.Repositories.MemberRaceRepository">
            <summary>
            A repository for the MemberRace entity.
            </summary>
            <seealso cref="T:BlueDeck.Persistence.Repositories.Repository{BlueDeck.Models.Types.MemberRace}" />
            <seealso cref="T:BlueDeck.Models.Repositories.IMemberRaceRepository" />
        </member>
        <member name="M:BlueDeck.Persistence.Repositories.MemberRaceRepository.#ctor(BlueDeck.Models.ApplicationDbContext)">
            <summary>
            Initializes a new instance of the <see cref="T:BlueDeck.Persistence.Repositories.MemberRaceRepository"/> class.
            </summary>
            <param name="context">A <see cref="T:BlueDeck.Models.ApplicationDbContext"/></param>
        </member>
        <member name="M:BlueDeck.Persistence.Repositories.MemberRaceRepository.GetMemberRaceSelectListItems">
            <summary>
            Gets a list of <see cref="T:BlueDeck.Types.MemberRaceSelectListItem" />s.
            </summary>
            <remarks>
            This method is used to populate Rank select lists.
            </remarks>
            <returns>
            A <see cref="T:List{BlueDeck.Models.Types.MemberRaceSelectListItem}" />
            </returns>
        </member>
        <member name="P:BlueDeck.Persistence.Repositories.MemberRaceRepository.ApplicationDbContext">
            <summary>
            Gets the application database context.
            </summary>
            <value>
            The application database context.
            </value>
        </member>
        <member name="T:BlueDeck.Persistence.Repositories.MemberRankRepository">
            <summary>
            A repository for the MemberRank entity.
            </summary>
            <seealso cref="T:BlueDeck.Persistence.Repositories.Repository{BlueDeck.Models.Types.MemberRank}" />
            <seealso cref="T:BlueDeck.Models.Repositories.IMemberRankRepository" />
        </member>
        <member name="M:BlueDeck.Persistence.Repositories.MemberRankRepository.#ctor(BlueDeck.Models.ApplicationDbContext)">
            <summary>
            Initializes a new instance of the <see cref="T:BlueDeck.Persistence.Repositories.MemberRankRepository"/> class.
            </summary>
            <param name="context">A <see cref="T:BlueDeck.Models.ApplicationDbContext"/></param>
        </member>
        <member name="M:BlueDeck.Persistence.Repositories.MemberRankRepository.GetMemberRankSelectListItems">
            <summary>
            Gets a list of <see cref="T:BlueDeck.Types.MemberRankSelectListItem" />s.
            </summary>
            <returns>
            A <see cref="T:List{BlueDeck.Models.Types.MemberRankSelectListItem}" />
            </returns>
            <remarks>
            This method is used to populate Rank select lists.
            </remarks>
        </member>
        <member name="P:BlueDeck.Persistence.Repositories.MemberRankRepository.ApplicationDbContext">
            <summary>
            Gets the application database context.
            </summary>
            <value>
            The application database context.
            </value>
        </member>
        <member name="T:BlueDeck.Persistence.Repositories.MemberRepository">
            <summary>
            A repository for the Member entity
            </summary>
            <seealso cref="T:BlueDeck.Persistence.Repositories.Repository{BlueDeck.Models.Member}" />
            <seealso cref="T:BlueDeck.Models.Repositories.IMemberRepository" />
        </member>
        <member name="M:BlueDeck.Persistence.Repositories.MemberRepository.#ctor(BlueDeck.Models.ApplicationDbContext)">
            <summary>
            Initializes a new instance of the <see cref="T:BlueDeck.Persistence.Repositories.MemberRepository"/> class.
            </summary>
            <param name="context">The <see cref="T:BlueDeck.Models.ApplicationDbContext"/>.</param>
        </member>
        <member name="P:BlueDeck.Persistence.Repositories.MemberRepository.ApplicationDbContext">
            <summary>
            Gets the application database context.
            </summary>
            <value>
            The application database context.
            </value>        
        </member>
        <member name="M:BlueDeck.Persistence.Repositories.MemberRepository.GetMembersWithPositions">
            <summary>
            Gets the members with positions.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Persistence.Repositories.MemberRepository.GetHomePageViewModelForMember(System.Int32)">
            <summary>
            Gets the home page view model for member.
            </summary>
            <remarks>
            This is an attempt to try and apply some better SOLID principals to the
            way I build these viewModels...
            </remarks>
            <param name="memberId">The member identifier.</param>
            <returns></returns>
        </member>
        <member name="T:BlueDeck.Persistence.Repositories.PositionRepository">
            <summary>
            A repository for the Position entity
            </summary>
            <seealso cref="T:BlueDeck.Persistence.Repositories.Repository{BlueDeck.Models.Position}" />
            <seealso cref="T:BlueDeck.Models.Repositories.IPositionRepository" />
        </member>
        <member name="M:BlueDeck.Persistence.Repositories.PositionRepository.#ctor(BlueDeck.Models.ApplicationDbContext)">
            <summary>
            Initializes a new instance of the <see cref="T:BlueDeck.Persistence.Repositories.PositionRepository"/> class.
            </summary>
            <param name="context">An <see cref="T:BlueDeck.Models.ApplicationDbContext"/>.</param>
        </member>
        <member name="P:BlueDeck.Persistence.Repositories.PositionRepository.ApplicationDbContext">
            <summary>
            Gets the application database context.
            </summary>
            <value>
            The application database context.
            </value>
        </member>
        <member name="M:BlueDeck.Persistence.Repositories.PositionRepository.GetPositionsWithMembers">
            <summary>
            Gets the Positions with their Members.
            </summary>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Persistence.Repositories.PositionRepository.RemovePositionAndReassignMembers(System.Int32,System.String)">
            <summary>
            Removes the position and reassigns any members.
            </summary>
            <param name="id">The identifier.</param>
            <param name="newPositionName">New name of the position.</param>
        </member>
        <member name="T:BlueDeck.Persistence.Repositories.Repository`1">
            <summary>
            Represents CRUD actions common to DbContext entities
            </summary>
            <typeparam name="TEntity">The type of the entity.</typeparam>
            <seealso cref="T:BlueDeck.Models.Repositories.IRepository{TEntity}" />
        </member>
        <member name="F:BlueDeck.Persistence.Repositories.Repository`1.Context">
            <summary>
            An <see cref="T:DbContext"/> context
            </summary>
        </member>
        <member name="M:BlueDeck.Persistence.Repositories.Repository`1.#ctor(Microsoft.EntityFrameworkCore.DbContext)">
            <summary>
            Initializes a new instance of the <see cref="T:BlueDeck.Persistence.Repositories.Repository{TEntity}"/> class.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:BlueDeck.Persistence.Repositories.Repository`1.Get(System.Int32)">
            <summary>
            Gets the Entity with the given identifier.
            </summary>
            <param name="id">The identifier for the desired entity.</param>
            <returns>
            A <see cref="T:TEntity" />
            </returns>
        </member>
        <member name="M:BlueDeck.Persistence.Repositories.Repository`1.GetAll">
            <summary>
            Gets Entities in the Repository
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerable{T}" /> of the Entity.
            </returns>
        </member>
        <member name="M:BlueDeck.Persistence.Repositories.Repository`1.Find(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Finds the Entities that match the specified predicate.
            </summary>
            <param name="predicate">The predicate LINQ Lambda Expression delegate.</param>
            <returns>
            An <see cref="T:System.Collections.IEnumerable{T}" /> of the Entity.
            </returns>
            <remarks>
            This Method can accept LINQ Lambda Expression delegates
            </remarks>
        </member>
        <member name="M:BlueDeck.Persistence.Repositories.Repository`1.SingleOrDefault(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Finds a Single Entity based on the predicate.
            </summary>
            <param name="predicate">The predicate LINQ Lambda Expression delegate.</param>
            <returns>
            A <see cref="T:TEntity" />
            </returns>
            <remarks>
            This Method can accept LINQ Lambda Expression delegates
            </remarks>
        </member>
        <member name="M:BlueDeck.Persistence.Repositories.Repository`1.Add(`0)">
            <summary>
            Adds the specified entity.
            </summary>
            <param name="entity">The Entity to add.</param>
        </member>
        <member name="M:BlueDeck.Persistence.Repositories.Repository`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Adds a range of Entities.
            </summary>
            <param name="entities">An <see cref="T:IEnumerable{T}" /> of entities to add.</param>
        </member>
        <member name="M:BlueDeck.Persistence.Repositories.Repository`1.Remove(`0)">
            <summary>
            Removes the specified entity.
            </summary>
            <param name="entity">The <see cref="T:TEntity:" /> to add.</param>
        </member>
        <member name="M:BlueDeck.Persistence.Repositories.Repository`1.RemoveRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Removes a range of <see cref="T:TEntity" />.
            </summary>
            <param name="entities">An <see cref="T:IEnumerable{T}" /> of entities to remove.</param>
        </member>
        <member name="T:BlueDeck.Persistence.UnitOfWork">
            <summary>
            An instance of <see cref="T:BlueDeck.Models.IUnitOfWork"/>
            </summary>
            <seealso cref="T:BlueDeck.Models.IUnitOfWork" />
        </member>
        <member name="M:BlueDeck.Persistence.UnitOfWork.#ctor(BlueDeck.Models.ApplicationDbContext)">
            <summary>
            Initializes a new instance of the <see cref="T:BlueDeck.Persistence.UnitOfWork"/> class.
            </summary>
            <param name="context">An <see cref="T:BlueDeck.Models.ApplicationDbContext"/>.</param>
        </member>
        <member name="P:BlueDeck.Persistence.UnitOfWork.Positions">
            <summary>
            Gets an <see cref="T:BlueDeck.Models.Repositories.IPositionRepository" />
            </summary>
            <value>
            The Interface representing the Position Entity.
            </value>
            <seealso cref="T:BlueDeck.Models.Repositories.IPositionRepository" />
        </member>
        <member name="P:BlueDeck.Persistence.UnitOfWork.Components">
            <summary>
            Gets an <see cref="T:BlueDeck.Models.Repositories.IComponentRepository" />
            </summary>
            <value>
            The Interface representing the Component Entity.
            </value>
            <seealso cref="T:BlueDeck.Models.Repositories.IComponentRepository" />
        </member>
        <member name="P:BlueDeck.Persistence.UnitOfWork.Members">
            <summary>
            Gets an <see cref="T:BlueDeck.Models.Repositories.IMemberRepository" />
            </summary>
            <value>
            The Interface representing the Member Entity.
            </value>
            <seealso cref="T:BlueDeck.Models.Repositories.IMemberRepository" />
        </member>
        <member name="P:BlueDeck.Persistence.UnitOfWork.MemberRanks">
            <summary>
            Gets an <see cref="T:BlueDeck.Models.Repositories.IMemberRankRepository" />
            </summary>
            <value>
            The Interface representing the MemberRanks Entity.
            </value>
            <seealso cref="T:BlueDeck.Models.Repositories.IPositionRepository" />
        </member>
        <member name="P:BlueDeck.Persistence.UnitOfWork.MemberGenders">
            <summary>
            Gets an <see cref="T:BlueDeck.Models.Repositories.IMemberGenderRepository" />
            </summary>
            <value>
            The Interface representing the MemberGender Entity.
            </value>
            <seealso cref="T:BlueDeck.Models.Repositories.IMemberGenderRepository" />
        </member>
        <member name="P:BlueDeck.Persistence.UnitOfWork.MemberRaces">
            <summary>
            Gets an <see cref="T:BlueDeck.Models.Repositories.IMemberRaceRepository" />
            </summary>
            <value>
            The Interface representing the MemberRace Entity.
            </value>
            <seealso cref="T:BlueDeck.Models.Repositories.IMemberRaceRepository" />
        </member>
        <member name="P:BlueDeck.Persistence.UnitOfWork.MemberDutyStatus">
            <summary>
            Gets an <see cref="T:BlueDeck.Models.Repositories.IMemberDutyStatusRepository" />
            </summary>
            <value>
            The Interface representing the MemberRace Entity.
            </value>
            <seealso cref="T:BlueDeck.Models.Repositories.IMemberDutyStatusRepository" />
        </member>
        <member name="M:BlueDeck.Persistence.UnitOfWork.Complete">
            <summary>
            Saves changes made in the Unit of Work to ensure consistent updates
            </summary>
            <returns></returns>
        </member>
        <member name="M:BlueDeck.Persistence.UnitOfWork.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:BlueDeck.Program">
            <summary>
            Program Starting Routine
            </summary>
        </member>
        <member name="M:BlueDeck.Program.Main(System.String[])">
            <summary>
            Defines the entry point of the application.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:BlueDeck.Program.CreateWebHostBuilder(System.String[])">
            <summary>
            Creates the web host builder.
            </summary>
            <param name="args">The arguments.</param>
            <returns></returns>
        </member>
        <member name="T:BlueDeck.Startup">
            <summary>
            Startup Class
            </summary>
        </member>
        <member name="M:BlueDeck.Startup.#ctor(Microsoft.AspNetCore.Hosting.IHostingEnvironment)">
            <summary>
            Initializes a new instance of the <see cref="T:BlueDeck.Startup"/> class.
            </summary>
            <param name="env">An <see cref="T:Microsoft.AspNetCore.Hosting.IHostingEnvironment"/> object.</param>
        </member>
        <member name="M:BlueDeck.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            This method gets called by the runtime. Use this method to add services to the container.
            For more information on how to configure your application, visit https://go.microsoft.com/fwlink/?LinkID=398940   
            </summary>
            <param name="services">An <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></param>
        </member>
        <member name="M:BlueDeck.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IHostingEnvironment)">
            <summary>
            This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
            </summary>
            <param name="app">An <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/> object.</param>
            <param name="env">An <see cref="T:Microsoft.AspNetCore.Hosting.IHostingEnvironment"/> object.</param>
        </member>
        <member name="T:BlueDeck.ViewComponents.NavigationMenuViewComponent">
            <summary>
            A ViewComponent that renders the Navigation Sidebar
            </summary>
            <seealso cref="T:Microsoft.AspNetCore.Mvc.ViewComponent" />
        </member>
        <member name="M:BlueDeck.ViewComponents.NavigationMenuViewComponent.Invoke">
            <summary>
            Invokes the default <see cref="T:BlueDeck.ViewComponents.NavigationMenuViewComponent" />
            </summary>
            <returns></returns>              
        </member>
    </members>
</doc>
